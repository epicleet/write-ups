Gadgets information
============================================================
0x000000000043d5ff : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d669 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d19d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004af460 : adc al, 0 ; add byte ptr [rax], al ; sub byte ptr [rax + rax], bh ; add byte ptr [rax], ch ; ret 0xfff7
0x000000000042da45 : adc al, 0x13 ; jmp rdx
0x0000000000425d05 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048ceba : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e911 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004449d0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000471e28 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043ea90 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d1be : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042da41 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040d2c0 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000424907 : adc al, 0xa ; jmp r10
0x0000000000425e73 : adc al, 0xa ; sub eax, edx ; ret
0x000000000041f848 : adc al, 0xa0 ; sub dword ptr [rax], eax ; ret
0x0000000000446f4f : adc al, 0xe ; cmp rdi, rdx ; jb 0x446f62 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042a2ea : adc al, 0xe ; sub eax, edx ; ret
0x000000000042bfba : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000041297b : adc al, 0xf6 ; ret 0x7420
0x000000000048d23d : adc al, 0xf7 ; ret
0x0000000000493f71 : adc al, 0xf9 ; jmp qword ptr [rax - 0x1f0006eb]
0x0000000000494ee9 : adc al, 0xfa ; call qword ptr [rax + 0x10fffa15]
0x0000000000494f29 : adc al, 0xfa ; call qword ptr [rax]
0x0000000000424526 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000043d7a7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d811 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040108a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004943dc : adc bh, bl ; stc ; push rax ; loopne 0x4943e3 ; jmp rax
0x000000000042486a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000495120 : adc bh, dh ; cli ; jmp qword ptr [rax]
0x0000000000494565 : adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x000000000049475d : adc bh, dl ; call qword ptr [rax]
0x0000000000494621 : adc bh, dl ; call rdx
0x000000000049461d : adc bh, dl ; inc dword ptr [rdx + 0x12] ; cli ; call rdx
0x00000000004945a1 : adc bh, dl ; jmp rsi
0x0000000000440e95 : adc bl, ch ; call 0xffffffffc41497ea
0x0000000000440db5 : adc bl, ch ; call 0xffffffffc43c970a
0x0000000000482de2 : adc bl, ch ; jno 0x482e38 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000444306 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444377 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004442d7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444305 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f25a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000419205 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000048384e : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045bfe9 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000484063 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045b205 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045b9e6 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000481d3f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000411602 : adc byte ptr [r8 + 1], r9b ; ret
0x00000000004187ef : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047c35f : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041162d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004b504c : adc byte ptr [rax + 0x35b00000], bl ; std ; jmp qword ptr [rcx]
0x000000000048405d : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041ea73 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041adac : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b128 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000423a66 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000481d40 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000041307e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000411603 : adc byte ptr [rax + 1], cl ; ret
0x0000000000410a07 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000400ebe : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000475a95 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000488d3f : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000041ca0d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044c085 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000458908 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000470ab7 : adc byte ptr [rax - 0x77], cl ; jo 0x470ad5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470a77 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000470a7b : adc byte ptr [rax - 0x77], cl ; ret
0x000000000042221f : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041dde1 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x00000000004187f0 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000416fcf : adc byte ptr [rax - 0x78], al ; jl 0x416ff1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000411453 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000441077 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004410b3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401090 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004198a3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004555e8 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x0000000000494f08 : adc byte ptr [rax], ah ; cli ; call qword ptr [rax - 0x2f0005df]
0x000000000043f05c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d9b1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044822c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004947a8 : adc byte ptr [rax], cl ; cli ; call qword ptr [rax + 0x10fffa07]
0x0000000000494f1c : adc byte ptr [rax], dl ; cli ; call qword ptr [rax + 0x10fffa11]
0x000000000048e168 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048afc8 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x0000000000413cb4 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410873 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000419206 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3adf : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044c093 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044c092 : adc byte ptr [rbx - 0x16], sil ; ret
0x00000000004183d2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000470fae : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004941e4 : adc byte ptr [rbx - 0x42ef0007], bh ; stc ; call qword ptr [rax]
0x0000000000494f24 : adc byte ptr [rbx], dl ; cli ; call qword ptr [rax + 0x10fffa14]
0x000000000041162e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004720b3 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004941e0 : adc byte ptr [rcx - 0x44ef0007], bh ; stc ; call qword ptr [rax]
0x000000000044b002 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048abcf : adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000419157 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000045bf81 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042a37d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000048269a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000448b89 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000494f34 : adc byte ptr [rcx], bl ; cli ; call qword ptr [rax + 0x10fffa1a]
0x00000000004183d5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004947a0 : adc byte ptr [rcx], cl ; cli ; call qword ptr [rax + 0x10fffa08]
0x0000000000411f77 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000494ee0 : adc byte ptr [rcx], dl ; cli ; call qword ptr [rax + 0x10fffa12]
0x0000000000494f90 : adc byte ptr [rdi - 6], al ; jmp qword ptr [rax]
0x00000000004947b0 : adc byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x10fffa06]
0x0000000000494f44 : adc byte ptr [rdi], bl ; cli ; call qword ptr [rax + 0x10fffa20]
0x000000000048384f : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045bfea : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000444be3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042a761 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a851 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a671 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b0b9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042ac11 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a3a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042adf1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a581 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042afd1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042aee1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a823 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a913 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a733 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a491 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a643 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a463 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a553 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a373 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045b206 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045b9e7 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000449f89 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000494ef0 : adc byte ptr [rdi], dl ; cli ; call qword ptr [rax + 0x10fffa18]
0x0000000000483f11 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x000000000048324d : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004ad173 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042df39 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000494f3c : adc byte ptr [rdx + rdi*8], bl ; call qword ptr [rax + 0x10fffa1d]
0x0000000000494ee8 : adc byte ptr [rdx + rdi*8], dl ; call qword ptr [rax + 0x10fffa15]
0x000000000049475c : adc byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x0000000000494ef8 : adc byte ptr [rdx], bl ; cli ; call qword ptr [rax + 0x10fffa1b]
0x000000000042ce7b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000494f00 : adc byte ptr [rip + 0x1e90fffa], bl ; cli ; call qword ptr [rax]
0x0000000000494f14 : adc byte ptr [rip + 0xe90fffa], cl ; cli ; call qword ptr [rax]
0x000000000042cd2a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042c325 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424a55 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438f7b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000044b30c : adc byte ptr [rsi - 3], cl ; push rbx ; ret
0x00000000004947b8 : adc byte ptr [rsi], al ; cli ; call qword ptr [rax + 0x10fffa05]
0x0000000000494ed8 : adc byte ptr [rsi], cl ; cli ; call qword ptr [rax + 0x10fffa0f]
0x00000000004b2e4c : adc byte ptr [rsi], dh ; add byte ptr [rax], dh ; add al, 0xfc ; jmp rdx
0x0000000000494f2c : adc byte ptr [rsi], dl ; cli ; call qword ptr [rax + 0x10fffa17]
0x000000000049450c : adc ch, 0xf9 ; inc eax ; sar cl, 0xff ; nop ; ret
0x00000000004943f8 : adc ch, bl ; stc ; push rax ; fdivp st(1) ; call rax
0x000000000042444a : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000493f65 : adc cl, bh ; jmp rax
0x0000000000494430 : adc cl, bl ; stc ; call rax
0x000000000045d4cf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044c64a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000440da5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000045d4d2 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000485f1a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045c2a5 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000496550 : adc dh, byte ptr [rcx - 5] ; lcall ptr [rsi + 0x72] ; sti ; call qword ptr [rdi]
0x000000000041c45e : adc dh, dh ; ret 0xf0f
0x0000000000494620 : adc dil, dl ; call rdx
0x000000000046323c : adc dl, 0xf9 ; dec dword ptr [rax + 0x29] ; ret
0x0000000000494f1d : adc dl, bh ; call qword ptr [rax + 0x10fffa11]
0x0000000000494631 : adc dl, bh ; call qword ptr [rdx]
0x0000000000494575 : adc dl, bh ; call rax
0x0000000000494571 : adc dl, bh ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x00000000004945b1 : adc dl, bh ; jmp qword ptr [rsi]
0x0000000000494771 : adc dl, bh ; jmp rax
0x0000000000494494 : adc dl, bl ; stc ; jmp rax
0x00000000004950c8 : adc dl, dh ; cli ; jmp qword ptr [rax]
0x0000000000494574 : adc dl, dil ; call rax
0x000000000047002b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045abad : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000041161f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004051af : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000471644 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043f05b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043d947 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef5f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045b215 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000047833b : adc dword ptr [rbp + 0x24], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004471a8 : adc dword ptr [rbx], eax ; ret
0x0000000000447121 : adc dword ptr [rbx], esp ; ret
0x00000000004388a7 : adc dword ptr [rcx + 7], edi ; ret
0x000000000044711c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000489886 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000438542 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438506 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046f42e : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x46f404
0x00000000004471a3 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446f03 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000447085 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044708a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000447062 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000447067 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000438a09 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000446f00 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446cfc : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000446e2f : adc dword ptr [rsi + 3], edx ; ret
0x0000000000446ecc : adc dword ptr [rsi + 7], edx ; ret
0x0000000000446cce : adc dword ptr [rsi - 1], edx ; ret
0x000000000048ae46 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043d946 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000424524 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000493f75 : adc eax, 0x16e0fff9 ; stc ; jmp qword ptr [rax]
0x0000000000423870 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x0000000000424700 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000424495 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000423809 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045ab89 : adc eax, 0x25ff2a ; je 0x45aba0 ; ret
0x000000000044d467 : adc eax, 0x26b64c ; pop rbx ; ret
0x0000000000423840 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x00000000004190f4 : adc eax, 0x2a0737 ; ret
0x00000000004743cb : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047bc32 : adc eax, 0x4000003 ; ret
0x000000000047bb82 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x000000000042394a : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x000000000043d4d1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000469685 : adc eax, 0x83fffffd ; ret
0x0000000000478d31 : adc eax, 0x89000003 ; ret 0xe8c0
0x000000000047489a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004247c4 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000424684 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x000000000049524c : adc eax, 0xefffb30 ; xor bl, bh ; jmp qword ptr [rbx]
0x0000000000447d54 : adc eax, 0xf880272 ; ret
0x0000000000473d05 : adc eax, 0xfffd41f6 ; cmove rax, rdx ; ret
0x000000000043edbe : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042380b : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004843c9 : adc eax, eax ; ret
0x000000000048cb0d : adc eax, edi ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000484506 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a79a5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000412ca7 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000475a9c : adc ebx, esi ; ret
0x00000000004171ea : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040ead1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004578d4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000468e76 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x0000000000493f69 : adc ecx, edi ; jmp qword ptr [rax]
0x000000000047f0fe : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f19b : adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000494f25 : adc edi, edx ; call qword ptr [rax + 0x10fffa14]
0x0000000000494615 : adc edi, edx ; jmp qword ptr [rdx]
0x0000000000494559 : adc edi, edx ; jmp rax
0x00000000004ab795 : adc edi, esi ; jmp rsp
0x00000000004b3039 : adc edi, esp ; jmp qword ptr [rax]
0x0000000000494ee1 : adc edx, edi ; call qword ptr [rax + 0x10fffa12]
0x0000000000494f21 : adc edx, edi ; call qword ptr [rax]
0x00000000004945ad : adc edx, edi ; call qword ptr [rsi + 0x26fffa10]
0x00000000004946e9 : adc edx, edi ; call rsp
0x00000000004946e5 : adc edx, edi ; inc dword ptr [rcx + rdx - 6] ; call rsp
0x0000000000494569 : adc edx, edi ; jmp qword ptr [rax]
0x00000000004946e8 : adc edx, r15d ; call rsp
0x00000000004a8ebe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004165b3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048dfdc : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412979 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004ab3c1 : adc esi, edi ; call qword ptr [rcx + rdx]
0x00000000004ab3c5 : adc esi, edi ; jmp rsp
0x00000000004ab3c0 : adc esi, r15d ; call qword ptr [rcx + rdx]
0x00000000004388a6 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000438541 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000438505 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000438a08 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000446e2e : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000446ecb : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000446ccd : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000484505 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004b181b : add ah, ah ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x000000000044817e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000044825b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004481c9 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b2193 : add ah, bh ; xchg eax, edx ; sti ; jmp qword ptr [rax]
0x00000000004b1817 : add ah, bl ; pop rdi ; add byte ptr [rax], al ; in al, 0x93 ; cli ; call qword ptr [rcx]
0x0000000000446e2a : add ah, byte ptr [rdx - 0xf] ; jl 0x446e7f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b29ea : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004b0243 : add ah, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004b1523 : add ah, cl ; jb 0x4b1525 ; jmp rax
0x00000000004af62f : add ah, dh ; cmp eax, 0x958c0000 ; clc ; jmp qword ptr [rsi]
0x0000000000400a59 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x0000000000453213 : add al, 0 ; add bh, dh ; ret 0
0x0000000000453207 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000456f0f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004111a0 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000004abd25 : add al, 0 ; add byte ptr [rax - 0x6d], bh ; cmc ; call qword ptr [rdx]
0x000000000042acd7 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046f346 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000043fc7f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ad05 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e100 : add al, 0 ; add byte ptr [rax], al ; jne 0x48e127 ; ret
0x0000000000474923 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000472640 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a071 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac74 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409f30 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424475 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x0000000000455852 : add al, 0 ; mov edx, 0x22f ; call 0x401b59
0x00000000004492d1 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000448125 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000475a9b : add al, 0x11 ; ret
0x0000000000448214 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000425d01 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000425c9a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000486d10 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048ad47 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aa4b : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489c44 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045abea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048431b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484367 ; leave ; ret
0x000000000040e9d7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000047346e : add al, 0x31 ; ret
0x000000000047336a : add al, 0x37 ; ret
0x0000000000417a6f : add al, 0x3a ; ret
0x000000000047f9d6 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f98a ; xor eax, eax ; ret
0x000000000044483b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000443d49 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000443d5b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000048d250 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000043544a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000442589 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000473744 : add al, 0x48 ; xor eax, eax ; ret
0x00000000004b0240 : add al, 0x4a ; add byte ptr [rax], al ; in al, dx ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x000000000047e766 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e714 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000474008 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000045654a : add al, 0x4d ; cmp ebp, ebx ; jb 0x4565c0 ; mov rdx, rax ; jmp 0x456517
0x0000000000443d57 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442597 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004578d2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000046eb28 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043d1bb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043ea93 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401fa7 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000448758 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448748 ; ret
0x000000000043adc7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044d539 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048c0ea : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000466c49 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004743f9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048c9eb : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046e9bc : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048b099 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046f158 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000443d46 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000442586 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048ae73 : add al, 0x88 ; add rax, r8 ; jmp rax
0x000000000044875b : add al, 0x8a ; je 0x448745 ; ret
0x00000000004481e3 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c623 : add al, 0x99 ; add rax, r9 ; jmp rax
0x00000000004492d5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c17f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047caa7 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000448129 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046bd20 : add al, 0xc6 ; jmp rax
0x0000000000460eba : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000046151a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460e70 : add al, 0xc7 ; jmp rax
0x000000000046bd5b : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x00000000004b079c : add al, 0xcd ; stc ; jmp qword ptr [rdx]
0x000000000048445d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x4844b9
0x000000000048825d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x4882b9
0x00000000004591c1 : add al, 0xe8 ; test rax, rax ; je 0x4591d1 ; call rax
0x0000000000484d08 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a2e6 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000446c3b : add al, 0xf ; sub rax, rsi ; ret
0x00000000004357b3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044994b : add al, 0xf3 ; ret
0x000000000046092e : add al, 0xf8 ; jmp rax
0x00000000004949c1 : add al, 0xfa ; call qword ptr [rax]
0x0000000000494981 : add al, 0xfa ; jmp qword ptr [rax]
0x00000000004b2e51 : add al, 0xfc ; jmp rdx
0x00000000004b4969 : add al, 0xfd ; jmp qword ptr [rdx]
0x00000000004b4981 : add al, 0xfd ; jmp rdx
0x000000000040eff7 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d587 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000463491 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x00000000004401ad : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046bd1c : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004403c8 : add al, 7 ; ret
0x0000000000425e6f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b32af : add al, ah ; and bh, ah ; jmp qword ptr [rcx]
0x00000000004af61b : add al, ah ; cmp eax, 0x95900000 ; clc ; call qword ptr [rax]
0x00000000004b101b : add al, ah ; push rdi ; add byte ptr [rax], al ; and byte ptr [rdi], bl ; cli ; call qword ptr [rdi]
0x000000000049f1c7 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000448275 : add al, bh ; jg 0x448277 ; int1 ; mov eax, eax ; ret
0x00000000004b4633 : add al, bh ; lea eax, dword ptr [rax] ; add byte ptr [rax - 0x17], bh ; cld ; jmp qword ptr [rcx]
0x00000000004b4967 : add al, bl ; add al, 0xfd ; jmp qword ptr [rdx]
0x00000000004b1807 : add al, bl ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x0000000000440da1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040108b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045520d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047afe0 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000045f7b3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042b1e2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000048813e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045ac7d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000401075 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000468b14 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000423423 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047c35a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000478495 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000447764 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042172a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004549ab : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042aeb7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e851 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aee5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045ab72 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047dc56 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044a729 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000004746b4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004461e4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000410c06 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000485a44 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000041adf6 : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000424423 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000042380c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048592d : add al, byte ptr [rax] ; mov edx, 0xcc ; call 0x401b59
0x000000000048ae42 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c17b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047caa3 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484e8a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d47a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d46e
0x000000000044b005 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044be4e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004ac0dd : add al, byte ptr [rdx] ; ret 0xb00e
0x00000000004247f1 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x00000000004245dd : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x00000000004abd23 : add al, ch ; add al, 0 ; add byte ptr [rax - 0x6d], bh ; cmc ; call qword ptr [rdx]
0x0000000000452549 : add al, ch ; add esi, esi ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000454de6 : add al, ch ; int 0xfa
0x0000000000400ba5 : add al, ch ; jmp 0x400bb2
0x000000000046fb4b : add al, ch ; lahf ; ret 0xfffd
0x00000000004b01c7 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004557ee : add al, ch ; pop rsp ; ret
0x000000000044fac4 : add al, ch ; push rsi ; ret
0x000000000047f8b7 : add al, ch ; ret
0x0000000000422558 : add al, ch ; ret 0x298
0x0000000000448a38 : add al, ch ; ret 0xbb75
0x0000000000402f38 : add al, ch ; ret 0xbfd0
0x000000000048f598 : add al, ch ; ret 0xf902
0x000000000044d8d8 : add al, ch ; ret 0xfde1
0x0000000000400bb8 : add al, ch ; sal bh, cl ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000455831 : add al, ch ; sbb ebx, eax ; cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000400b57 : add al, ch ; xor edi, eax ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004ac303 : add al, cl ; or al, byte ptr [rax] ; add byte ptr [rax], ch ; sub esi, esi ; call qword ptr [rax]
0x00000000004b2e97 : add al, cl ; or bh, ah ; jmp qword ptr [rax]
0x00000000004b0c03 : add al, cl ; push rbx ; add byte ptr [rax], al ; or dl, bh ; std ; jmp qword ptr [rdx]
0x00000000004ac247 : add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004b497f : add al, dh ; add al, 0xfd ; jmp rdx
0x00000000004ac32b : add al, dh ; or al, byte ptr [rax] ; add byte ptr [rax], dh ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004b182f : add al, dh ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x00000000004af66f : add al, dl ; fdivr st(0) ; call qword ptr [rax]
0x00000000004b01af : add al, dl ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004b17ef : add al, dl ; xchg eax, ebx ; cli ; call qword ptr [rdi]
0x0000000000494520 : add bh, 0xf9 ; call rax
0x00000000004b3ff6 : add bh, ah ; ret
0x000000000044e8bf : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045eb07 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040eacf : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040108d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048590f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000484599 : add bh, byte ptr [rax + 1] ; ret
0x00000000004846f6 : add bh, byte ptr [rax + 2] ; ret
0x000000000044966b : add bh, byte ptr [rax - 1] ; ret
0x00000000004465b2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000049511c : add bh, dh ; cli ; call qword ptr [rax]
0x00000000004ab2fd : add bh, dh ; ljmp ptr [rbx + rax - 2] ; call rsp
0x0000000000400e5a : add bh, dh ; ret 0
0x0000000000453209 : add bh, dh ; ret 0xf800
0x000000000040f10f : add bh, dh ; ret 0xffef
0x0000000000494791 : add bh, dl ; jmp qword ptr [rax + 0x20fffa0a]
0x00000000004b0dc5 : add bh, dl ; jmp qword ptr [rdx]
0x00000000004746b1 : add bl, al ; mov eax, 2 ; ret
0x000000000048815a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000494414 : add bl, bl ; stc ; jmp rax
0x0000000000463699 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x463632 ; ret
0x000000000048a06b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000485bd9 : add bl, ch ; ret
0x000000000040f3a8 : add bl, ch ; ret 0x1f0f
0x00000000004950f0 : add bl, dh ; cli ; jmp qword ptr [rax]
0x000000000048ae43 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a5f : add bl, dh ; ret
0x000000000041b0ee : add bl, sil ; ret
0x00000000004815f0 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004728e6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004553b5 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e1ca : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b01c5 : add byte ptr [r8], al ; call 0x224afb77
0x00000000004af961 : add byte ptr [r8], al ; insb byte ptr [rdi], dx ; jns 0x4af966 ; call rsp
0x00000000004b0799 : add byte ptr [r8], r8b ; add al, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004afdf5 : add byte ptr [r8], r8b ; xchg rax, rdx ; stc ; jmp qword ptr [rcx]
0x000000000042351f : add byte ptr [rax + 0x16], bh ; ret
0x0000000000412220 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000452991 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004534f7 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000465e58 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047a96a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004236a0 : add byte ptr [rax + 0x31], dl ; shr al, 0x57 ; ret
0x000000000040eaaf : add byte ptr [rax + 0x39], cl ; ret
0x000000000048b043 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a0ff : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004131ff : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b0d8 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047afe2 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041cfc0 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x000000000047833e : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004af693 : add byte ptr [rax + 0x3e], bl ; add byte ptr [rax], al ; pop rax ; hlt ; clc ; call qword ptr [rax]
0x00000000004af7ab : add byte ptr [rax + 0x3f], dh ; add byte ptr [rax], al ; mov al, 0x46 ; stc ; jmp qword ptr [rbx]
0x00000000004afab3 : add byte ptr [rax + 0x42], bh ; add byte ptr [rax], al ; test al, 0x84 ; stc ; call qword ptr [rbx]
0x00000000004afdf3 : add byte ptr [rax + 0x48000045], bh ; xchg eax, edx ; stc ; jmp qword ptr [rcx]
0x000000000040d2bd : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046eb25 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401fa4 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046f155 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000004492d2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000448126 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000459717 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048cb13 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000046f623 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045dc31 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004755bf : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000004755df : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000004755cf : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000004755ef : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x0000000000496517 : add byte ptr [rax + 0x70], ch ; sti ; lcall ptr [rsi] ; jae 0x496522 ; jmp rsi
0x0000000000489883 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000440d9f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004447df : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004b32ab : add byte ptr [rax + 0x7a], dh ; add byte ptr [rax], al ; loopne 0x4b32dc ; cld ; jmp qword ptr [rcx]
0x0000000000493f4f : add byte ptr [rax + 0xa], ah ; stc ; jmp qword ptr [rax - 0x1f0006f5]
0x0000000000424749 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x00000000004481f7 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041557f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004732d5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044fc8f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041cd74 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b176 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000423894 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000412f2a : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041de23 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b1c5 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000044816a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000042380d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042450d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000454028 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048455c : add byte ptr [rax + 1], bh ; ret
0x00000000004b48a7 : add byte ptr [rax + 1], bl ; std ; jmp qword ptr [rdx]
0x000000000042b1e4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004111a2 : add byte ptr [rax + 1], cl ; ret
0x0000000000483768 : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000488140 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x0000000000484765 : add byte ptr [rax + 2], bh ; ret
0x00000000004815f1 : add byte ptr [rax + 9], cl ; ret 0x840f
0x00000000004761e0 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049e16b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004504e3 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x000000000047263f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000424474 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041dccb : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473ce7 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000045ab8d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045ac7f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004b40b7 : add byte ptr [rax + rcx*4], bh ; add byte ptr [rdx + rcx*8], ah ; cld ; call rdx
0x000000000049f317 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000047ba34 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x00000000004b4637 : add byte ptr [rax - 0x17], bh ; cld ; jmp qword ptr [rcx]
0x000000000041d1df : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b01c3 : add byte ptr [rax - 0x17ffffb7], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004b17eb : add byte ptr [rax - 0x2fffffa1], dh ; xchg eax, ebx ; cli ; call qword ptr [rdi]
0x0000000000401077 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040fd53 : add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004651fb : add byte ptr [rax - 0x39], cl ; ret 0xb2c8
0x000000000045d4bf : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dc47 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000423425 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000468185 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000047490f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004748ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000047494f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004748ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047493f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004588d9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004588b0 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000458210 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000004b05af : add byte ptr [rax - 0x47], ah ; stc ; call qword ptr [rdx]
0x00000000004b0597 : add byte ptr [rax - 0x47], ch ; stc ; call qword ptr [rax]
0x00000000004b14e3 : add byte ptr [rax - 0x47ffffa4], ch ; int1 ; std ; jmp qword ptr [rdi]
0x00000000004615bf : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b19db : add byte ptr [rax - 0x4fffff9f], ah ; hlt ; std ; call rdx
0x00000000004b1b1f : add byte ptr [rax - 0x51], al ; cli ; call qword ptr [rax]
0x00000000004abdc3 : add byte ptr [rax - 0x57fffffb], cl ; cdq ; cmc ; call rax
0x00000000004b5ddf : add byte ptr [rax - 0x60], dl ; std ; jmp qword ptr [rax]
0x00000000004b5bff : add byte ptr [rax - 0x67], al ; std ; call qword ptr [rdx]
0x00000000004adce3 : add byte ptr [rax - 0x67ffffdc], ch ; mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004abd27 : add byte ptr [rax - 0x6d], bh ; cmc ; call qword ptr [rdx]
0x00000000004afdf7 : add byte ptr [rax - 0x6e], cl ; stc ; jmp qword ptr [rcx]
0x00000000004b48a3 : add byte ptr [rax - 0x70], ch ; add byte ptr [rax], al ; pop rax ; add ebp, edi ; jmp qword ptr [rdx]
0x00000000004551aa : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000045732d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044d42f : add byte ptr [rax - 0x73], cl ; add eax, 0x26cec9 ; ret
0x000000000045734b : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457369 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000477fe6 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041c45a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041ea6f : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ada8 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046b7fb : add byte ptr [rax - 0x73], cl ; xor eax, 0x24b61d ; jmp rax
0x000000000047c35c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041989f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485f17 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048aa48 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000461517 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460e6d : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000046092b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000457a2f : add byte ptr [rax - 0x75], cl ; add eax, 0x264441 ; ret
0x000000000044f52f : add byte ptr [rax - 0x75], cl ; add eax, 0x26d3f1 ; ret
0x00000000004186cf : add byte ptr [rax - 0x75], cl ; add eax, 0x2a0a49 ; ret
0x000000000040df6b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044e97f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004228ff : add byte ptr [rax - 0x75], cl ; je 0x422931 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045b61b : add byte ptr [rax - 0x75], cl ; jl 0x45b64c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040ea02 : add byte ptr [rax - 0x75], cl ; js 0x40ea2c ; call rdx
0x0000000000471f3f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486c60 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400f3d : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042f36f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041233f : add byte ptr [rax - 0x76b80000], al ; ret
0x00000000004b4183 : add byte ptr [rax - 0x77], cl ; add byte ptr [rax], al ; sbb ch, cl ; cld ; jmp qword ptr [rsi]
0x00000000004849f6 : add byte ptr [rax - 0x77], cl ; add eax, 0x23766a ; ret
0x000000000041976a : add byte ptr [rax - 0x77], cl ; add eax, 0x2a00ee ; ret
0x0000000000419265 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0583 ; ret
0x000000000041923d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a05a3 ; ret
0x000000000041921d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a05bb ; ret
0x00000000004129c2 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000414723 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004553b6 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000423788 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; pop rdi ; ret
0x000000000048b4ee : add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x00000000004182bb : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044c09f : add byte ptr [rax - 0x77], cl ; jo 0x44c0c9 ; ret
0x0000000000412b13 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000042357f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040389f : add byte ptr [rax - 0x77], cl ; ret
0x00000000004494cb : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041dc77 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000411276 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000041314a : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e8bc : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000449577 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402e1e : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000045fce8 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041af2c : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402b9f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000410208 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004492a3 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048e00f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000456418 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x00000000004031b3 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046a347 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f3dd : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004148a8 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004494e2 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000446fc0 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481c71 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048cc2f : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b6e3 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000041013f : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045d0f8 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x45d0c8
0x00000000004b40a3 : add byte ptr [rax - 0x78], ch ; add byte ptr [rax], al ; or dl, cl ; cld ; jmp qword ptr [rcx]
0x000000000048ab26 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000047373f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047199b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004b5877 : add byte ptr [rax - 0x7c], bl ; std ; call qword ptr [rbx]
0x00000000004afa3f : add byte ptr [rax - 0x7d], al ; stc ; call qword ptr [rdx]
0x00000000004afa67 : add byte ptr [rax - 0x7d], ch ; stc ; call qword ptr [rbx]
0x000000000048ed6e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047e2a7 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12eb7
0x000000000047e2a6 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12eb8
0x000000000041fc2c : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041d067 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041ccc4 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047f98d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004237cd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401ad9 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000461a23 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a851 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000416aff : add byte ptr [rax - 0x7d], cl ; jg 0x416b45 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041f0b2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000471956 : add byte ptr [rax - 0x7d], cl ; js 0x471994 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000405faf : add byte ptr [rax - 0x7d], cl ; ret
0x00000000004466af : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044c447 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046f167 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f22f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456074 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000048598f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dc5a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045dc14 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042a379 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e707 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048dfef : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046f348 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x00000000004241d0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d333 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3a7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047df17 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000425daf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000047387f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004895f2 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004afa17 : add byte ptr [rax - 0x7e], ch ; stc ; call qword ptr [rax]
0x0000000000422551 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x298
0x000000000045ab74 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000432fdb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004af697 : add byte ptr [rax - 0xc], bl ; clc ; call qword ptr [rax]
0x0000000000411cda : add byte ptr [rax - 1], bh ; ret
0x00000000004b0d3f : add byte ptr [rax - 2], ah ; stc ; call qword ptr [rax]
0x000000000046fb48 : add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fac1 : add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000422555 : add byte ptr [rax], 0 ; add al, ch ; ret 0x298
0x0000000000402f35 : add byte ptr [rax], 0 ; add al, ch ; ret 0xbfd0
0x0000000000415a4a : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000004148a5 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004357bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004481ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004184e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042c03b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c5a1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b504a : add byte ptr [rax], al ; adc byte ptr [rax + 0x35b00000], bl ; std ; jmp qword ptr [rcx]
0x00000000004b2e4a : add byte ptr [rax], al ; adc byte ptr [rsi], dh ; add byte ptr [rax], dh ; add al, 0xfc ; jmp rdx
0x00000000004b023e : add byte ptr [rax], al ; add al, 0x4a ; add byte ptr [rax], al ; in al, dx ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004b079a : add byte ptr [rax], al ; add al, 0xcd ; stc ; jmp qword ptr [rdx]
0x000000000046fb49 : add byte ptr [rax], al ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fac2 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x0000000000422556 : add byte ptr [rax], al ; add al, ch ; ret 0x298
0x0000000000402f36 : add byte ptr [rax], al ; add al, ch ; ret 0xbfd0
0x000000000048f596 : add byte ptr [rax], al ; add al, ch ; ret 0xf902
0x000000000045eb4e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040eacd : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048590d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004746af : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000485bd7 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f3a6 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000415a4b : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000468b68 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000465e56 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047a968 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041f29f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048b041 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a0fd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004131fd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b0d6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000046b284 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004447dd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004481f5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041cd72 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000485152 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000453012 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041de21 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000448168 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000004743cd : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000454026 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048455a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000483099 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000483766 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000484763 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000044a4a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040fd51 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000045d4bd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044990d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004588d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004588ae : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045820e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x000000000045732b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000457349 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457367 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000041989d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040ea00 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40ea2e ; call rdx
0x00000000004186fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000048b4ec : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000044c09d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c0cb ; ret
0x000000000042357d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000410181 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000411274 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000460144 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041b8fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e00d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046a5e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f3db : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004148a6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000048cc2d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048ab24 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000405fad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004466ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f22d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048598d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dc58 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042b093 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048dfed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000472bfe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043e9f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000425dad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004895f0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004347d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000411cd8 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000040eacb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048590b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004186bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004131fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000045d4bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044990b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004186fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044c09b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c0cd ; ret
0x000000000041b8fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e00b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048cc2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000405fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004466ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f22b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048dfeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000004172e6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049fff2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a04e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000041905b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004468eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000004260fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000412c7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000419dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042272b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a5eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004748cc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000481b1f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040eacc : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048590c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a201c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a11cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000448167 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048d1f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d1dc ; ret
0x0000000000485bd6 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485ba4
0x000000000045ff7d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000444e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000444e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000444e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000444e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000444d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444dac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000444ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444dec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000444d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000400c28 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x00000000004447dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004441bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041867c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000484559 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000484762 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000004357bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c09c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000481b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004186ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004186fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000480fac : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000412c7c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004481ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043590c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041905c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041183c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004172e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1784 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049fff4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a04e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042b8ec : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004175fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047372c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000444bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004af461 : add byte ptr [rax], al ; add byte ptr [rax], ch ; cmp al, 0 ; add byte ptr [rax], ch ; ret 0xfff7
0x00000000004b3fcd : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; ret 0xfffc
0x0000000000449624 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048508d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e101 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x000000000047594b : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481eb2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481df2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000457955 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482013 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000048431e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a73d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449854 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000475819 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000449be4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044a553 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000004883e8 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045accc : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000484faa : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d236 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000041f039 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000044bcd8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b0d3a : add byte ptr [rax], al ; add byte ptr [rbp], dl ; add byte ptr [rax - 2], ah ; stc ; call qword ptr [rax]
0x0000000000457b89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000043509d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000414252 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417204 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fcf9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d1f5 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046cf7d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x0000000000465f8a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000411564 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000460a67 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c848 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000469556 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d7e2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x00000000004468ed : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e153 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x00000000004920dd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473b0d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000049183d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423ebd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044b388 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b397 ; call r12
0x000000000044b3b8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b3c7 ; call r12
0x000000000045f361 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040483e : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479d62 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041ce95 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004260fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a0d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042bac0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042bae6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000040ece2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b3ca : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048cf63 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048cf8b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048dcda : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004633c3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040dbf4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481094 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x00000000004480f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043589d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043590d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004481ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000412c7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042b40d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004588f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000476880 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d165 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004afa3a : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax - 0x7d], al ; stc ; call qword ptr [rdx]
0x000000000042c5a2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419dfd : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042b332 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004ab86d : add byte ptr [rax], al ; add ch, bl ; push rdx ; cmc ; call qword ptr [rbx]
0x0000000000455473 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045ed88 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000454c26 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000400c29 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046a066 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e890 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004ab8ad : add byte ptr [rax], al ; add dh, bh ; push rdx ; cmc ; call qword ptr [rbx]
0x000000000045107c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000042272d : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a5ed : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000446041 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004748ce : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042b1e3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000411902 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d1a0 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004848ec : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048ac63 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041617b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449749 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000449adc : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000040156c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044b27e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000481b21 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004af95e : add byte ptr [rax], al ; and al, 0x41 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x4af969 ; call rsp
0x00000000004b40ba : add byte ptr [rax], al ; and al, 0xca ; cld ; call rdx
0x00000000004b1cfa : add byte ptr [rax], al ; and al, 0xdf ; cli ; call qword ptr [rsi]
0x00000000004b101e : add byte ptr [rax], al ; and byte ptr [rdi], bl ; cli ; call qword ptr [rdi]
0x00000000004481f6 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004b3d26 : add byte ptr [rax], al ; and cl, al ; hlt ; jmp qword ptr [rcx]
0x000000000042b40e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000440a30 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004732d4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b01c6 : add byte ptr [rax], al ; call 0x224afb76
0x0000000000455857 : add byte ptr [rax], al ; call 0x401b54
0x000000000046fb4a : add byte ptr [rax], al ; call 0x44bdf4
0x000000000040fb46 : add byte ptr [rax], al ; call 0x44be24
0x000000000040108c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040eace : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048cf69 : add byte ptr [rax], al ; call r14
0x000000000040e9db : add byte ptr [rax], al ; call rax
0x000000000048590e : add byte ptr [rax], al ; call rbx
0x00000000004a201e : add byte ptr [rax], al ; call rdi
0x000000000040e915 : add byte ptr [rax], al ; call rdx
0x00000000004a11ce : add byte ptr [rax], al ; call rsp
0x00000000004b5bfe : add byte ptr [rax], al ; cdq ; std ; call qword ptr [rdx]
0x0000000000448274 : add byte ptr [rax], al ; clc ; jg 0x448278 ; int1 ; mov eax, eax ; ret
0x00000000004b4632 : add byte ptr [rax], al ; clc ; lea eax, dword ptr [rax] ; add byte ptr [rax - 0x17], bh ; cld ; jmp qword ptr [rcx]
0x00000000004b2192 : add byte ptr [rax], al ; cld ; xchg eax, edx ; sti ; jmp qword ptr [rax]
0x00000000004481a1 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000448169 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000042444c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000423843 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b1b32 : add byte ptr [rax], al ; cmp al, 0xaf ; cli ; call qword ptr [rdx]
0x00000000004b5872 : add byte ptr [rax], al ; cmp byte ptr [rax - 0x7ba80000], ah ; std ; call qword ptr [rbx]
0x000000000047f98c : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000041f6b7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x41f688 ; ret
0x00000000004adce6 : add byte ptr [rax], al ; cwde ; mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004b5306 : add byte ptr [rax], al ; cwde ; pop rax ; std ; call qword ptr [rdx]
0x00000000004b0c02 : add byte ptr [rax], al ; enter 0x53, 0 ; or dl, bh ; std ; jmp qword ptr [rdx]
0x00000000004b5302 : add byte ptr [rax], al ; enter 0x9a, 0 ; cwde ; pop rax ; std ; call qword ptr [rdx]
0x00000000004afa12 : add byte ptr [rax], al ; fadd dword ptr [rcx] ; add byte ptr [rax - 0x7e], ch ; stc ; call qword ptr [rax]
0x00000000004b1816 : add byte ptr [rax], al ; fcomp qword ptr [rdi] ; add ah, ah ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x00000000004ab86e : add byte ptr [rax], al ; fst qword ptr [rdx - 0xb] ; call qword ptr [rbx]
0x00000000004af62e : add byte ptr [rax], al ; hlt ; cmp eax, 0x958c0000 ; clc ; jmp qword ptr [rsi]
0x0000000000400a58 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004b181a : add byte ptr [rax], al ; in al, 0x93 ; cli ; call qword ptr [rcx]
0x00000000004b0242 : add byte ptr [rax], al ; in al, dx ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004af962 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x4af965 ; call rsp
0x00000000004b4fb2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, 0xfd ; jmp qword ptr [rdx]
0x000000000048dcdb : add byte ptr [rax], al ; ja 0x48dce8 ; sbb eax, eax ; ret
0x0000000000412916 : add byte ptr [rax], al ; je 0x412921 ; ret
0x00000000004244b0 : add byte ptr [rax], al ; je 0x42447f ; ret
0x0000000000473ce9 : add byte ptr [rax], al ; je 0x473cf5 ; ret
0x000000000048d166 : add byte ptr [rax], al ; je 0x48d154 ; add rsp, 0x18 ; ret
0x000000000048d1f6 : add byte ptr [rax], al ; je 0x48d1da ; ret
0x000000000048d237 : add byte ptr [rax], al ; je 0x48d248 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004b4fae : add byte ptr [rax], al ; je 0x4b4f52 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, 0xfd ; jmp qword ptr [rdx]
0x00000000004b0dc2 : add byte ptr [rax], al ; jl 0x4b0dcd ; cli ; jmp qword ptr [rdx]
0x00000000004b40b6 : add byte ptr [rax], al ; jl 0x4b404b ; add byte ptr [rax], al ; and al, 0xca ; cld ; call rdx
0x000000000040f3a7 : add byte ptr [rax], al ; jmp 0x40f370
0x0000000000449461 : add byte ptr [rax], al ; jmp 0x4492f3
0x000000000045d05f : add byte ptr [rax], al ; jmp 0x45d028
0x0000000000485bd8 : add byte ptr [rax], al ; jmp 0x485ba2
0x000000000044a72b : add byte ptr [rax], al ; jmp rax
0x0000000000419fde : add byte ptr [rax], al ; jne 0x419ff1 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042c0a2 : add byte ptr [rax], al ; jne 0x42bfb8 ; ret
0x000000000044883d : add byte ptr [rax], al ; jne 0x44886d ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449625 : add byte ptr [rax], al ; jne 0x449641 ; add rsp, 0x28 ; ret
0x0000000000449855 : add byte ptr [rax], al ; jne 0x4498a3 ; add rsp, 0x58 ; ret
0x0000000000449be5 : add byte ptr [rax], al ; jne 0x449c3b ; add rsp, 0x68 ; ret
0x000000000044a554 : add byte ptr [rax], al ; jne 0x44a56f ; add rsp, 0x28 ; ret
0x000000000045accd : add byte ptr [rax], al ; jne 0x45acde ; add rsp, 0x18 ; ret
0x000000000047581a : add byte ptr [rax], al ; jne 0x47586b ; add rsp, 0x58 ; ret
0x000000000047594c : add byte ptr [rax], al ; jne 0x475973 ; add rsp, 0x38 ; ret
0x0000000000481cf8 : add byte ptr [rax], al ; jne 0x481d0b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481df3 : add byte ptr [rax], al ; jne 0x481e2b ; add rsp, 0x38 ; ret
0x0000000000481eb3 : add byte ptr [rax], al ; jne 0x481ee6 ; add rsp, 0x68 ; ret
0x0000000000482014 : add byte ptr [rax], al ; jne 0x482056 ; add rsp, 0x78 ; ret
0x00000000004822e3 : add byte ptr [rax], al ; jne 0x482316 ; add rsp, 0x68 ; ret
0x000000000048431f : add byte ptr [rax], al ; jne 0x484363 ; leave ; ret
0x0000000000484fab : add byte ptr [rax], al ; jne 0x484fbc ; add rsp, 0x38 ; ret
0x000000000048508e : add byte ptr [rax], al ; jne 0x4850ac ; add rsp, 0x38 ; ret
0x0000000000487859 : add byte ptr [rax], al ; jne 0x487864 ; pop rbx ; ret
0x00000000004883e9 : add byte ptr [rax], al ; jne 0x488404 ; add rsp, 0x38 ; ret
0x000000000048e102 : add byte ptr [rax], al ; jne 0x48e125 ; ret
0x00000000004af7aa : add byte ptr [rax], al ; jo 0x4af7f6 ; add byte ptr [rax], al ; mov al, 0x46 ; stc ; jmp qword ptr [rbx]
0x00000000004b32aa : add byte ptr [rax], al ; jo 0x4b3331 ; add byte ptr [rax], al ; loopne 0x4b32dd ; cld ; jmp qword ptr [rcx]
0x00000000004abd26 : add byte ptr [rax], al ; js 0x4abcc2 ; cmc ; call qword ptr [rdx]
0x00000000004afab2 : add byte ptr [rax], al ; js 0x4afb01 ; add byte ptr [rax], al ; test al, 0x84 ; stc ; call qword ptr [rbx]
0x00000000004b4636 : add byte ptr [rax], al ; js 0x4b4628 ; cld ; jmp qword ptr [rcx]
0x0000000000444e0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000444e1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444e2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000444e3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000444e4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000444d6d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444d8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444d9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444dae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444dbe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444dce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000444dde : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444d1a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444dee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444dfe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000444d7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000044d42e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x26cec9] ; ret
0x000000000046b7fa : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x24b61d] ; jmp rax
0x0000000000400c2a : add byte ptr [rax], al ; leave ; ret
0x00000000004af61a : add byte ptr [rax], al ; loopne 0x4af664 ; add byte ptr [rax], al ; nop ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004b101a : add byte ptr [rax], al ; loopne 0x4b107e ; add byte ptr [rax], al ; and byte ptr [rdi], bl ; cli ; call qword ptr [rdi]
0x00000000004b1b1a : add byte ptr [rax], al ; loopne 0x4b1b89 ; add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b32ae : add byte ptr [rax], al ; loopne 0x4b32d9 ; cld ; jmp qword ptr [rcx]
0x00000000004b504e : add byte ptr [rax], al ; mov al, 0x35 ; std ; jmp qword ptr [rcx]
0x00000000004af7ae : add byte ptr [rax], al ; mov al, 0x46 ; stc ; jmp qword ptr [rbx]
0x00000000004b19de : add byte ptr [rax], al ; mov al, 0xf4 ; std ; call rdx
0x0000000000443cee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000044253e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004b01c2 : add byte ptr [rax], al ; mov byte ptr [rcx], cl ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004129be : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000004447de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004441be : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004abdc2 : add byte ptr [rax], al ; mov byte ptr [rip - 0x66580000], al ; cmc ; call rax
0x0000000000471a3b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041927c : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a0588], eax ; ret
0x00000000004441ce : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042379e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000004afdf2 : add byte ptr [rax], al ; mov eax, 0x48000045 ; xchg eax, edx ; stc ; jmp qword ptr [rcx]
0x00000000004755be : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000004755de : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000004755ce : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000004755ee : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x0000000000411cd9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048455b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000484764 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000041839e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f57e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f599 ; ret
0x000000000048f7ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f7c9 ; ret
0x000000000047e6ef : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000468842 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000465fe1 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004441fe : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048cf64 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048cf8c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043509e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004357be : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c09e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484f28 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481c70 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488462 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488536 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b6b4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d28e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000484578 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000041923c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a05a3], rax ; ret
0x000000000041921c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a05bb], rax ; ret
0x000000000041792e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000004748ee : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004748fe : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047490e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047491e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000047492e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000047493e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000047494e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047cc83 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041182e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000481b2e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c49e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471f3e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004186ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d20e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d29e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d2fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d2ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d2ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000457a2e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x264441] ; ret
0x000000000044f53e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26d3f1] ; ret
0x00000000004186ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a0a49] ; ret
0x000000000048afde : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000473b0e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000413da4 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d408 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000414722 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004186fe : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041dcce : add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000446fbf : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b389 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040ea01 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004920de : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000049183e : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000046ef9f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004355fe : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000456417 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x4563d4
0x0000000000420316 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048dc7e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000042357e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004acd0a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rsi, esi ; jmp rdx
0x0000000000480fae : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048b095 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f154 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045a3bd : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000459ebe : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000412c7e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004481ae : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043522e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043590e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043589e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400ba9 : add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000400b5b : add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004af61e : add byte ptr [rax], al ; nop ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x000000000044bfb9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004af642 : add byte ptr [rax], al ; or byte ptr [rsi], bh ; add byte ptr [rax], al ; test al, 0xb7 ; clc ; call qword ptr [rax]
0x00000000004b0c06 : add byte ptr [rax], al ; or dl, bh ; std ; jmp qword ptr [rdx]
0x00000000004b40a6 : add byte ptr [rax], al ; or dl, cl ; cld ; jmp qword ptr [rcx]
0x00000000004af692 : add byte ptr [rax], al ; pop rax ; add byte ptr ds:[rax], al ; pop rax ; hlt ; clc ; call qword ptr [rax]
0x00000000004b48a6 : add byte ptr [rax], al ; pop rax ; add ebp, edi ; jmp qword ptr [rdx]
0x00000000004af696 : add byte ptr [rax], al ; pop rax ; hlt ; clc ; call qword ptr [rax]
0x00000000004b2e92 : add byte ptr [rax], al ; pop rax ; jbe 0x4b2ea0 ; add al, cl ; or bh, ah ; jmp qword ptr [rax]
0x00000000004b5876 : add byte ptr [rax], al ; pop rax ; test ch, bh ; call qword ptr [rbx]
0x000000000044a73e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a96 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000465f8b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000457b8a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000414253 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417205 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fcfa : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400df6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b0796 : add byte ptr [rax], al ; pop rsp ; add byte ptr [r8], r8b ; add al, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004b149e : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; pushfq ; jb 0x4b14aa ; call qword ptr [rdx]
0x0000000000496516 : add byte ptr [rax], al ; push 0x1efffb70 ; jae 0x496523 ; jmp rsi
0x00000000004b48a2 : add byte ptr [rax], al ; push 0x58000090 ; add ebp, edi ; jmp qword ptr [rdx]
0x00000000004b218e : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xfb92fc00 ; jmp qword ptr [rax]
0x00000000004b14a2 : add byte ptr [rax], al ; pushfq ; jb 0x4b14a6 ; call qword ptr [rdx]
0x00000000004af66e : add byte ptr [rax], al ; rcr al, 1 ; clc ; call qword ptr [rax]
0x0000000000400a5e : add byte ptr [rax], al ; ret
0x00000000004983a6 : add byte ptr [rax], al ; ret 0
0x000000000049f31e : add byte ptr [rax], al ; ret 0x10
0x00000000004a0fee : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1786 : add byte ptr [rax], al ; ret 0x1d5
0x000000000049fff6 : add byte ptr [rax], al ; ret 0x24
0x00000000004a04e6 : add byte ptr [rax], al ; ret 0x33
0x000000000049eb1e : add byte ptr [rax], al ; ret 0xa
0x000000000049ef1e : add byte ptr [rax], al ; ret 0xd
0x00000000004b3fd2 : add byte ptr [rax], al ; ret 0xfffc
0x00000000004a23c2 : add byte ptr [rax], al ; ret 1
0x00000000004a25c2 : add byte ptr [rax], al ; ret 2
0x00000000004a27c2 : add byte ptr [rax], al ; ret 3
0x00000000004a29c2 : add byte ptr [rax], al ; ret 4
0x00000000004a2bc2 : add byte ptr [rax], al ; ret 5
0x000000000049e6c6 : add byte ptr [rax], al ; ret 6
0x00000000004a2fc2 : add byte ptr [rax], al ; ret 7
0x00000000004a31c2 : add byte ptr [rax], al ; ret 8
0x00000000004a33c2 : add byte ptr [rax], al ; ret 9
0x00000000004a29be : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000049edc6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b4186 : add byte ptr [rax], al ; sbb ch, cl ; cld ; jmp qword ptr [rsi]
0x00000000004b1b1e : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b5bfa : add byte ptr [rax], al ; shl byte ptr [rbx - 0x66c00000], 0xfd ; call qword ptr [rdx]
0x000000000041ed4c : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004af462 : add byte ptr [rax], al ; sub byte ptr [rax + rax], bh ; add byte ptr [rax], ch ; ret 0xfff7
0x00000000004b4962 : add byte ptr [rax], al ; sub byte ptr [rcx + 0x4d80000], dl ; std ; jmp qword ptr [rdx]
0x00000000004afa62 : add byte ptr [rax], al ; sub byte ptr [rdx], al ; add byte ptr [rax - 0x7d], ch ; stc ; call qword ptr [rbx]
0x000000000042cfec : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000417a76 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000446b01 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000044be35 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000474e63 : add byte ptr [rax], al ; syscall ; ret
0x00000000004b3036 : add byte ptr [rax], al ; test al, 0x13 ; cld ; jmp qword ptr [rax]
0x00000000004adce2 : add byte ptr [rax], al ; test al, 0x24 ; add byte ptr [rax], al ; cwde ; mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004afab6 : add byte ptr [rax], al ; test al, 0x84 ; stc ; call qword ptr [rbx]
0x00000000004b1776 : add byte ptr [rax], al ; test al, 0x8e ; cli ; call qword ptr [rdx]
0x00000000004abdc6 : add byte ptr [rax], al ; test al, 0x99 ; cmc ; call rax
0x00000000004af646 : add byte ptr [rax], al ; test al, 0xb7 ; clc ; call qword ptr [rax]
0x00000000004b0dbe : add byte ptr [rax], al ; test byte ptr [rbp], dl ; add byte ptr [rdx + rax - 6], bh ; jmp qword ptr [rdx]
0x000000000044bcd9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042b8ee : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004add9a : add byte ptr [rax], al ; xchg eax, esp ; mov ah, 0xf6 ; call qword ptr [rsi]
0x00000000004afdf6 : add byte ptr [rax], al ; xchg rax, rdx ; stc ; jmp qword ptr [rcx]
0x00000000004ab86a : add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax], al ; fst qword ptr [rdx - 0xb] ; call qword ptr [rbx]
0x00000000004af1be : add byte ptr [rax], al ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rbx]
0x00000000004af66a : add byte ptr [rax], al ; xor byte ptr [rsi], bh ; add byte ptr [rax], al ; rcr al, 1 ; clc ; call qword ptr [rax]
0x00000000004b2e4e : add byte ptr [rax], al ; xor byte ptr [rsp + rdi*8], al ; jmp rdx
0x000000000045ca17 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475d76 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040ece3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d415 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f296 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b83a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000457956 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000444bbe : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b1773 : add byte ptr [rax], bh ; pop rdi ; add byte ptr [rax], al ; test al, 0x8e ; cli ; call qword ptr [rdx]
0x00000000004b1b07 : add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004af463 : add byte ptr [rax], ch ; cmp al, 0 ; add byte ptr [rax], ch ; ret 0xfff7
0x00000000004af467 : add byte ptr [rax], ch ; ret 0xfff7
0x00000000004ac307 : add byte ptr [rax], ch ; sub esi, esi ; call qword ptr [rax]
0x00000000004afe97 : add byte ptr [rax], ch ; xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004af643 : add byte ptr [rax], cl ; add byte ptr ds:[rax], al ; test al, 0xb7 ; clc ; call qword ptr [rax]
0x00000000004b0c07 : add byte ptr [rax], cl ; cli ; std ; jmp qword ptr [rdx]
0x000000000048b9de : add byte ptr [rax], cl ; mov byte ptr [rip + 0x2307c9], 8 ; ret
0x00000000004ac243 : add byte ptr [rax], cl ; or al, byte ptr [rax] ; add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x000000000048b9e5 : add byte ptr [rax], cl ; ret
0x00000000004b2e4f : add byte ptr [rax], dh ; add al, 0xfc ; jmp rdx
0x00000000004ab86b : add byte ptr [rax], dh ; add byte ptr [rax], al ; add ch, bl ; push rdx ; cmc ; call qword ptr [rbx]
0x00000000004af66b : add byte ptr [rax], dh ; add byte ptr ds:[rax], al ; rcr al, 1 ; clc ; call qword ptr [rax]
0x00000000004ac32f : add byte ptr [rax], dh ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004b3fcf : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret 0xfffc
0x00000000004b504b : add byte ptr [rax], dl ; cwde ; add byte ptr [rax], al ; mov al, 0x35 ; std ; jmp qword ptr [rcx]
0x00000000004b2e4b : add byte ptr [rax], dl ; jbe 0x4b2e57 ; add byte ptr [rax], dh ; add al, 0xfc ; jmp rdx
0x000000000044b27d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042379d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000041882d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000041839d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004441ed : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044422d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000420315 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400a95 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000484c7d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a5d : add byte ptr [rax], r8b ; ret
0x00000000004465bd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000449626 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048508f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e103 : add byte ptr [rbp + 0x1a], dh ; ret
0x000000000047594d : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x000000000044883e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481eb4 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481df4 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x00000000004130fa : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000457957 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482015 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000484320 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a73f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449856 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047581b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000416457 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449be6 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000402eea : add byte ptr [rbp + 0xa], dh ; jmp 0x402f18
0x000000000045c9f2 : add byte ptr [rbp + 0xa], dh ; jmp 0x45ca20
0x000000000044f725 : add byte ptr [rbp + 0xb], dh ; jmp 0x44f755
0x0000000000482f4f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000482e3f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044a555 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000004883ea : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000048785a : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045acce : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000484fac : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000419fdf : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d238 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000048d150 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049ef17 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000467555 : add byte ptr [rbp + rcx*4 + 0x35], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000046759d : add byte ptr [rbp + rcx*4 + 0x35], cl ; pop rsi ; ret
0x000000000041f03b : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004720ae : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000004721a8 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004722a2 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004b0dbf : add byte ptr [rbp + rdx*2 + 0x27c0000], al ; cli ; jmp qword ptr [rdx]
0x0000000000490194 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044bcda : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049f1c3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000448e97 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000468d09 : add byte ptr [rbp - 0x75], cl ; je 0x468d3a ; and byte ptr [rax + 1], cl ; ret
0x000000000044d445 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f527 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x0000000000494f8c : add byte ptr [rbp - 6], al ; call qword ptr [rax]
0x0000000000494014 : add byte ptr [rbp - 7], cl ; push qword ptr [rax + 0x4e] ; stc ; jmp rax
0x00000000004b0d3c : add byte ptr [rbp], dl ; add byte ptr [rax - 2], ah ; stc ; call qword ptr [rax]
0x000000000043d1b9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000491523 : add byte ptr [rbx + 0x2282ea3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048538d : add byte ptr [rbx + 0x236dcc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047fd75 : add byte ptr [rbx + 0x23a46b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000042391f : add byte ptr [rbx + 0x2984ca15], cl ; add bh, dh ; ret 0
0x000000000042028f : add byte ptr [rbx + 0x29957e3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000418767 : add byte ptr [rbx + 0x2a35a505], al ; add byte ptr [rcx], al ; ret
0x0000000000419d5f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004769a4 : add byte ptr [rbx + 0x3948fff8], bl ; ret
0x0000000000457b8b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000004441ff : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000443d2f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000043509f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000421a1f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412408 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414254 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405e01 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fcfb : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459ebf : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f57f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000473cea : add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000048d1f7 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004844f7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004882f7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000448228 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000448236 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000044822f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000448244 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000044823d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000448221 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000471ef9 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046cf7f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000044849e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000465f8c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004461e6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406f45 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac76 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000410c08 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407cbc : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000409e8f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000409f32 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000048ef9f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000047b6e7 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000467245 : add byte ptr [rcx + 0x29], cl ; ret
0x00000000004115ff : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000411566 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000489a52 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x00000000004738af : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040fdbd : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000419200 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412c70 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x0000000000471a3c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042da3e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048b096 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045a3be : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042c29c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000444078 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000460a69 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c84a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485a46 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000469558 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d7e4 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000461d8f : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000466df7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046be0a : add byte ptr [rcx + 1], al ; ret 0x8b48
0x00000000004468ef : add byte ptr [rcx + 1], cl ; ret
0x000000000040e155 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c2e5 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x00000000004191dd : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000402212 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004af9d7 : add byte ptr [rcx + rax*2 - 0x7dbc0000], bl ; stc ; call qword ptr [rdx]
0x00000000004af95f : add byte ptr [rcx + rax*2], ah ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x4af968 ; call rsp
0x00000000004acd5b : add byte ptr [rcx + rbp*2 - 0xa], al ; call qword ptr [rax]
0x00000000004b218f : add byte ptr [rcx + rbp*2], dl ; add ah, bh ; xchg eax, edx ; sti ; jmp qword ptr [rax]
0x0000000000416b04 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004920df : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473b0f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048dc7f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000049183f : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423ebf : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000041f6b8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f687 ; ret
0x00000000004af963 : add byte ptr [rcx + rdi*2 - 7], ch ; call rsp
0x000000000045546f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000047f0fb : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f198 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e1c7 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044b38a : add byte ptr [rcx - 0x75], cl ; jge 0x44b395 ; call r12
0x000000000044b3ba : add byte ptr [rcx - 0x75], cl ; jge 0x44b3c5 ; call r12
0x00000000004921ef : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044be47 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046c20e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000045ea47 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000404840 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000491892 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479d64 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000048aa1a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048ab29 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x00000000004714fb : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000045b217 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000041ce97 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041941f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045b48e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x00000000004260ff : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a0f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042bac2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042bae8 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000048b4ea : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x0000000000446aff : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040ebcf : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b0b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047fd7b : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041876d : add byte ptr [rcx], al ; ret
0x0000000000494a5c : add byte ptr [rcx], bh ; cli ; call qword ptr [rax + 0x20fffa38]
0x000000000044d45c : add byte ptr [rcx], bh ; ret
0x000000000047801c : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000040ece4 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b3cc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000047598a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x4759c1 ; ret
0x0000000000482c6f : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490abe90
0x000000000041482f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x414849 ; ret
0x000000000044d47b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x0000000000432eea : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048cf65 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048cf8d : add byte ptr [rdi + 1], bh ; call rax
0x000000000048dcdc : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b1b33 : add byte ptr [rdi + rbp*4], bh ; cli ; call qword ptr [rdx]
0x00000000004b1cfb : add byte ptr [rdi + rbx*8], ah ; cli ; call qword ptr [rsi]
0x00000000004633c5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004b4faf : add byte ptr [rdi + rdx*4], dh ; add byte ptr [rsp + rsi - 3], ch ; jmp qword ptr [rdx]
0x000000000049421c : add byte ptr [rdi - 0x471f0007], dh ; stc ; call rax
0x00000000004a3af4 : add byte ptr [rdi - 0x50ff0004], ch ; cld ; call rax
0x00000000004a3ae4 : add byte ptr [rdi - 0x50ff0004], ch ; cld ; jmp rax
0x00000000004b09ff : add byte ptr [rdi], ah ; sti ; hlt ; jmp qword ptr [rbx]
0x000000000040dbf6 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481096 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x000000000049477c : add byte ptr [rdi], cl ; cli ; call qword ptr [rax + 0x20fffa0e]
0x0000000000434866 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004480f7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043589f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043590f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004481af : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000425caf : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000412c7f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042c02f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bb6f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000046252b : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042b3ff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b42f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b41f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042b40f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046c844 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047ba43 : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000004588fb : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000421c2e : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004699b8 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042068e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000476883 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000044f8c4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000455853 : add byte ptr [rdx + 0x22f], bh ; call 0x401b58
0x0000000000443cef : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000044253f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d167 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047c17c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047caa4 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x000000000048592e : add byte ptr [rdx + 0xcc], bh ; call 0x401b58
0x0000000000412917 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004b0dc3 : add byte ptr [rdx + rax - 6], bh ; jmp qword ptr [rdx]
0x00000000004afa2b : add byte ptr [rdx + rax*4 - 7], ah ; jmp rbx
0x00000000004af9db : add byte ptr [rdx + rax*4 - 7], al ; call qword ptr [rdx]
0x000000000049eb17 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004b023f : add byte ptr [rdx + rcx*2], al ; add byte ptr [rax], al ; in al, dx ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004b40bb : add byte ptr [rdx + rcx*8], ah ; cld ; call rdx
0x00000000004571c0 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x00000000004571bf : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000004afa3c : add byte ptr [rdx], al ; add byte ptr [rax - 0x7d], al ; stc ; call qword ptr [rdx]
0x000000000041976f : add byte ptr [rdx], ch ; add bl, dh ; ret
0x0000000000494564 : add byte ptr [rdx], dl ; cli ; call qword ptr [rax + 0x20fffa11]
0x000000000042c5a4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046346a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463493 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041a3c7 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000419dff : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004661ea : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xace8
0x0000000000463431 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b334 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041a3c6 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004244b1 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000455f80 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000455f7f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000494194 : add byte ptr [rsi - 0x712f0007], cl ; stc ; call rax
0x0000000000424477 : add byte ptr [rsi - 9], dh ; ret 0
0x000000000049586c : add byte ptr [rsi], bh ; sti ; jmp qword ptr [rcx]
0x0000000000494c74 : add byte ptr [rsi], dh ; cli ; call qword ptr [rax + 0x20fffa35]
0x0000000000452c3c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004b4fb3 : add byte ptr [rsp + rsi - 3], ch ; jmp qword ptr [rdx]
0x00000000004b1cf7 : add byte ptr [rsp - 0x20dc0000], bh ; cli ; call qword ptr [rsi]
0x00000000004af695 : add byte ptr ds:[rax], al ; pop rax ; hlt ; clc ; call qword ptr [rax]
0x00000000004af66d : add byte ptr ds:[rax], al ; rcr al, 1 ; clc ; call qword ptr [rax]
0x00000000004af645 : add byte ptr ds:[rax], al ; test al, 0xb7 ; clc ; call qword ptr [rax]
0x0000000000448fc5 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000044f724 : add byte ptr es:[rbp + 0xb], dh ; jmp 0x44f756
0x000000000044d444 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044bcd7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b1cf9 : add byte ptr fs:[rax], al ; and al, 0xdf ; cli ; call qword ptr [rsi]
0x0000000000415662 : add ch, al ; pop rax ; ret
0x0000000000415769 : add ch, al ; push rcx ; ret 0xffff
0x00000000004ab86f : add ch, bl ; push rdx ; cmc ; call qword ptr [rbx]
0x00000000004a99fc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a99fd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b404d : add ch, byte ptr [rbp + rcx + 7] ; ret
0x0000000000494d40 : add ch, byte ptr [rbx] ; cli ; push qword ptr [rdx + 0x2a] ; cli ; jmp rdx
0x0000000000471dba : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000422dba : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000469593 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004acc47 : add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004481d8 : add cl, al ; call 0xffffffff84070af0
0x0000000000442567 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000469d72 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x00000000004551ae : add cl, byte ptr [rax + 0x39] ; ret
0x00000000004692c6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000447ec4 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041d06b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041ccc8 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000042474c : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000411704 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411623 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000450d4c : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000442568 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004424d5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004855c5 : add cl, byte ptr [rax - 0x77] ; je 0x4855f6 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e714 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000418382 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000440d30 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000440d93 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004840bd : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000004356e2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000451e7a : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000446beb : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000448717 : add cl, ch ; ret
0x000000000045ed8a : add cl, ch ; ret 0xfffa
0x0000000000454c28 : add cl, ch ; ret 0xfffd
0x0000000000400c2b : add cl, cl ; ret
0x000000000046a068 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e892 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004ab2d9 : add dh, bh ; call rsp
0x00000000004ab8af : add dh, bh ; push rdx ; cmc ; call qword ptr [rbx]
0x00000000004a2017 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435893 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040058e : add dh, bl ; ret
0x00000000004244ee : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004ad179 : add dh, byte ptr [rbx + 0xa] ; ret
0x000000000041adf8 : add dh, dh ; ret
0x000000000045107e : add dh, dh ; ret 0x4801
0x000000000042272f : add dh, dh ; ret 0x4804
0x000000000047c628 : add dh, dh ; ret 0x7403
0x000000000044a5ef : add dh, dh ; ret 0x7404
0x0000000000444c17 : add dh, dh ; ret 0x7501
0x0000000000444c24 : add dh, dh ; ret 0x7502
0x0000000000444c31 : add dh, dh ; ret 0x7504
0x0000000000444be9 : add dh, dh ; ret 0x7510
0x0000000000444bf6 : add dh, dh ; ret 0x7520
0x000000000042471c : add dh, dh ; ret 0x7540
0x0000000000422a53 : add dh, dh ; ret 0xf02
0x000000000045a318 : add dh, dh ; ret 0xf04
0x000000000041ad29 : add dh, dh ; ret 0xf08
0x0000000000466c51 : add dh, dh ; ret 0xf40
0x0000000000466c37 : add dh, dh ; ret 0xf50
0x00000000004950c4 : add dl, dh ; cli ; call qword ptr [rax]
0x00000000004799ed : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000470027 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046ee45 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000044fc93 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000443cf1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000046584a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000416cfd : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047fbb9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047fbcb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045b4df : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x0000000000464c2a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045ced3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045ce5d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000457330 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048dff3 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000481f87 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040db2a : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004791e5 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041de2e : add dword ptr [rax + 9], ecx ; ret 0x8949
0x00000000004791b7 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004612a3 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000402c7f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000422e04 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x0000000000470028 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000442541 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000004190f1 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a0737 ; ret
0x00000000004424d2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047f303 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d0a5 ; ret
0x000000000045e190 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000405f9c : add dword ptr [rax - 0x77], ecx ; ret
0x00000000004501f7 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x00000000004140c6 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000047f302 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d0a5 ; ret
0x000000000040ef06 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045b949 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046ee46 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402cc9 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000004507e6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046f497 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e42b : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000469dd9 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045e8d5 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000449cb5 : add dword ptr [rax - 1], edi ; jmp 0x449c86
0x00000000004059d0 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000454de4 : add dword ptr [rax], eax ; add al, ch ; int 0xfa
0x00000000004557ec : add dword ptr [rax], eax ; add al, ch ; pop rsp ; ret
0x0000000000410144 : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000004199aa : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000468183 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x00000000004551a8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000477fe4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041ea6d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000475add : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004494c9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e8ba : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000456416 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048ce05 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000446fbe : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000471999 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000041f0b0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000468458 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b7ac : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456072 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042afa7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e705 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x00000000004241ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043ff1f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042afd5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044e8c1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a201a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a11ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a0ff2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0fea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1782 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000048cf67 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048cebd : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048dcd9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48dcea ; sbb eax, eax ; ret
0x000000000040f3a5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40f372
0x000000000045d05d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x45d02a
0x0000000000460ebd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475e22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000047e6ed : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d570 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000484576 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046ef9d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000417203 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048689e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047fd81 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004686c0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004130f8 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048cd56 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e0f2 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409e8d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000004921ed : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000047801a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444c15 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000444c22 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000444c2f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000444be7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000444bf4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000444c01 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045a316 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000424748 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000042390c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000423873 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000040fdbc : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405e00 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044c721 : add dword ptr [rax], esp ; jmp rdx
0x0000000000400b0c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000448e39 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000045e712 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000435752 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000046c245 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x00000000004890d9 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d51e : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000045c3a2 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044ae83 : add dword ptr [rcx + 9], ecx ; ret
0x000000000040e16a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000442571 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046ec3e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004599e8 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044c515 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000467311 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x000000000047892b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x0000000000447d52 : add dword ptr [rdi + 0x15], esi ; jb 0x447d60 ; mov byte ptr [rdi], cl ; ret
0x00000000004b4015 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b3fad : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b3fe1 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b3fbe : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b3ff2 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b4026 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b06c5 : add dword ptr [rdi], 3 ; ret 0xa01
0x00000000004568f0 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000041e62b : add dword ptr [rdi], ecx ; ret 0x8948
0x00000000004484a1 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000454261 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x00000000004799ee : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000446d4c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000004385dd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004853cb : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000044d479 : add dword ptr [rdx], 0x39d23100 ; ret
0x00000000004b31a4 : add dword ptr [rdx], 0x4a ; ret
0x00000000004b5c34 : add dword ptr [rdx], 0x55 ; ret
0x00000000004af0f8 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5bf0 : add dword ptr [rdx], 0x76 ; ret
0x0000000000418768 : add dword ptr [rip + 0x2a35a5], 1 ; ret
0x00000000004acc43 : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000442552 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000044d478 : add dword ptr fs:[rdx], 0x39d23100 ; ret
0x000000000048a06d : add eax, 0x1489066 ; ret 0xb70f
0x000000000045acd0 : add eax, 0x18c48348 ; ret
0x0000000000424869 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000423909 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x00000000004496aa : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042b89a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424420 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x00000000004247a9 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000424669 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000424509 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000424810 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x00000000004246d0 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000048f641 : add eax, 0x22cd3e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048f531 : add eax, 0x22ce4e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000424570 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x00000000004247ef : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x00000000004246af : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x000000000042454f : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000423890 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x00000000004877a0 : add eax, 0x2350b2 ; jne 0x4877d6 ; ret
0x00000000004245db : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x0000000000485571 : add eax, 0x23734a ; ret
0x00000000004849f9 : add eax, 0x23766a ; ret
0x00000000004849de : add eax, 0x237685 ; add rsp, 8 ; ret
0x00000000004245be : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x000000000042460f : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047f46c : add eax, 0x23cf37 ; mov qword ptr [rsi], rax ; ret
0x000000000047f3fb : add eax, 0x23cfb0 ; ret
0x000000000047f3c2 : add eax, 0x23cfe9 ; add rsp, 8 ; ret
0x000000000047f306 : add eax, 0x23d0a5 ; ret
0x000000000046c9a7 : add eax, 0x24a874 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c954 : add eax, 0x24a8c7 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c427 : add eax, 0x24a8f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c7c6 : add eax, 0x24aa55 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c781 : add eax, 0x24aa9a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c73c : add eax, 0x24aadf ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c6ed : add eax, 0x24ab2e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e18 : add eax, 0x255803 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004611c7 : add eax, 0x255954 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461179 : add eax, 0x2559a2 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004610ca : add eax, 0x255a51 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046106e : add eax, 0x255aad ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460dce : add eax, 0x255d4d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460d80 : add eax, 0x255d9b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460927 : add eax, 0x255ef4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000457a32 : add eax, 0x264441 ; ret
0x000000000044d432 : add eax, 0x26cec9 ; ret
0x000000000044f532 : add eax, 0x26d3f1 ; ret
0x000000000045298f : add eax, 0x29480000 ; ret 0x349
0x0000000000424789 : add eax, 0x297662 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424649 : add eax, 0x2977a2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004244e9 : add eax, 0x297902 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f847 : add eax, 0x29a014 ; ret
0x000000000041f851 : add eax, 0x29c516 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041976d : add eax, 0x2a00ee ; ret
0x0000000000419268 : add eax, 0x2a0583 ; ret
0x000000000041927f : add eax, 0x2a0588 ; ret
0x0000000000419240 : add eax, 0x2a05a3 ; ret
0x0000000000419220 : add eax, 0x2a05bb ; ret
0x0000000000419116 : add eax, 0x2a072d ; ret
0x0000000000419106 : add eax, 0x2a0735 ; ret
0x00000000004190b6 : add eax, 0x2a073d ; ret
0x00000000004190a6 : add eax, 0x2a0755 ; ret
0x00000000004186d2 : add eax, 0x2a0a49 ; ret
0x0000000000419721 : add eax, 0x2a2646 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000419295 : add eax, 0x2a2afa ; ret
0x00000000004187cd : add eax, 0x2a3542 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b2264 : add eax, 0x3400e4e ; ret
0x0000000000484fae : add eax, 0x38c48348 ; ret
0x000000000041cfbe : add eax, 0x39480000 ; ret 0xf275
0x000000000042b8ba : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000443d88 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00000000004425b8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000444286 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004949bd : add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x000000000049497d : add eax, 0x4b0fffa ; cli ; jmp qword ptr [rax]
0x0000000000443e09 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004425f9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000494839 : add eax, 0x562fffa ; cli ; jmp rdx
0x0000000000485150 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a2bbd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000047197a : add eax, 0x5c415d5b ; ret
0x000000000042b8da : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424839 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000424449 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x00000000004244ad : add eax, 0x79ee ; je 0x424482 ; ret
0x000000000042abe7 : add eax, 0x83480000 ; ret 0x4910
0x000000000043e511 : add eax, 0x83480000 ; ret 0xe910
0x000000000042ac15 : add eax, 0x83480000 ; ret 0xeb10
0x000000000045f095 : add eax, 0x83ffffef ; ret
0x0000000000443d8b : add eax, 0x8428d48 ; ret
0x000000000040dbf8 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000458eb3 : add eax, 0x89480000 ; ret 0x2948
0x0000000000491890 : add eax, 0x89490000 ; ret 0x8349
0x0000000000481098 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004abdc5 : add eax, 0x99a80000 ; cmc ; call rax
0x0000000000472889 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000473c99 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042d2da : add eax, 0xc0310000 ; ret
0x0000000000443e0d : add eax, 0xc428d48 ; ret
0x00000000004448ed : add eax, 0xc478d48 ; ret
0x0000000000455472 : add eax, 0xe9000000 ; ret
0x0000000000472859 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x0000000000463468 : add eax, 0xf660004 ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000048d23a : add eax, 0xf7148948 ; ret
0x0000000000435743 : add eax, 0xf7f0ff3 ; ret
0x000000000048f54a : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044e8a5 : add eax, 1 ; push rax ; call rbx
0x00000000004748c1 : add eax, 1 ; ret
0x00000000004748b8 : add eax, 2 ; ret
0x00000000004748d1 : add eax, 3 ; ret
0x000000000045abe9 : add eax, dword ptr [0] ; ret
0x000000000047b6e8 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000489881 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489edc : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000041c458 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041ada6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000400f3b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041af2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041fc2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041fdf0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042adc7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e6b1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042adf5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044f484 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a73c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000474913 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044849c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000489a50 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000461d8d : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044be45 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000047c626 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041ad27 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046eb24 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046f26b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046f2d9 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448180 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d2ec : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b3fc1 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x0000000000475a9a : add eax, dword ptr [rcx + rdx] ; ret
0x000000000040fdbb : add eax, dword ptr [rcx] ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004ad41a : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000486d13 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b3ff5 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b4029 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b1f7a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047c366 : add eax, dword ptr [rsi] ; call rax
0x000000000048ae76 : add eax, eax ; jmp rax
0x0000000000402214 : add eax, ebp ; jmp rax
0x000000000047c687 : add eax, ebx ; call rax
0x000000000044d53c : add eax, ebx ; jmp rax
0x0000000000440838 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046eb2b : add eax, ecx ; jmp rax
0x000000000042b1e9 : add eax, ecx ; ret
0x0000000000440b9d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b716 : add eax, ecx ; vzeroupper ; ret
0x000000000042b1e6 : add eax, edi ; add rax, rcx ; ret
0x000000000042b713 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f15b : add eax, edi ; jmp rax
0x000000000046f42f : add eax, edi ; mov rdx, r8 ; jmp 0x46f403
0x000000000042b414 : add eax, edi ; ret
0x0000000000485300 : add eax, edi ; sub rax, r8 ; ret
0x0000000000440c55 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446bfa : add eax, edi ; sub rax, rsi ; ret
0x000000000042b88a : add eax, edi ; vzeroupper ; ret
0x0000000000401faa : add eax, edx ; jmp rax
0x0000000000440b46 : add eax, edx ; sub rax, rdi ; ret
0x00000000004745bb : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000044812c : add eax, esi ; jmp rax
0x000000000041842d : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048c0ed : add eax, esp ; jmp rax
0x00000000004630a8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004b48a9 : add ebp, edi ; jmp qword ptr [rdx]
0x000000000047c362 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x0000000000460e19 : add ebx, dword ptr [rax + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000048a49a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004886d0 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000416b41 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b3fe6 : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044e10f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44e178 ; pop r12 ; ret
0x00000000004827c1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042bffb : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000435903 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447d37 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x447d2c ; ret
0x00000000004425a5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000045736d : add ecx, dword ptr [rax + 0x39] ; ret
0x000000000040e0ce : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004511ca : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44d4a8
0x00000000004425a9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e7b7 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x000000000044fd83 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000048bbaf : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040eac1 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000480d7a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483290 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000435672 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b3fb2 : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000444224 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000004425a6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000448e3f : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448e9d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004ac0d9 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000465ed9 : add ecx, eax ; mov eax, r9d ; ret
0x000000000042d90b : add ecx, ebx ; jmp r9
0x000000000042c2a2 : add ecx, ebx ; jmp rcx
0x0000000000448154 : add ecx, esi ; jmp rcx
0x000000000048e0fe : add edi, dword ptr [rax + 4] ; jne 0x48e129 ; ret
0x000000000045a3c4 : add edi, ebx ; jmp rdi
0x000000000042d908 : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004947cd : add edi, edx ; call rsi
0x000000000040d5ac : add edi, edx ; jmp rdi
0x00000000004ab301 : add edi, esi ; call rsp
0x00000000004871c4 : add edx, eax ; jmp 0x4871d2
0x00000000004834f2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000040d2c3 : add edx, edi ; jmp rdx
0x0000000000468e78 : add edx, esp ; call qword ptr [r10 + rax*8]
0x0000000000458776 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000459ec5 : add esi, eax ; jmp rsi
0x0000000000435823 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000446f55 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044965c : add esi, ebx ; ret
0x000000000041ed50 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004ab2e9 : add esi, edi ; call rsp
0x000000000044825e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042d905 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000045254b : add esi, esi ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000416671 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000410871 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449c8f : add esp, 0x10 ; pop rbx ; ret
0x0000000000411f75 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446afd : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482698 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dc3e : add esp, 0x118 ; ret
0x000000000045af1a : add esp, 0x148 ; ret
0x000000000041a189 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f43b : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041fa56 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044d25a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411905 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045acd2 : add esp, 0x18 ; ret
0x000000000041717d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416d5d : add esp, 0x20 ; pop rbx ; jmp rax
0x00000000004171b6 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482719 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416acf : add esp, 0x20 ; pop rbx ; ret
0x0000000000448c82 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044962a : add esp, 0x28 ; ret
0x000000000044f618 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004848ef : add esp, 0x30 ; pop rbx ; ret
0x000000000048ac66 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040daf4 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041617e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000475951 : add esp, 0x38 ; ret
0x00000000004884fc : add esp, 0x40 ; pop rbx ; ret
0x0000000000481c2c : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000449302 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004885e3 : add esp, 0x50 ; pop rbx ; ret
0x0000000000481bba : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000044985a : add esp, 0x58 ; ret
0x000000000044974c : add esp, 0x68 ; ret
0x0000000000473db4 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449adf : add esp, 0x78 ; ret
0x000000000046883e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000475433 : add esp, 0x80 ; pop rbx ; ret
0x0000000000415a48 : add esp, 0x80 ; ret
0x000000000044bc2d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400df2 : add esp, 0x88 ; pop rbx ; ret
0x000000000040156f : add esp, 0x98 ; ret
0x0000000000475553 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000457b86 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000040fb67 : add esp, 0xd0 ; pop rbx ; ret
0x000000000040fcf6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f7c4 : add esp, 0xd8 ; ret
0x0000000000411c7f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fc8b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041008e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b270 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a4ac : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416729 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488439 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000413734 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401c03 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x00000000004238d9 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000435902 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435892 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435822 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000042adf4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d90a : add r9, r11 ; jmp r9
0x000000000045734e : add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045736c : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000465ed8 : add r9d, eax ; mov eax, r9d ; ret
0x00000000004748c0 : add rax, 1 ; ret
0x00000000004748b7 : add rax, 2 ; ret
0x00000000004748d0 : add rax, 3 ; ret
0x000000000045abe8 : add rax, qword ptr [0] ; ret
0x000000000047c365 : add rax, qword ptr [r14] ; call rax
0x000000000047d2eb : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000486d12 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045abe7 : add rax, qword ptr fs:[0] ; ret
0x000000000047c686 : add rax, r11 ; call rax
0x000000000048c0ec : add rax, r12 ; jmp rax
0x0000000000402213 : add rax, r13 ; jmp rax
0x000000000048c9ed : add rax, r14 ; jmp rax
0x000000000048b09b : add rax, r15 ; jmp rax
0x000000000048ae75 : add rax, r8 ; jmp rax
0x000000000048c625 : add rax, r9 ; jmp rax
0x000000000044d5b3 : add rax, rbp ; jmp rax
0x000000000044d53b : add rax, rbx ; jmp rax
0x0000000000440837 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046eb2a : add rax, rcx ; jmp rax
0x000000000042b1e8 : add rax, rcx ; ret
0x0000000000440b9c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b715 : add rax, rcx ; vzeroupper ; ret
0x000000000042b1e5 : add rax, rdi ; add rax, rcx ; ret
0x000000000042b712 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f15a : add rax, rdi ; jmp rax
0x000000000042b413 : add rax, rdi ; ret
0x00000000004852ff : add rax, rdi ; sub rax, r8 ; ret
0x0000000000440c54 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446bf9 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042b889 : add rax, rdi ; vzeroupper ; ret
0x0000000000401fa9 : add rax, rdx ; jmp rax
0x0000000000440b45 : add rax, rdx ; sub rax, rdi ; ret
0x000000000044812b : add rax, rsi ; jmp rax
0x000000000047c361 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000042c2a1 : add rcx, r11 ; jmp rcx
0x0000000000448153 : add rcx, rsi ; jmp rcx
0x000000000040d5ab : add rdi, r10 ; jmp rdi
0x000000000045a3c3 : add rdi, r11 ; jmp rdi
0x000000000042d907 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000468e77 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x00000000004834f1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004871c3 : add rdx, rax ; jmp 0x4871d3
0x000000000040d2c2 : add rdx, rdi ; jmp rdx
0x0000000000459ec4 : add rsi, r8 ; jmp rsi
0x0000000000416670 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000410870 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449c8e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482697 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dc3d : add rsp, 0x118 ; ret
0x000000000045af19 : add rsp, 0x148 ; ret
0x000000000041a188 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f43a : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041fa55 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000411904 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045acd1 : add rsp, 0x18 ; ret
0x000000000041717c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416d5c : add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004171b5 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482718 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416ace : add rsp, 0x20 ; pop rbx ; ret
0x0000000000449629 : add rsp, 0x28 ; ret
0x000000000044f617 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004848ee : add rsp, 0x30 ; pop rbx ; ret
0x000000000048ac65 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041617d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000475950 : add rsp, 0x38 ; ret
0x00000000004884fb : add rsp, 0x40 ; pop rbx ; ret
0x0000000000481c2b : add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004885e2 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481bb9 : add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000449859 : add rsp, 0x58 ; ret
0x000000000044974b : add rsp, 0x68 ; ret
0x0000000000473db3 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449ade : add rsp, 0x78 ; ret
0x0000000000475432 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000415a47 : add rsp, 0x80 ; ret
0x000000000044bc2c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400df1 : add rsp, 0x88 ; pop rbx ; ret
0x000000000040156e : add rsp, 0x98 ; ret
0x0000000000475552 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000040fb66 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000040fcf5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f7c3 : add rsp, 0xd8 ; ret
0x0000000000411c7e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fc8a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041008d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b26f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a4ab : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416728 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488438 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401c02 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x00000000004238d8 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000424747 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004853ca : add word ptr [rdx + rax*2], 1 ; ret
0x000000000046b801 : and al, 0 ; jmp rax
0x000000000046c42a : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d2d8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x000000000048ee90 : and al, 0x10 ; call r14
0x000000000044a898 : and al, 0x10 ; call rax
0x000000000048265b : and al, 0x10 ; call rdx
0x000000000041ca0c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000004720b2 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048ec78 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004011a5 : and al, 0x18 ; call rax
0x000000000044e828 : and al, 0x18 ; mov r9, r13 ; call rbx
0x0000000000471fcd : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004742cf : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000482656 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450f07 : and al, 0x20 ; call r15
0x000000000045313e : and al, 0x20 ; call rax
0x0000000000473f90 : and al, 0x20 ; call rbx
0x0000000000450dd2 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7b44 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041fa53 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000450f02 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000422903 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000004517e3 : and al, 0x30 ; call r14
0x00000000004519bb : and al, 0x30 ; call rbx
0x000000000047417e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000452c3a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000451ca5 : and al, 0x38 ; call r12
0x00000000004522dd : and al, 0x38 ; call r14
0x00000000004552a1 : and al, 0x38 ; call r15
0x00000000004514eb : and al, 0x38 ; call rbx
0x0000000000473e68 : and al, 0x38 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004511f7 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004517de : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004519b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046734c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004571be : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000455f7e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000481c29 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481bb7 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045371c : and al, 0x40 ; call r15
0x0000000000455ec8 : and al, 0x40 ; call rbx
0x0000000000453139 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000451ca0 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x00000000004522d8 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045529c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004514e6 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004af960 : and al, 0x41 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x4af967 ; call rsp
0x0000000000486d11 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000416698 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048ad48 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aa4c : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000413374 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048dd7e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000453717 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455ec3 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048dd2f : and al, 0x4c ; lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489c97 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489c45 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x00000000004511ce : and al, 0x50 ; call 0x44d4a4
0x00000000004511cd : and al, 0x50 ; call 0x44d4a5
0x00000000004049a1 : and al, 0x60 ; jmp 0x40441c
0x000000000042031b : and al, 0x68 ; call rax
0x0000000000402f34 : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret 0xbfd0
0x0000000000463a1e : and al, 0x83 ; ret
0x000000000045787d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419203 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000040483c : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004516fe : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004920db : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049183b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000045218b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000451b80 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000457953 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048cebb : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000449c8c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449c0f : and al, 0xc ; jne 0x449be0 ; neg eax ; jmp 0x449be0
0x0000000000449c0e : and al, 0xc ; jne 0x449be1 ; neg eax ; jmp 0x449be1
0x0000000000416682 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x412918
0x00000000004011a0 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479d60 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004b40bc : and al, 0xca ; cld ; call rdx
0x0000000000416c5c : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000048ae48 : and al, 0xd8 ; ret
0x00000000004b1cfc : and al, 0xdf ; cli ; call qword ptr [rsi]
0x00000000004636f1 : and al, 0xe8 ; test eax, 0x8900020e ; ret
0x0000000000418273 : and al, 0xe9 ; ret 0xfffd
0x000000000045259e : and al, 0xf6 ; ret
0x0000000000416d8d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000041d026 : and al, 8 ; call 0x4192c4
0x000000000040df6f : and al, 8 ; call rax
0x000000000041ca11 : and al, 8 ; call rcx
0x000000000048e97c : and al, 8 ; jmp 0x48e996
0x000000000044a893 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004112a0 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000048f534 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000490193 : and al, byte ptr [rax] ; jne 0x49017d ; pop rbx ; ret
0x000000000048f526 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f537 ; ret
0x000000000048f636 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f647 ; ret
0x0000000000440daa : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000041c2d8 : and al, ch ; ret 0xff3c
0x000000000041b9d8 : and al, ch ; ret 0xff45
0x0000000000494f7f : and al, dl ; cli ; jmp rax
0x0000000000402b9c : and bh, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000004b32b1 : and bh, ah ; jmp qword ptr [rcx]
0x0000000000469591 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000045313f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004943a4 : and bl, ah ; stc ; jmp qword ptr [rax]
0x0000000000411569 : and byte ptr [r8 + 1], r9b ; ret
0x00000000004114ce : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000044074a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042b89c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000041156a : and byte ptr [rax + 1], cl ; ret
0x0000000000400f41 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000046644e : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000450dd3 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004772c8 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045a5c4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45a5d8 ; call rax
0x000000000044fb16 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048d3b6 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000467e84 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x0000000000412e92 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000044a2fc : and byte ptr [rax - 3], dh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000494f7d : and byte ptr [rax], ah ; and al, dl ; cli ; jmp rax
0x0000000000494f7b : and byte ptr [rax], ah ; and byte ptr [rax], ah ; and al, dl ; cli ; jmp rax
0x0000000000494f7a : and byte ptr [rax], ah ; and byte ptr [rax], ah ; and byte ptr [rax], ah ; sar byte ptr [rsi], 1 ; cli ; jmp rax
0x0000000000494f7c : and byte ptr [rax], ah ; and byte ptr [rax], ah ; sar byte ptr [rsi], 1 ; cli ; jmp rax
0x0000000000494f7e : and byte ptr [rax], ah ; sar byte ptr [rsi], 1 ; cli ; jmp rax
0x000000000048d389 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044823a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004949a4 : and byte ptr [rax], cl ; cli ; jmp qword ptr [rax + 0x20fffa07]
0x000000000042de05 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x0000000000494218 : and byte ptr [rbp - 0x48ff0007], dh ; stc ; jmp rax
0x000000000049430c : and byte ptr [rbp - 0x692f0007], bh ; stc ; call qword ptr [rax]
0x000000000049239c : and byte ptr [rbp - 0x77], cl ; ret
0x000000000048271b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004680e3 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x0000000000494308 : and byte ptr [rbx - 0x42df0007], bh ; stc ; call rax
0x0000000000494234 : and byte ptr [rbx - 0x4aff0007], dh ; stc ; jmp rax
0x000000000045dd80 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004942b8 : and byte ptr [rcx + rdi*8 - 0x649ff01], dh ; jmp rax
0x000000000041717f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x0000000000494304 : and byte ptr [rcx - 0x44df0007], bh ; stc ; jmp qword ptr [rax]
0x00000000004114cf : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000049499c : and byte ptr [rcx], cl ; cli ; jmp qword ptr [rax + 0x20fffa08]
0x000000000047f5a4 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004949ac : and byte ptr [rdi], al ; cli ; jmp qword ptr [rax + 0x20fffa06]
0x00000000004b1020 : and byte ptr [rdi], bl ; cli ; call qword ptr [rdi]
0x00000000004471a1 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000040fd1b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000444bf0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000494070 : and byte ptr [rdx - 7], ch ; call qword ptr [rax]
0x00000000004ad41d : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000494798 : and byte ptr [rdx], cl ; cli ; call qword ptr [rax + 0x10fffa09]
0x00000000004949bc : and byte ptr [rip + 0x4a0fffa], al ; cli ; call qword ptr [rax]
0x000000000042c33a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b1f7d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004a3e98 : and byte ptr [rsi - 0x49df0004], dh ; cld ; jmp qword ptr [rax]
0x00000000004949b4 : and byte ptr [rsi], al ; cli ; jmp qword ptr [rax + 0x20fffa05]
0x00000000004748b2 : and ch, 0xf ; je 0x4748d9 ; add rax, 2 ; ret
0x00000000004481f8 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004944ac : and ch, 0xf9 ; call qword ptr [rax]
0x000000000042474a : and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004943a8 : and ch, ah ; stc ; jmp qword ptr [rax]
0x000000000047489d : and cl, 0xf ; je 0x4748c5 ; ret
0x00000000004943a0 : and cl, ah ; stc ; jmp qword ptr [rax]
0x00000000004b3d28 : and cl, al ; hlt ; jmp qword ptr [rcx]
0x000000000044c811 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047f3a4 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000423ec3 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000042bb7d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000473c9a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000494610 : and cl, byte ptr [rip + 0x1392fffa] ; cli ; jmp qword ptr [rdx]
0x000000000049442c : and dh, 0xf9 ; call qword ptr [rax]
0x000000000044c089 : and dh, al ; sub byte ptr [rcx], al ; ret
0x0000000000469590 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000494f09 : and dl, bh ; call qword ptr [rax - 0x2f0005df]
0x0000000000494f49 : and dl, bh ; call qword ptr [rax]
0x0000000000469108 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000469109 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9662 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000417987 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004179df : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004940e0 : and dword ptr [rcx - 0x6e5e0007], edx ; stc ; jmp qword ptr [rcx]
0x00000000004940d8 : and dword ptr [rdi - 0x6fde0007], ecx ; stc ; jmp qword ptr [rcx]
0x000000000041880e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000004940e8 : and dword ptr [rdx - 0x6d5e0007], edx ; stc ; jmp qword ptr [rcx]
0x0000000000424422 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000495770 : and dword ptr [rip + 0x3d21fffb], edi ; sti ; jmp qword ptr [rcx]
0x00000000004956f8 : and dword ptr [rip + 0x3d21fffb], edi ; sti ; jmp rdx
0x0000000000495978 : and dword ptr [rip + 0x3d21fffb], edi ; sti ; jmp rsp
0x00000000004958bc : and dword ptr [rip + 0x3d34fffb], edi ; sti ; jmp qword ptr [rcx]
0x000000000049590c : and dword ptr [rip + 0x3d44fffb], edi ; sti ; jmp qword ptr [rcx]
0x000000000049571c : and dword ptr [rip + 0x3d54fffb], edi ; sti ; jmp qword ptr [rcx]
0x0000000000495788 : and dword ptr [rip + 0x3d72fffb], edi ; sti ; jmp qword ptr [rcx]
0x0000000000495968 : and dword ptr [rip + 0x3decfffb], edi ; sti ; jmp qword ptr [rcx]
0x0000000000495a5c : and dword ptr [rip + 0x3ee4fffb], edi ; sti ; jmp qword ptr [rcx]
0x000000000049597c : and dword ptr [rip + 0x3ee4fffb], edi ; sti ; jmp rsp
0x00000000004a6719 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9661 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045abeb : and eax, 0 ; ret
0x0000000000493fa1 : and eax, 0x26b0fff9 ; stc ; call rax
0x000000000048431c : and eax, 0x28 ; jne 0x484366 ; leave ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x000000000040e9d8 : and eax, 0x30 ; call rax
0x000000000040e912 : and eax, 0x30 ; call rdx
0x000000000040e9fe : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044817d : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000004481c8 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000046092a : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448273 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x0000000000448217 : and eax, 0x7ff80000 ; ret
0x000000000044bec7 : and eax, 0xc ; cmp eax, 4 ; je 0x44bed8 ; ret
0x000000000045ab8c : and eax, 0xf3087400 ; ret
0x00000000004827bc : and eax, 2 ; sub eax, 1 ; ret
0x0000000000487858 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047f3c5 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004853c8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004877a3 : and eax, dword ptr [rax] ; jne 0x4877d3 ; ret
0x0000000000484e1a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004849f5 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x23766a], rax ; ret
0x000000000047f46f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047f309 : and eax, dword ptr [rax] ; ret
0x000000000047bb72 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000045298e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000417988 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004179e0 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044be62 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44be75 ; ret
0x000000000042d8b5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042cfe8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044b5ba : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x000000000044f729 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call rcx
0x0000000000494f0d : and edx, edi ; call rax
0x000000000044c088 : and sil, al ; sub byte ptr [rcx], al ; ret
0x00000000004743f7 : bnd je 0x474406 ; test edx, edx ; jne 0x4743f8 ; ret
0x000000000042b4ea : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042b410 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042b901 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042b420 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000042b430 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000042b400 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000042b35f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004403c3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004409e6 : bsf eax, edx ; ret
0x00000000004744a7 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000440b42 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000004404e0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000440a32 : bsf rax, rdx ; ret
0x00000000004744a6 : bsf rax, rdx ; shr rax, 2 ; ret
0x00000000004732d7 : bsr eax, eax ; add rax, rdi ; ret
0x000000000047355b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000473469 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000473365 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000004732d6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000047355a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000473468 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000473364 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047dcbb : call 0x110a600b
0x0000000000469c66 : call 0x21469c64
0x0000000000469ddc : call 0x21469dda
0x000000000046a06b : call 0x2146a069
0x000000000046a530 : call 0x2146a52e
0x000000000046a6ee : call 0x2146a6ec
0x000000000046acbf : call 0x2146acbd
0x000000000046aef8 : call 0x2146aef6
0x00000000004b01c8 : call 0x224afb74
0x00000000004505cb : call 0x400439
0x0000000000478ae8 : call 0x40048f
0x00000000004689f2 : call 0x4004af
0x0000000000455859 : call 0x401b52
0x0000000000487691 : call 0x401b58
0x000000000041b9c9 : call 0x40fa08
0x00000000004218b3 : call 0x40ffa7
0x000000000041576a : call 0x4119c2
0x0000000000416688 : call 0x412912
0x000000000041d028 : call 0x4192c2
0x0000000000421aa5 : call 0x41dce2
0x0000000000483af8 : call 0x43fde7
0x00000000004007e8 : call 0x4480e6
0x00000000004006b1 : call 0x4485a6
0x000000000046fb4c : call 0x44bdf2
0x000000000040fb48 : call 0x44be22
0x000000000040fcff : call 0x44bf12
0x00000000004511d0 : call 0x44d4a2
0x0000000000461452 : call 0x45d6f2
0x00000000004898a2 : call 0x488677
0x000000000045d0d6 : call 0x49085a2a
0x0000000000482c74 : call 0x490abe8b
0x00000000004504e7 : call 0x4d078e3b
0x000000000048294c : call 0x4d0abb63
0x0000000000434e8a : call 0x4fc25e88
0x0000000000434e89 : call 0x4fc25e89
0x00000000004379aa : call 0x4fc289a8
0x00000000004379a9 : call 0x4fc289a9
0x000000000047b651 : call 0x86c02e5
0x000000000046c7ed : call 0xa3f4b29
0x00000000004481da : call 0xffffffff84070aee
0x0000000000417f47 : call 0xffffffff8a020453
0x00000000004a7183 : call 0xffffffffaf0d0ff9
0x0000000000464c29 : call 0xffffffffc27f9433
0x000000000041dde0 : call 0xffffffffc2cb25f9
0x000000000041ef20 : call 0xffffffffc2cb3739
0x000000000041fcda : call 0xffffffffc2cb44f3
0x00000000004217dd : call 0xffffffffc2cb5ff6
0x0000000000421ce2 : call 0xffffffffc2cb64fb
0x000000000042221e : call 0xffffffffc2cb6a37
0x000000000044d5f7 : call 0xffffffffc2cdd626
0x000000000047e2aa : call 0xffffffffc2d12eb4
0x000000000044c78d : call 0xffffffffc368e521
0x000000000041dc60 : call 0xffffffffc37b246a
0x000000000041f029 : call 0xffffffffc37b3833
0x000000000046aafe : call 0xffffffffc3caab06
0x0000000000440e97 : call 0xffffffffc41497e8
0x0000000000440db7 : call 0xffffffffc43c9708
0x000000000044b275 : call 0xffffffffe1440fd8
0x00000000004010d2 : call 8
0x0000000000468e7a : call qword ptr [r10 + rax*8]
0x0000000000489af0 : call qword ptr [r14]
0x0000000000401940 : call qword ptr [r15 + rbx*8]
0x00000000004947bb : call qword ptr [rax + 0x10fffa05]
0x00000000004947b3 : call qword ptr [rax + 0x10fffa06]
0x00000000004947ab : call qword ptr [rax + 0x10fffa07]
0x00000000004947a3 : call qword ptr [rax + 0x10fffa08]
0x000000000049479b : call qword ptr [rax + 0x10fffa09]
0x0000000000494ed3 : call qword ptr [rax + 0x10fffa0c]
0x0000000000494f17 : call qword ptr [rax + 0x10fffa0e]
0x0000000000494edb : call qword ptr [rax + 0x10fffa0f]
0x0000000000494f1f : call qword ptr [rax + 0x10fffa11]
0x0000000000494ee3 : call qword ptr [rax + 0x10fffa12]
0x0000000000494f27 : call qword ptr [rax + 0x10fffa14]
0x0000000000494eeb : call qword ptr [rax + 0x10fffa15]
0x0000000000494f2f : call qword ptr [rax + 0x10fffa17]
0x0000000000494ef3 : call qword ptr [rax + 0x10fffa18]
0x0000000000494f37 : call qword ptr [rax + 0x10fffa1a]
0x0000000000494efb : call qword ptr [rax + 0x10fffa1b]
0x0000000000494f3f : call qword ptr [rax + 0x10fffa1d]
0x0000000000494f03 : call qword ptr [rax + 0x10fffa1e]
0x0000000000494f47 : call qword ptr [rax + 0x10fffa20]
0x000000000049477f : call qword ptr [rax + 0x20fffa0e]
0x0000000000494567 : call qword ptr [rax + 0x20fffa11]
0x0000000000494c77 : call qword ptr [rax + 0x20fffa35]
0x0000000000494a5f : call qword ptr [rax + 0x20fffa38]
0x0000000000495017 : call qword ptr [rax + 0x30fffa8b]
0x000000000040e25e : call qword ptr [rax + 0x458b41]
0x0000000000495067 : call qword ptr [rax - 0x1f00055c]
0x00000000004944ff : call qword ptr [rax - 0x1f00062f]
0x0000000000494513 : call qword ptr [rax - 0x1f00063d]
0x0000000000494387 : call qword ptr [rax - 0x1f000654]
0x0000000000494333 : call qword ptr [rax - 0x1f00065b]
0x0000000000494f0b : call qword ptr [rax - 0x2f0005df]
0x0000000000493fbf : call qword ptr [rax - 0x4f0006d2]
0x00000000004943db : call qword ptr [rax]
0x000000000040108e : call qword ptr [rbx + 0x10]
0x000000000040ead0 : call qword ptr [rbx]
0x00000000004ab3c3 : call qword ptr [rcx + rdx]
0x0000000000489ca0 : call qword ptr [rcx]
0x0000000000401941 : call qword ptr [rdi + rbx*8]
0x0000000000496557 : call qword ptr [rdi]
0x0000000000494d13 : call qword ptr [rdx + 0x12fffa30]
0x0000000000494613 : call qword ptr [rdx + 0x22fffa13]
0x0000000000468e7b : call qword ptr [rdx + rax*8]
0x0000000000494633 : call qword ptr [rdx]
0x00000000004945af : call qword ptr [rsi + 0x26fffa10]
0x0000000000494aa7 : call qword ptr [rsi + 0x26fffa37]
0x0000000000489af1 : call qword ptr [rsi]
0x000000000047c747 : call r10
0x000000000040092c : call r11
0x000000000044a790 : call r12
0x000000000044eb30 : call r14
0x000000000044acd2 : call r15
0x0000000000495077 : call rax
0x000000000049528b : call rbp
0x000000000040092d : call rbx
0x000000000041ca13 : call rcx
0x000000000044acd3 : call rdi
0x000000000040e917 : call rdx
0x000000000044eb31 : call rsi
0x000000000044a791 : call rsp
0x000000000048c624 : cdq ; add rax, r9 ; jmp rax
0x00000000004abdc9 : cdq ; cmc ; call rax
0x00000000004a8ec0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000461453 : cdq ; ret 0xffff
0x00000000004b5c01 : cdq ; std ; call qword ptr [rdx]
0x0000000000477fc4 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000400b5a : clc ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000469d71 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041d06a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041ccc7 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e713 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d51d : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004886cf : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000044fd82 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042b1e7 : clc ; add rax, rcx ; ret
0x000000000042b714 : clc ; add rax, rcx ; vzeroupper ; ret
0x0000000000493e9a : clc ; call qword ptr [rax]
0x0000000000495169 : clc ; cli ; call qword ptr [rax]
0x0000000000495161 : clc ; cli ; call rax
0x0000000000495165 : clc ; cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000422e08 : clc ; cmovne rax, rcx ; ret
0x000000000042d859 : clc ; cmp rcx, rax ; jne 0x42d88b ; xor eax, eax ; ret
0x000000000042d858 : clc ; cmp rcx, rax ; jne 0x42d88c ; xor eax, eax ; ret
0x00000000004769a6 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047f990 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004237d0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004728c0 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047fbb4 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048cb0e : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401adc : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046fdd9 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000478aeb : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000461a26 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045f9ce : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000045ed83 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004597f2 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000493eaa : clc ; inc eax ; clc ; call qword ptr [rax]
0x000000000044821a : clc ; jg 0x4481e9 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448276 : clc ; jg 0x448276 ; int1 ; mov eax, eax ; ret
0x0000000000454097 : clc ; jg 0x454026 ; ret 0xdb76
0x0000000000454097 : clc ; jg 0x45402a ; ret 0xdb76
0x00000000004af636 : clc ; jmp qword ptr [rsi]
0x000000000046092f : clc ; jmp rax
0x00000000004b4634 : clc ; lea eax, dword ptr [rax] ; add byte ptr [rax - 0x17], bh ; cld ; jmp qword ptr [rcx]
0x000000000048d5b3 : clc ; leave ; ret
0x00000000004a7b22 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000412994 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f357 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fcc7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c17 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fec7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b87 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004300c7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f373 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000447d5e : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000447edd : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004385ac : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000446fea : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d731 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046f430 : clc ; mov rdx, r8 ; jmp 0x46f402
0x00000000004129ac : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041abd6 : clc ; pop rbp ; pop r12 ; ret
0x0000000000471977 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000475523 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000493ea6 : clc ; push rax ; hlt ; clc ; inc eax ; clc ; call qword ptr [rax]
0x0000000000490fc8 : clc ; push rbx ; ret
0x00000000004129c5 : clc ; ret
0x0000000000482e8a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004745bf : clc ; shr rax, 2 ; ret
0x0000000000481afd : clc ; std ; jbe 0x481b0d ; ret
0x0000000000485301 : clc ; sub rax, r8 ; ret
0x0000000000440c56 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446bfb : clc ; sub rax, rsi ; ret
0x000000000042b88b : clc ; vzeroupper ; ret
0x00000000004ab2fc : cld ; add bh, dh ; ljmp ptr [rbx + rax - 2] ; call rsp
0x000000000044817f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004a3afa : cld ; call rax
0x00000000004b40be : cld ; call rdx
0x00000000004a3e92 : cld ; dec dword ptr [rax + 0x20fffcb7] ; mov dh, 0xfc ; jmp qword ptr [rax]
0x00000000004a3efe : cld ; dec dword ptr [rax - 0x77000349] ; mov bh, 0xfc ; jmp qword ptr [rax]
0x00000000004a3f12 : cld ; dec eax ; mov dh, 0xfc ; jmp qword ptr [rax]
0x00000000004a3af6 : cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000004a3af2 : cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000004a3ae2 : cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; jmp rax
0x00000000004a3ae6 : cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; jmp rax
0x000000000047bcce : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000044825c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004481ca : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a3e86 : cld ; jmp qword ptr [rax]
0x00000000004b2eb2 : cld ; jmp qword ptr [rbx]
0x00000000004b32b2 : cld ; jmp qword ptr [rcx]
0x00000000004b418a : cld ; jmp qword ptr [rsi]
0x00000000004a3aea : cld ; jmp rax
0x00000000004b2e52 : cld ; jmp rdx
0x000000000042fae2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fce5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fee5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004300e5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447d66 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000447ee8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004385be : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000446ff8 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000446ff2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f716 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434da6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f8f6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d26 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fad6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ca6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f536 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e26 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f3c1 : cld ; ret
0x0000000000494a4d : cld ; stc ; lcall ptr [rsi + 0x33] ; cli ; jmp rax
0x00000000004a6fd6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000447882 : cld ; vzeroupper ; ret
0x00000000004b2194 : cld ; xchg eax, edx ; sti ; jmp qword ptr [rax]
0x0000000000415661 : cli ; add ch, al ; pop rax ; ret
0x0000000000415768 : cli ; add ch, al ; push rcx ; ret 0xffff
0x00000000004692c5 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000411622 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000447d51 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x447d61 ; mov byte ptr [rdi], cl ; ret
0x0000000000446d4b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000004385dc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448e3e : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448e9c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004947ba : cli ; call qword ptr [rax + 0x10fffa05]
0x00000000004947b2 : cli ; call qword ptr [rax + 0x10fffa06]
0x00000000004947aa : cli ; call qword ptr [rax + 0x10fffa07]
0x00000000004947a2 : cli ; call qword ptr [rax + 0x10fffa08]
0x000000000049479a : cli ; call qword ptr [rax + 0x10fffa09]
0x0000000000494ed2 : cli ; call qword ptr [rax + 0x10fffa0c]
0x0000000000494f16 : cli ; call qword ptr [rax + 0x10fffa0e]
0x0000000000494eda : cli ; call qword ptr [rax + 0x10fffa0f]
0x0000000000494f1e : cli ; call qword ptr [rax + 0x10fffa11]
0x0000000000494ee2 : cli ; call qword ptr [rax + 0x10fffa12]
0x0000000000494f26 : cli ; call qword ptr [rax + 0x10fffa14]
0x0000000000494eea : cli ; call qword ptr [rax + 0x10fffa15]
0x0000000000494f2e : cli ; call qword ptr [rax + 0x10fffa17]
0x0000000000494ef2 : cli ; call qword ptr [rax + 0x10fffa18]
0x0000000000494f36 : cli ; call qword ptr [rax + 0x10fffa1a]
0x0000000000494efa : cli ; call qword ptr [rax + 0x10fffa1b]
0x0000000000494f3e : cli ; call qword ptr [rax + 0x10fffa1d]
0x0000000000494f02 : cli ; call qword ptr [rax + 0x10fffa1e]
0x0000000000494f46 : cli ; call qword ptr [rax + 0x10fffa20]
0x000000000049477e : cli ; call qword ptr [rax + 0x20fffa0e]
0x0000000000494566 : cli ; call qword ptr [rax + 0x20fffa11]
0x0000000000494c76 : cli ; call qword ptr [rax + 0x20fffa35]
0x0000000000494a5e : cli ; call qword ptr [rax + 0x20fffa38]
0x0000000000495016 : cli ; call qword ptr [rax + 0x30fffa8b]
0x0000000000495066 : cli ; call qword ptr [rax - 0x1f00055c]
0x0000000000494f0a : cli ; call qword ptr [rax - 0x2f0005df]
0x0000000000494586 : cli ; call qword ptr [rax]
0x00000000004b1b0a : cli ; call qword ptr [rbx]
0x00000000004b180a : cli ; call qword ptr [rcx]
0x00000000004b1022 : cli ; call qword ptr [rdi]
0x0000000000494d12 : cli ; call qword ptr [rdx + 0x12fffa30]
0x0000000000494612 : cli ; call qword ptr [rdx + 0x22fffa13]
0x0000000000494632 : cli ; call qword ptr [rdx]
0x00000000004945ae : cli ; call qword ptr [rsi + 0x26fffa10]
0x0000000000494aa6 : cli ; call qword ptr [rsi + 0x26fffa37]
0x0000000000494ac6 : cli ; call qword ptr [rsi]
0x0000000000495076 : cli ; call rax
0x00000000004b0f8e : cli ; call rcx
0x0000000000494622 : cli ; call rdx
0x00000000004945be : cli ; call rsi
0x00000000004946ea : cli ; call rsp
0x000000000044c335 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045d4de : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f530 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045c495 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004505ce : cli ; dec dword ptr [rbx + rcx*4 + 0x25] ; push rcx ; ret
0x0000000000471bc7 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000494572 : cli ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x0000000000494c82 : cli ; inc dword ptr [rax + 0x34] ; cli ; call rax
0x0000000000494a6a : cli ; inc dword ptr [rax + 0x37] ; cli ; call rax
0x000000000049478a : cli ; inc dword ptr [rax + 0xd] ; cli ; jmp rax
0x0000000000494bde : cli ; inc dword ptr [rax + rdi - 6] ; call rsp
0x0000000000495062 : cli ; inc dword ptr [rax - 0x5d] ; cli ; call qword ptr [rax - 0x1f00055c]
0x0000000000494562 : cli ; inc dword ptr [rax] ; adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x0000000000494c72 : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax + 0x20fffa35]
0x0000000000494f8a : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x00000000004950ee : cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000494a5a : cli ; inc dword ptr [rax] ; cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x000000000049511a : cli ; inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x00000000004597ef : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004946e6 : cli ; inc dword ptr [rcx + rdx - 6] ; call rsp
0x000000000045254d : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000455835 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000049461e : cli ; inc dword ptr [rdx + 0x12] ; cli ; call rdx
0x0000000000494b16 : cli ; inc dword ptr [rdx + 0x39] ; cli ; call rdx
0x0000000000494d3e : cli ; inc dword ptr [rdx] ; sub edi, edx ; push qword ptr [rdx + 0x2a] ; cli ; jmp rdx
0x0000000000494ab2 : cli ; inc dword ptr [rsi + 0x36] ; cli ; call rsi
0x00000000004945ba : cli ; inc dword ptr [rsi + 0xf] ; cli ; call rsi
0x00000000004945aa : cli ; inc dword ptr [rsi] ; adc edx, edi ; call qword ptr [rsi + 0x26fffa10]
0x0000000000494aa2 : cli ; inc dword ptr [rsi] ; cmp dl, bh ; call qword ptr [rsi + 0x26fffa37]
0x00000000004950e6 : cli ; inc eax ; cli ; jmp rax
0x00000000004950b2 : cli ; inc eax ; int1 ; cli ; call rax
0x0000000000495082 : cli ; inc eax ; lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000494b36 : cli ; inc edx ; xor eax, 0x3552fffa ; cli ; jmp rdx
0x0000000000438597 : cli ; jg 0x4385aa ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446d16 : cli ; jg 0x446d28 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447349 : cli ; jg 0x44735c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004477b1 : cli ; jg 0x4477c4 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447ed2 : cli ; jg 0x447ee2 ; vzeroupper ; ret
0x00000000004480a8 : cli ; jg 0x4480b8 ; vzeroupper ; ret
0x00000000004949be : cli ; jmp qword ptr [rax + 0x10fffa04]
0x0000000000494ec6 : cli ; jmp qword ptr [rax + 0x10fffa29]
0x0000000000494cc2 : cli ; jmp qword ptr [rax + 0x10fffa2a]
0x00000000004949b6 : cli ; jmp qword ptr [rax + 0x20fffa05]
0x00000000004949ae : cli ; jmp qword ptr [rax + 0x20fffa06]
0x00000000004949a6 : cli ; jmp qword ptr [rax + 0x20fffa07]
0x000000000049499e : cli ; jmp qword ptr [rax + 0x20fffa08]
0x0000000000494792 : cli ; jmp qword ptr [rax + 0x20fffa0a]
0x000000000049456a : cli ; jmp qword ptr [rax]
0x000000000049460e : cli ; jmp qword ptr [rdx]
0x00000000004945b2 : cli ; jmp qword ptr [rsi]
0x000000000049455a : cli ; jmp rax
0x000000000040d2c4 : cli ; jmp rdx
0x00000000004945a2 : cli ; jmp rsi
0x0000000000494c06 : cli ; jmp rsp
0x0000000000494c4a : cli ; ljmp ptr [rdx + 0x33] ; cli ; call qword ptr [rax]
0x00000000004948ce : cli ; ljmp ptr [rsi + 0x54fffa02] ; or bh, dl ; call rsp
0x000000000042fee8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000040d5a6 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042bb98 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042a646 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9441 : cli ; push 0x6e ; ja 0x4a93ce ; ret 0x48f
0x000000000049456e : cli ; push qword ptr [rax + 0x40fffa10] ; adc dl, bh ; call rax
0x0000000000494c7e : cli ; push qword ptr [rax + 0x40fffa34] ; xor al, 0xfa ; call rax
0x0000000000494e8e : cli ; push qword ptr [rax + 0x50fffa28] ; xor dl, bh ; call rax
0x0000000000494ece : cli ; push qword ptr [rax + 0xb] ; cli ; call qword ptr [rax + 0x10fffa0c]
0x0000000000494bda : cli ; push qword ptr [rax + rdi + 0x3844fffa] ; cli ; call rsp
0x00000000004950ae : cli ; push qword ptr [rax - 0x3f00050f] ; int1 ; cli ; call rax
0x000000000049507e : cli ; push qword ptr [rax - 0x54] ; cli ; inc eax ; lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000495022 : cli ; push qword ptr [rax - 0x70] ; cli ; call qword ptr [rax]
0x0000000000495002 : cli ; push qword ptr [rax - 0x7d] ; cli ; call qword ptr [rax]
0x000000000049497a : cli ; push qword ptr [rax] ; add eax, 0x4b0fffa ; cli ; jmp qword ptr [rax]
0x0000000000494ec2 : cli ; push qword ptr [rax] ; sub bh, dl ; jmp qword ptr [rax + 0x10fffa29]
0x0000000000494cbe : cli ; push qword ptr [rax] ; sub edi, edx ; jmp qword ptr [rax + 0x10fffa2a]
0x00000000004946e2 : cli ; push qword ptr [rcx + rdx + 0x1144fffa] ; cli ; call rsp
0x0000000000494d42 : cli ; push qword ptr [rdx + 0x2a] ; cli ; jmp rdx
0x000000000049461a : cli ; push qword ptr [rdx + 0x42fffa12] ; adc bh, dl ; call rdx
0x0000000000494b12 : cli ; push qword ptr [rdx + 0x42fffa39] ; cmp edx, edi ; call rdx
0x000000000049463a : cli ; push qword ptr [rdx] ; psubd mm7, mm7 ; ret 0xfa0e
0x0000000000494aae : cli ; push qword ptr [rsi + 0x46fffa36] ; cli ; call rsi
0x0000000000495166 : cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000494f86 : cli ; push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495116 : cli ; push rax ; idiv dl ; inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x0000000000495142 : cli ; push rax ; idiv edx ; call qword ptr [rax]
0x00000000004950be : cli ; push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495186 : cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x0000000000494a76 : cli ; push rax ; xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x0000000000447c89 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7ee5 : cli ; ret 0xac65
0x000000000044bdeb : cli ; setae al ; ret
0x00000000004b0c09 : cli ; std ; jmp qword ptr [rdx]
0x0000000000440a89 : cli ; test rdx, rdx ; je 0x440aa9 ; bsf rax, rdx ; ret
0x0000000000473848 : cli ; test rdx, rdx ; je 0x473879 ; bsf rax, rdx ; ret
0x00000000004a6b2a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004ab872 : cmc ; call qword ptr [rbx]
0x00000000004abd2a : cmc ; call qword ptr [rdx]
0x00000000004abdca : cmc ; call rax
0x00000000004abd3e : cmc ; call rsp
0x00000000004abee2 : cmc ; jmp qword ptr [rax]
0x00000000004a9869 : cmc ; mov ch, 0xab ; ret
0x0000000000434d2a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f76e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000046fe97 : cmc ; mov rbp, rax ; jmp 0x46fe64
0x00000000004460d3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a6717 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000459ea7 : cmc ; ret 0x25
0x00000000004460d7 : cmc ; sub eax, edx ; ret
0x00000000004a8ea5 : cmc ; xlatb ; ret 0x4e27
0x0000000000419089 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000419088 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004481a4 : cmove eax, ecx ; pop rbx ; ret
0x0000000000471f21 : cmove eax, ecx ; ret
0x00000000004237d3 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000044816c : cmove eax, edx ; pop rbx ; ret
0x000000000042390f : cmove eax, edx ; ret
0x0000000000414adf : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e818 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000471f20 : cmove r8, rcx ; ret
0x00000000004481a3 : cmove rax, rcx ; pop rbx ; ret
0x00000000004237d2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000044816b : cmove rax, rdx ; pop rbx ; ret
0x000000000042390e : cmove rax, rdx ; ret
0x000000000047e817 : cmove rcx, rax ; mov rax, rcx ; ret
0x00000000004164cb : cmovg eax, ecx ; test rdx, rdx ; jne 0x4164c9 ; ret
0x0000000000470a3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x470a39 ; ret
0x0000000000422e0a : cmovne eax, ecx ; ret
0x00000000004481fc : cmovne eax, edx ; pop rbx ; ret
0x000000000042380f : cmovne eax, edx ; ret
0x0000000000440614 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000422e09 : cmovne rax, rcx ; ret
0x00000000004481fb : cmovne rax, rdx ; pop rbx ; ret
0x000000000042380e : cmovne rax, rdx ; ret
0x0000000000440613 : cmovne rax, rdx ; vzeroupper ; ret
0x0000000000450bac : cmovs eax, edx ; ret
0x000000000048dc28 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000471c88 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x471c89 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000044814e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000004481e0 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000446be8 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004af465 : cmp al, 0 ; add byte ptr [rax], ch ; ret 0xfff7
0x0000000000488460 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004559d2 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044f8c2 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000416697 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000416686 : cmp al, 0x24 ; call 0x412914
0x000000000048dd7d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048d24c : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d1dd : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a7b20 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b1b34 : cmp al, 0xaf ; cli ; call qword ptr [rdx]
0x000000000045a3c1 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040d5a9 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x00000000004ac64d : cmp al, 0xf6 ; call qword ptr [rdi]
0x000000000044b69d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000446596 : cmp al, byte ptr [rsi - 1] ; jne 0x4465bc ; xor eax, eax ; ret
0x000000000042b406 : cmp al, dh ; ret
0x000000000042b405 : cmp al, r14b ; ret
0x000000000048afc6 : cmp bh, 0x10 ; jne 0x48afef ; xor eax, eax ; ret
0x000000000048e166 : cmp bh, 0x10 ; jne 0x48e185 ; xor eax, eax ; ret
0x000000000048efc6 : cmp bh, 0x10 ; jne 0x48efe5 ; xor eax, eax ; ret
0x000000000048fa36 : cmp bh, 0x10 ; jne 0x48fa5f ; xor eax, eax ; ret
0x000000000048e14c : cmp bh, 0x30 ; jne 0x48e181 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048efac : cmp bh, 0x30 ; jne 0x48efe1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000410a02 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004123bf : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000476db3 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000041045e : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000412e69 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x00000000004016fb : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000042b447 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000004705a5 : cmp byte ptr [rax + 1], cl ; ret
0x0000000000470030 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045b027 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004511f8 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045b1a4 : cmp byte ptr [rax - 0x75], cl ; jl 0x45b1d5 ; and byte ptr [rax + 1], cl ; ret
0x0000000000410a03 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004b5874 : cmp byte ptr [rax - 0x7ba80000], ah ; std ; call qword ptr [rbx]
0x000000000046fdd6 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000452b04 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042b436 : cmp byte ptr [rax], ah ; ret
0x0000000000416b03 : cmp byte ptr [rax], al ; je 0x416b15 ; ret
0x000000000048d14f : cmp byte ptr [rax], al ; je 0x48d178 ; add rsp, 0x18 ; ret
0x00000000004401b0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042b426 : cmp byte ptr [rax], dl ; ret
0x000000000042b425 : cmp byte ptr [rax], r10b ; ret
0x000000000042b435 : cmp byte ptr [rax], r12b ; ret
0x00000000004401af : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004b3ff1 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b4025 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b3fbd : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048ac68 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040daf6 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416180 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000488fed : cmp byte ptr [rbx], ah ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004719b0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d24b : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d25e ; mov qword ptr [rax], rdx ; ret
0x0000000000480106 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000494c54 : cmp byte ptr [rcx], 0xfa ; call qword ptr [rax]
0x0000000000416ac8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042cd2d : cmp byte ptr [rdi], dl ; ret
0x000000000042d840 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d829 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d812 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c2ce : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d1dc : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d205 ; mov rax, qword ptr [rax] ; ret
0x00000000004a4f48 : cmp byte ptr [rsi - 3], bh ; jmp qword ptr [rax]
0x0000000000488d42 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000404867 : cmp cl, ch ; ret 0xfffb
0x0000000000440611 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044808a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000048afc5 : cmp dil, 0x10 ; jne 0x48aff0 ; xor eax, eax ; ret
0x000000000048e165 : cmp dil, 0x10 ; jne 0x48e186 ; xor eax, eax ; ret
0x000000000048efc5 : cmp dil, 0x10 ; jne 0x48efe6 ; xor eax, eax ; ret
0x000000000048fa35 : cmp dil, 0x10 ; jne 0x48fa60 ; xor eax, eax ; ret
0x0000000000447d50 : cmp dl, 1 ; ja 0x447d73 ; jb 0x447d62 ; mov byte ptr [rdi], cl ; ret
0x00000000004385db : cmp dl, 1 ; jb 0x4385ed ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446d4a : cmp dl, 1 ; jb 0x446d58 ; mov byte ptr [rdi], cl ; ret
0x0000000000422e75 : cmp dl, al ; jne 0x422e68 ; sub rax, 0x10 ; ret
0x0000000000494aa5 : cmp dl, bh ; call qword ptr [rsi + 0x26fffa37]
0x0000000000494be1 : cmp dl, bh ; call rsp
0x0000000000494bdd : cmp dl, bh ; inc dword ptr [rax + rdi - 6] ; call rsp
0x0000000000494a61 : cmp dl, bh ; jmp qword ptr [rax]
0x0000000000494be0 : cmp dl, r15b ; call rsp
0x0000000000422e74 : cmp dl, r8b ; jne 0x422e69 ; sub rax, 0x10 ; ret
0x0000000000471958 : cmp dword ptr [rax + 0x30], 0 ; je 0x471967 ; ret
0x000000000040eaa1 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000434868 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000416b01 : cmp dword ptr [rdi + 0x38], 0 ; je 0x416b17 ; ret
0x0000000000424611 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000047f98f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000471976 : cmp eax, -1 ; je 0x471989 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000481afc : cmp eax, -3 ; jbe 0x481b0e ; ret
0x0000000000487855 : cmp eax, 0x23171d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000460e69 : cmp eax, 0x2558b2 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000412912 : cmp eax, 0x2a6690 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040389a : cmp eax, 0x2b56c0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004956f5 : cmp eax, 0x3d21fffb ; sti ; jmp qword ptr [rcx]
0x00000000004956f9 : cmp eax, 0x3d21fffb ; sti ; jmp rdx
0x0000000000495979 : cmp eax, 0x3d21fffb ; sti ; jmp rsp
0x00000000004956f1 : cmp eax, 0x3d34fffb ; sti ; jmp qword ptr [rcx]
0x0000000000495895 : cmp eax, 0x3d44fffb ; sti ; jmp qword ptr [rcx]
0x0000000000495701 : cmp eax, 0x3d54fffb ; sti ; jmp qword ptr [rcx]
0x0000000000495789 : cmp eax, 0x3d72fffb ; sti ; jmp qword ptr [rcx]
0x0000000000495849 : cmp eax, 0x3daefffb ; sti ; jmp rdx
0x0000000000495969 : cmp eax, 0x3decfffb ; sti ; jmp qword ptr [rcx]
0x0000000000495869 : cmp eax, 0x3e00fffb ; sti ; jmp qword ptr [rcx]
0x00000000004957c5 : cmp eax, 0x3e9dfffb ; sti ; jmp qword ptr [rcx]
0x0000000000495a5d : cmp eax, 0x3ee4fffb ; sti ; jmp qword ptr [rcx]
0x000000000049597d : cmp eax, 0x3ee4fffb ; sti ; jmp rsp
0x0000000000494fbd : cmp eax, 0x60d0fffa ; cli ; call rax
0x000000000044a7b2 : cmp eax, 0x7d8b48 ; call r12
0x000000000044c50f : cmp eax, 0x83482f74 ; ret
0x000000000044c336 : cmp eax, 0x83497174 ; ret
0x00000000004735c4 : cmp eax, 0x89000001 ; ret 0x8948
0x00000000004af631 : cmp eax, 0x958c0000 ; clc ; jmp qword ptr [rsi]
0x00000000004af61d : cmp eax, 0x95900000 ; clc ; call qword ptr [rax]
0x0000000000449656 : cmp eax, 0xfffff000 ; ja 0x449668 ; ret
0x00000000004496a4 : cmp eax, 0xfffff000 ; ja 0x4496b8 ; ret
0x00000000004498af : cmp eax, 0xfffff000 ; ja 0x449918 ; ret
0x0000000000449945 : cmp eax, 0xfffff000 ; ja 0x449958 ; ret
0x0000000000449982 : cmp eax, 0xfffff000 ; ja 0x4499e8 ; ret
0x0000000000449a18 : cmp eax, 0xfffff000 ; ja 0x449a30 ; ret
0x0000000000449a48 : cmp eax, 0xfffff000 ; ja 0x449a60 ; ret
0x0000000000449c52 : cmp eax, 0xfffff000 ; ja 0x449ca0 ; ret
0x0000000000449cc8 : cmp eax, 0xfffff000 ; ja 0x449ce0 ; ret
0x000000000044a421 : cmp eax, 0xfffff000 ; ja 0x44a438 ; ret
0x000000000045afae : cmp eax, 0xfffff000 ; ja 0x45afc8 ; ret
0x0000000000475616 : cmp eax, 0xfffff000 ; ja 0x475628 ; ret
0x000000000047566a : cmp eax, 0xfffff000 ; ja 0x475680 ; ret
0x0000000000449048 : cmp eax, 0xfffff001 ; jae 0x449057 ; ret
0x00000000004495c8 : cmp eax, 0xfffff001 ; jae 0x4495d7 ; ret
0x000000000044a658 : cmp eax, 0xfffff001 ; jae 0x44a667 ; ret
0x000000000044a688 : cmp eax, 0xfffff001 ; jae 0x44a697 ; ret
0x000000000044a6b8 : cmp eax, 0xfffff001 ; jae 0x44a6c7 ; ret
0x000000000044bd5b : cmp eax, 0xfffff001 ; jae 0x44bd6a ; ret
0x000000000044bd88 : cmp eax, 0xfffff001 ; jae 0x44bd97 ; ret
0x0000000000475598 : cmp eax, 0xfffff001 ; jae 0x4755a7 ; ret
0x0000000000488608 : cmp eax, 0xfffff001 ; jae 0x488617 ; ret
0x000000000044870b : cmp eax, 2 ; je 0x44871f ; xor eax, eax ; ret
0x000000000044beca : cmp eax, 4 ; je 0x44bed5 ; ret
0x000000000046f42b : cmp eax, ecx ; jg 0x46f448 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f407
0x0000000000446b9f : cmp eax, ecx ; jle 0x446bdf ; movsxd rax, ecx ; ret
0x00000000004465b3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041880b : cmp eax, edx ; jae 0x418837 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487d84 : cmp eax, esi ; je 0x487d95 ; ret
0x0000000000462f4f : cmp eax, esp ; je 0x462d86 ; jmp 0x462f24
0x000000000046f42a : cmp eax, r9d ; jg 0x46f449 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f408
0x000000000045654c : cmp ebp, ebx ; jb 0x4565be ; mov rdx, rax ; jmp 0x456515
0x000000000044be66 : cmp ebx, 0xa ; je 0x44be71 ; ret
0x000000000044d47e : cmp ebx, eax ; setne dl ; jmp 0x44d46a
0x0000000000473ce5 : cmp ecx, 0xc00 ; je 0x473cf9 ; ret
0x000000000044c091 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44c086 ; ret
0x00000000004871be : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x4871cf ; add rdx, rax ; jmp 0x4871d8
0x000000000044e982 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047f9d8 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f988 ; xor eax, eax ; ret
0x0000000000471f1e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d85b : cmp ecx, eax ; jne 0x42d889 ; xor eax, eax ; ret
0x000000000047e768 : cmp ecx, eax ; jne 0x47e712 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000484322 : cmp ecx, ecx ; ret
0x0000000000471c8a : cmp ecx, esi ; jne 0x471c87 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e756 : cmp ecx, esi ; jne 0x47e735 ; ret
0x0000000000465ec0 : cmp edi, eax ; ja 0x465ea7 ; mov eax, r9d ; ret
0x000000000047598e : cmp edi, edx ; ja 0x4759bd ; ret
0x0000000000446f52 : cmp edi, edx ; jb 0x446f5f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000465ebf : cmp edi, r8d ; ja 0x465ea8 ; mov eax, r9d ; ret
0x0000000000495001 : cmp edx, 0xfa8370ff ; call qword ptr [rax]
0x000000000041f6ba : cmp edx, eax ; jne 0x41f685 ; ret
0x0000000000447d3b : cmp edx, ecx ; jne 0x447d28 ; ret
0x0000000000447ea2 : cmp edx, ecx ; jne 0x447e8e ; vzeroupper ; ret
0x0000000000448065 : cmp edx, ecx ; jne 0x448049 ; vzeroupper ; ret
0x0000000000494a5d : cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x0000000000494c55 : cmp edx, edi ; call qword ptr [rax]
0x0000000000494b19 : cmp edx, edi ; call rdx
0x0000000000494b15 : cmp edx, edi ; inc dword ptr [rdx + 0x39] ; cli ; call rdx
0x0000000000494a99 : cmp edx, edi ; jmp rsi
0x000000000044bdea : cmp edx, edi ; setae al ; ret
0x00000000004743f6 : cmp edx, esi ; je 0x474407 ; test edx, edx ; jne 0x4743f9 ; ret
0x0000000000418849 : cmp esi, -1 ; setne al ; neg eax ; ret
0x0000000000458774 : cmp esi, 3 ; je 0x458786 ; ret
0x0000000000447335 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a8ea4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000417a6a : cmp esi, ecx ; jne 0x417a67 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000471957 : cmp qword ptr [rax + 0x30], 0 ; je 0x471968 ; ret
0x0000000000416b00 : cmp qword ptr [rdi + 0x38], 0 ; je 0x416b18 ; ret
0x000000000044be65 : cmp r11d, 0xa ; je 0x44be72 ; ret
0x000000000045654b : cmp r13, r11 ; jb 0x4565bf ; mov rdx, rax ; jmp 0x456516
0x0000000000449655 : cmp rax, -0x1000 ; ja 0x449669 ; ret
0x00000000004496a3 : cmp rax, -0x1000 ; ja 0x4496b9 ; ret
0x00000000004498ae : cmp rax, -0x1000 ; ja 0x449919 ; ret
0x0000000000449944 : cmp rax, -0x1000 ; ja 0x449959 ; ret
0x0000000000449981 : cmp rax, -0x1000 ; ja 0x4499e9 ; ret
0x0000000000449a17 : cmp rax, -0x1000 ; ja 0x449a31 ; ret
0x0000000000449a47 : cmp rax, -0x1000 ; ja 0x449a61 ; ret
0x0000000000449c51 : cmp rax, -0x1000 ; ja 0x449ca1 ; ret
0x0000000000449cc7 : cmp rax, -0x1000 ; ja 0x449ce1 ; ret
0x000000000044a420 : cmp rax, -0x1000 ; ja 0x44a439 ; ret
0x000000000045afad : cmp rax, -0x1000 ; ja 0x45afc9 ; ret
0x0000000000475615 : cmp rax, -0x1000 ; ja 0x475629 ; ret
0x0000000000475669 : cmp rax, -0x1000 ; ja 0x475681 ; ret
0x0000000000449047 : cmp rax, -0xfff ; jae 0x449058 ; ret
0x00000000004495c7 : cmp rax, -0xfff ; jae 0x4495d8 ; ret
0x000000000044a657 : cmp rax, -0xfff ; jae 0x44a668 ; ret
0x000000000044a687 : cmp rax, -0xfff ; jae 0x44a698 ; ret
0x000000000044a6b7 : cmp rax, -0xfff ; jae 0x44a6c8 ; ret
0x000000000044bd5a : cmp rax, -0xfff ; jae 0x44bd6b ; ret
0x000000000044bd87 : cmp rax, -0xfff ; jae 0x44bd98 ; ret
0x0000000000475597 : cmp rax, -0xfff ; jae 0x4755a8 ; ret
0x0000000000488607 : cmp rax, -0xfff ; jae 0x488618 ; ret
0x000000000047f98e : cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000481afb : cmp rax, -3 ; jbe 0x481b0f ; ret
0x000000000041880a : cmp rax, rdx ; jae 0x418838 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487d83 : cmp rax, rsi ; je 0x487d96 ; ret
0x000000000044c090 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c087 ; ret
0x000000000047f9d7 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47f989 ; xor eax, eax ; ret
0x0000000000471f1d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e767 : cmp rcx, r8 ; jne 0x47e713 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042d85a : cmp rcx, rax ; jne 0x42d88a ; xor eax, eax ; ret
0x0000000000471c89 : cmp rcx, rsi ; jne 0x471c88 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e755 : cmp rcx, rsi ; jne 0x47e736 ; ret
0x000000000047598d : cmp rdi, rdx ; ja 0x4759be ; ret
0x0000000000446f51 : cmp rdi, rdx ; jb 0x446f60 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041f6b9 : cmp rdx, r8 ; jne 0x41f686 ; ret
0x0000000000447d3a : cmp rdx, rcx ; jne 0x447d29 ; ret
0x0000000000447d39 : cmp rdx, rcx ; jne 0x447d2a ; ret
0x0000000000447ea1 : cmp rdx, rcx ; jne 0x447e8f ; vzeroupper ; ret
0x0000000000448064 : cmp rdx, rcx ; jne 0x44804a ; vzeroupper ; ret
0x000000000044bde9 : cmp rdx, rdi ; setae al ; ret
0x0000000000417a69 : cmp rsi, rcx ; jne 0x417a68 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000042d2d9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000040058c : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x000000000043dfc6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000467559 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000047caa8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000410560 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x2a
0x0000000000495714 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; ljmp ptr [rax + 0x3d] ; sti ; jmp qword ptr [rcx]
0x0000000000400b09 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000048b040 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a0fc : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048b0d5 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004516ff : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004920dc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049183c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b504d : cwde ; add byte ptr [rax], al ; mov al, 0x35 ; std ; jmp qword ptr [rcx]
0x00000000004adce8 : cwde ; mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004b5308 : cwde ; pop rax ; std ; call qword ptr [rdx]
0x00000000004422b1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000004422b2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044787d : dec byte ptr [rax + 0x7f] ; jl 0x4478a2 ; cld ; vzeroupper ; ret
0x000000000045dcd9 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x0000000000480ddf : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xbde8
0x0000000000472770 : dec byte ptr [rax - 0x77] ; ret
0x0000000000480d7d : dec byte ptr [rax - 0x7d] ; ret
0x000000000044a902 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e446 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000040dff7 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000481af9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x481b11 ; ret
0x00000000004568f3 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x00000000004a3e93 : dec dword ptr [rax + 0x20fffcb7] ; mov dh, 0xfc ; jmp qword ptr [rax]
0x00000000004112cd : dec dword ptr [rax + 0x29] ; ret
0x00000000004423f2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000482ac1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482c01 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041e745 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00000000004763ab : dec dword ptr [rax + 0x39] ; ret
0x00000000004130fd : dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004892a9 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x00000000004847be : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000046ee42 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000473559 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047f991 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004237d1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473d09 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045b02b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004728c1 : dec dword ptr [rax + 1] ; ret
0x00000000004965cb : dec dword ptr [rax + rsi*2] ; sti ; jmp qword ptr [rax]
0x0000000000403073 : dec dword ptr [rax - 0x39] ; ret
0x000000000044954f : dec dword ptr [rax - 0x39] ; ret 0
0x00000000004494f4 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045dd40 : dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000449467 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x00000000004689f6 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004497e5 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004493bc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000456804 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047fbb5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041eb98 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c2e2 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044f10c : dec dword ptr [rax - 0x75] ; jne 0x44f0a6 ; call rsi
0x000000000046920b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048cb0f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004a3eff : dec dword ptr [rax - 0x77000349] ; mov bh, 0xfc ; jmp qword ptr [rax]
0x0000000000481d3c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000041f844 : dec dword ptr [rax - 0x77] ; add eax, 0x29a014 ; ret
0x000000000048a497 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f531 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000401add : dec dword ptr [rax - 0x77] ; ret
0x000000000047597e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000041f03f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004243eb : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x00000000004758dd : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041edbc : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000423747 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045ae52 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046dd96 : dec dword ptr [rax - 0x77] ; ret 0x89e8
0x000000000046daa0 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x00000000004492e6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047874c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000423e66 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044a615 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x0000000000449441 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000045681d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044942d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000424278 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046bb19 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000047cd67 : dec dword ptr [rax - 0x77] ; ret 0xc8e8
0x0000000000475ebc : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000046fdda : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040587f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000469a03 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000481afa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x481b10 ; ret
0x00000000004047cf : dec dword ptr [rax - 0x7d] ; ret
0x0000000000454621 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452d0b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405dcb : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000004568f4 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048e0d7 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x00000000004593f8 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044b6a0 : dec dword ptr [rax - 0x7f] ; ret
0x000000000043486c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004770bd : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048ead4 : dec dword ptr [rax - 9] ; ret
0x00000000004a4e5f : dec dword ptr [rax] ; ja 0x4a4e64 ; jmp rax
0x0000000000461c44 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000467e8d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000045c496 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004240a3 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400e54 : dec dword ptr [rbx + 0x2bafa115] ; add bh, dh ; ret 0
0x0000000000422dbd : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x00000000004505cf : dec dword ptr [rbx + rcx*4 + 0x25] ; push rcx ; ret
0x0000000000471bc8 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000047115b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000460483 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000461b9f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047c409 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000046b325 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046aea7 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000040220d : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000047c685 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x00000000004581fa : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000044f109 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000458351 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045862f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045db36 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x0000000000489507 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e2bf : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004603e7 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c750 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x0000000000404811 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047d0f0 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046ae74 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041c276 : dec dword ptr [rcx - 0x7b] ; ret
0x00000000004601ef : dec dword ptr [rcx - 0x7d] ; ret
0x00000000004606eb : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x0000000000450bab : dec dword ptr [rdi] ; ret 0x41c3
0x000000000045320f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000446440 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045f9cf : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d84a : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042134c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000041884b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000049524f : dec dword ptr [rsi] ; xor bl, bh ; jmp qword ptr [rbx]
0x00000000004a4e9f : dec eax ; jne 0x4a4ea4 ; call rax
0x00000000004a3f13 : dec eax ; mov dh, 0xfc ; jmp qword ptr [rax]
0x00000000004965c7 : dec edi ; outsd dx, dword ptr [rsi] ; sti ; dec dword ptr [rax + rsi*2] ; sti ; jmp qword ptr [rax]
0x00000000004423f1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000480de8 : div bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000473742 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047e7b5 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000458771 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x458789 ; ret
0x0000000000465ed6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000046fe96 : div ebp ; mov rbp, rax ; jmp 0x46fe65
0x0000000000448278 : div ecx ; mov eax, eax ; ret
0x000000000044825f : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000046fe95 : div r13 ; mov rbp, rax ; jmp 0x46fe66
0x0000000000465ed5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042b937 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047e710 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004465b4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000046a874 : enter -0x6a5, -1 ; jmp 0x46a842
0x000000000048384b : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x00000000004422ae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004423ee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000042b717 : enter -0x73b, 0x77 ; ret
0x000000000047e81a : enter -0x76b8, -0x38 ; ret
0x000000000042c0e4 : enter -2, -1 ; ret
0x000000000046f42c : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x46f406
0x0000000000440839 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046bd5c : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000484611 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000440b9e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x0000000000425c9d : enter 0x31c3, -0x40 ; ret
0x0000000000446ba0 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004b0c04 : enter 0x53, 0 ; or dl, bh ; std ; jmp qword ptr [rdx]
0x00000000004a965c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b5304 : enter 0x9a, 0 ; cwde ; pop rax ; std ; call qword ptr [rdx]
0x000000000042d386 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440201 : enter 0xf66, -0x15 ; ret
0x000000000048d1f3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000040fcf8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f7c6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004afa14 : fadd dword ptr [rcx] ; add byte ptr [rax - 0x7e], ch ; stc ; call qword ptr [rax]
0x0000000000465ec3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000042ced1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000490004 : fbstp dword ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8c98 : fcmovb st(0), st(3) ; ret
0x0000000000440cbb : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045ebb6 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048d1f9 : fcomi st(3) ; ret
0x00000000004104e9 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000414726 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a4b1 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004a9a19 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a7c80 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b1818 : fcomp qword ptr [rdi] ; add ah, ah ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x00000000004884f8 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004885df : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000494479 : fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000048ae49 : fdiv st(3) ; ret
0x00000000004943fd : fdivp st(1) ; call rax
0x00000000004af671 : fdivr st(0) ; call qword ptr [rax]
0x0000000000494491 : fdivr st(1) ; call qword ptr [rax]
0x00000000004a6fd5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004465b8 : fdivr st(7) ; ret
0x000000000040f058 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000042109e : fiadd word ptr [rdi - 0x7bf0ffd7] ; ret
0x00000000004a9866 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000494c48 : fidiv dword ptr [rbx] ; cli ; ljmp ptr [rdx + 0x33] ; cli ; call qword ptr [rax]
0x0000000000488155 : fidivr dword ptr [rax + 1] ; ret
0x0000000000459715 : fild dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004141fd : fild qword ptr [rbp + 0x2a] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000046c73d : fild qword ptr [rdx - 0x74b7ffdc] ; add al, 0xf8 ; jmp rax
0x0000000000424701 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000464cb2 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x0000000000424702 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000419cec : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x00000000004553b9 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000480dd7 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000046584d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000042a466 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046c1cd : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000450d4f : fimul word ptr [rax + 1] ; ret
0x000000000048445e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4844b8
0x000000000048825e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4882b8
0x0000000000421aa1 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41dce6
0x000000000041672e : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000470e30 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000458987 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000483451 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046669c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f5a6 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000047801e : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c620 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000048346b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000455097 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d6c4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000420f3b : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405dee : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000457cea : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000480de2 : fisttp word ptr [rax - 0x77] ; ret 0xbde8
0x0000000000401943 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000004834ef : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000043f2fd : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042d2a1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cfa1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000483764 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7cc1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004735f2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b349 : fldenv dword ptr [rsi + 0xf] ; je 0x42b3a6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b627 : fldenv dword ptr [rsi + 0xf] ; je 0x42b684 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d321 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b241 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004686bc : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000484504 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041adef : fmul dword ptr [rax + 0x39] ; ret
0x00000000004121c8 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e0d1 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489a54 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x00000000004770c0 : fmul dword ptr [rcx + 0x21] ; ret
0x00000000004690a0 : fmul dword ptr [rdi] ; ret
0x0000000000486ce2 : fmul qword ptr [rax - 0x77] ; ret
0x0000000000424a59 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438f7f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000045f7af : fmul qword ptr [rdi] ; lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457ee8 : fmul qword ptr [rdi] ; ret 0xc389
0x00000000004245bf : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000045654d : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x456514
0x000000000040db49 : fpatan ; ret
0x000000000042d0a1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ab870 : fst qword ptr [rdx - 0xb] ; call qword ptr [rbx]
0x00000000004a79a7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7d20 : fstp st(0) ; ret 0xde5d
0x0000000000449058 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000449668 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042d3a1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000441124 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004469cb : fsub qword ptr [rsi + 0xf] ; jmp 0x446997
0x000000000042d1a1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044031c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000402b9a : fsubp st(0) ; and bh, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000042378b : fsubp st(0) ; pop rdi ; ret
0x0000000000449c14 : fsubr st(3) ; ret 0xf66
0x00000000004a99f8 : fucom st(5) ; loop 0x4a9a51 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047a251 : fucomi st(3) ; ret 0x1f0f
0x000000000048b4f1 : fucompi st(1) ; ret
0x00000000004b0881 : fyl2xp1 ; call qword ptr [rax]
0x0000000000494431 : fyl2xp1 ; call rax
0x000000000044d443 : hlt ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044acd1 : hlt ; call r15
0x0000000000493e99 : hlt ; clc ; call qword ptr [rax]
0x0000000000493ea9 : hlt ; clc ; inc eax ; clc ; call qword ptr [rax]
0x00000000004af630 : hlt ; cmp eax, 0x958c0000 ; clc ; jmp qword ptr [rsi]
0x00000000004a7da8 : hlt ; jmp 0x4a7d7d
0x00000000004b0a02 : hlt ; jmp qword ptr [rbx]
0x00000000004b3d2a : hlt ; jmp qword ptr [rcx]
0x0000000000434caa : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f95e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004460c3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a5a : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000460928 : hlt ; pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000450640 : hlt ; ret 0x26
0x00000000004b19e1 : hlt ; std ; call rdx
0x00000000004a7ee3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004460c7 : hlt ; sub eax, edx ; ret
0x000000000046c428 : hlt ; test al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004763a8 : hlt ; xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x000000000045db3c : idiv bh ; call rax
0x000000000045ed84 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045e896 : idiv bh ; jmp qword ptr [rax]
0x0000000000450ba6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000495868 : idiv byte ptr [rip + 0x3e00fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000495119 : idiv dl ; inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x000000000045254c : idiv dl ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000495111 : idiv dl ; jmp rax
0x000000000045de56 : idiv edi ; call qword ptr [rax]
0x000000000045dd3e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000046a841 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469a9d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049511d : idiv edx ; call qword ptr [rax]
0x000000000049513d : idiv edx ; call rax
0x0000000000495121 : idiv edx ; jmp qword ptr [rax]
0x0000000000495141 : idiv edx ; push rax ; idiv edx ; call qword ptr [rax]
0x0000000000478ae7 : imul al ; wait ; jns 0x478aec ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b2191 : imul eax, dword ptr [rax], 0xfb92fc00 ; jmp qword ptr [rax]
0x0000000000444c21 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000468182 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000414473 : imul ebp, dword ptr [rbx + 0x2a], 0x4f0f4800 ; ret 0x8948
0x00000000004ad41f : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000495fa1 : imul edi, ebx, -1 ; xor byte ptr [rbx - 5], ch ; call qword ptr [rax]
0x000000000049406d : imul edi, ecx, 0xf96a20ff ; call qword ptr [rax]
0x00000000004049a4 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004182be : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044409c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000495a60 : in al, 0x3e ; sti ; jmp qword ptr [rcx]
0x0000000000495980 : in al, 0x3e ; sti ; jmp rsp
0x0000000000440dac : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044c333 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x00000000004b181c : in al, 0x93 ; cli ; call qword ptr [rcx]
0x000000000045e430 : in al, 0xf ; lahf ; ret
0x0000000000434c8a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000447d3e : in al, 0xf3 ; ret
0x0000000000494449 : in al, 0xf9 ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x00000000004943e9 : in al, 0xf9 ; jmp rax
0x0000000000463490 : in al, dx ; add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000046fb47 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fac0 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000422554 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x298
0x000000000045e8d4 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045e711 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000049596c : in al, dx ; cmp eax, 0x3d21fffb ; sti ; jmp qword ptr [rcx]
0x0000000000414ae1 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f95a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043508a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004b0244 : in al, dx ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x0000000000472657 : in al, dx ; or al, ch ; ret 0xf8dd
0x000000000041eddf : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042a854 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000494608 : in al, dx ; or eax, 0xd7cfffa ; cli ; jmp qword ptr [rdx]
0x000000000048ddd9 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a854 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000494d10 : in al, dx ; sub dl, bh ; call qword ptr [rdx + 0x12fffa30]
0x00000000004a943e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93d1 ; ret 0x48f
0x00000000004a943d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93d2 ; ret 0x48f
0x00000000004a7b43 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000044d8d6 : in eax, 0x26 ; add al, ch ; ret 0xfde1
0x00000000004847c2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a6dd9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048c31a : in eax, 0x83 ; call qword ptr [rcx]
0x000000000046369d : in eax, 0xdf ; loopne 0x46362e ; ret
0x00000000004a99f9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004748b3 : in eax, 0xf ; je 0x4748d8 ; add rax, 2 ; ret
0x00000000004481f9 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000434d0a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004944ad : in eax, 0xf9 ; call qword ptr [rax]
0x00000000004943a9 : in eax, 0xf9 ; jmp qword ptr [rax]
0x00000000004944cd : in eax, 0xf9 ; jmp rax
0x00000000004a8ec1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000042474b : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000466c48 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000469dd8 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000044a78a : in eax, dx ; jne 0x44a7a7 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b2f5 : in eax, dx ; jne 0x44b31f ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b328 : in eax, dx ; jne 0x44b378 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b354 : in eax, dx ; jne 0x44b3d8 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049004f : in eax, dx ; jne 0x490031 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004902a2 : in eax, dx ; jne 0x49028f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490e5c : in eax, dx ; jne 0x490e47 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004468e2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000042f76a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043510a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004164d2 : in eax, dx ; ret
0x0000000000469a01 : in eax, dx ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446a32 : in eax, dx ; sub rax, 1 ; ret
0x0000000000446d48 : inc bl ; cmp dl, 1 ; jb 0x446d5a ; mov byte ptr [rdi], cl ; ret
0x0000000000416ac2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044a91c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x0000000000458775 : inc byte ptr [rbx] ; je 0x458785 ; ret
0x000000000047f258 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494573 : inc dword ptr [rax + 0x10] ; cli ; call rax
0x000000000049442b : inc dword ptr [rax + 0x10fff9e6] ; fyl2xp1 ; call rax
0x0000000000494c83 : inc dword ptr [rax + 0x34] ; cli ; call rax
0x0000000000494a6b : inc dword ptr [rax + 0x37] ; cli ; call rax
0x00000000004942af : inc dword ptr [rax + 0x40fff9b0] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x000000000049420f : inc dword ptr [rax + 0x40fff9b1] ; mov bl, 0xf9 ; jmp qword ptr [rax]
0x000000000049478b : inc dword ptr [rax + 0xd] ; cli ; jmp rax
0x0000000000494bdf : inc dword ptr [rax + rdi - 6] ; call rsp
0x000000000049444b : inc dword ptr [rax - 0x1a] ; stc ; call rax
0x0000000000494447 : inc dword ptr [rax - 0x1c] ; stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x000000000049439b : inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x000000000049433f : inc dword ptr [rax - 0x2f000657] ; stosb byte ptr [rdi], al ; stc ; jmp qword ptr [rax]
0x0000000000494353 : inc dword ptr [rax - 0x2f000665] ; pushfq ; stc ; jmp qword ptr [rax]
0x00000000004944fb : inc dword ptr [rax - 0x30] ; stc ; call qword ptr [rax - 0x1f00062f]
0x000000000049429b : inc dword ptr [rax - 0x4a] ; stc ; jmp qword ptr [rax]
0x00000000004941f7 : inc dword ptr [rax - 0x4b] ; stc ; jmp qword ptr [rax]
0x0000000000494213 : inc dword ptr [rax - 0x4d] ; stc ; jmp qword ptr [rax]
0x00000000004942b3 : inc dword ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x00000000004942cf : inc dword ptr [rax - 0x50] ; stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; call rax
0x0000000000494383 : inc dword ptr [rax - 0x55] ; stc ; call qword ptr [rax - 0x1f000654]
0x000000000049432f : inc dword ptr [rax - 0x5c] ; stc ; call qword ptr [rax - 0x1f00065b]
0x0000000000495063 : inc dword ptr [rax - 0x5d] ; cli ; call qword ptr [rax - 0x1f00055c]
0x0000000000494427 : inc dword ptr [rax - 0x7f00061c] ; out 0xf9, al ; call qword ptr [rax]
0x00000000004944a7 : inc dword ptr [rax - 0x7f00061d] ; in eax, 0xf9 ; call qword ptr [rax]
0x000000000046a52d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045edc5 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000494563 : inc dword ptr [rax] ; adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x000000000045ed86 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000044819f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042d8b7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000494c73 : inc dword ptr [rax] ; cli ; call qword ptr [rax + 0x20fffa35]
0x0000000000494f8b : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x00000000004950ef : inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x0000000000494a5b : inc dword ptr [rax] ; cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x000000000049511b : inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x0000000000494077 : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; stc ; push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x000000000049421b : inc dword ptr [rax] ; mov bh, 0xf9 ; jmp rax
0x0000000000494237 : inc dword ptr [rax] ; mov ch, 0xf9 ; jmp rax
0x00000000004942bb : inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004942d3 : inc dword ptr [rax] ; mov dl, 0xf9 ; call rax
0x00000000004a3af7 : inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000004a3af3 : inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000004a3ae3 : inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; jmp rax
0x00000000004a3ae7 : inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; jmp rax
0x0000000000494013 : inc dword ptr [rax] ; stc ; push qword ptr [rax + 0x4e] ; stc ; jmp rax
0x000000000049586b : inc dword ptr [rax] ; sti ; jmp qword ptr [rcx]
0x0000000000455094 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000004a4f43 : inc dword ptr [rbp + 0x38fffd87] ; jle 0x4a4f50 ; jmp qword ptr [rax]
0x000000000047bccf : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000495897 : inc dword ptr [rbp + rdi - 5] ; jmp qword ptr [rcx]
0x000000000048264c : inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004027a0 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400927 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040d51b : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e349 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x00000000004597f0 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048c543 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045ed44 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x000000000044825d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004481cb : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047f259 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460112 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x0000000000480f92 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x00000000004ab3bf : inc dword ptr [rcx + rdx - 2] ; call qword ptr [rcx + rdx]
0x00000000004946e7 : inc dword ptr [rcx + rdx - 6] ; call rsp
0x000000000045254e : inc dword ptr [rcx - 0x77] ; ret
0x0000000000455836 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004597f3 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000469a9f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049461f : inc dword ptr [rdx + 0x12] ; cli ; call rdx
0x0000000000494b17 : inc dword ptr [rdx + 0x39] ; cli ; call rdx
0x00000000004957ef : inc dword ptr [rdx + 0x3e] ; sti ; call rdi
0x0000000000494d3f : inc dword ptr [rdx] ; sub edi, edx ; push qword ptr [rdx + 0x2a] ; cli ; jmp rdx
0x000000000043fadd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000494ab3 : inc dword ptr [rsi + 0x36] ; cli ; call rsi
0x00000000004945bb : inc dword ptr [rsi + 0xf] ; cli ; call rsi
0x000000000048e122 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x00000000004945ab : inc dword ptr [rsi] ; adc edx, edi ; call qword ptr [rsi + 0x26fffa10]
0x0000000000494aa3 : inc dword ptr [rsi] ; cmp dl, bh ; call qword ptr [rsi + 0x26fffa37]
0x0000000000493eab : inc eax ; clc ; call qword ptr [rax]
0x00000000004950e7 : inc eax ; cli ; jmp rax
0x00000000004950b3 : inc eax ; int1 ; cli ; call rax
0x0000000000495083 : inc eax ; lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000493f8b : inc eax ; or ecx, edi ; call qword ptr [rax]
0x000000000049450f : inc eax ; sar cl, 0xff ; nop ; ret
0x000000000042c20c : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000471f2c : inc ebx ; nop ; xor eax, eax ; ret
0x00000000004465b9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000494b37 : inc edx ; xor eax, 0x3552fffa ; cli ; jmp rdx
0x000000000042483b : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042afd4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004ab300 : insb byte ptr [rdi], dx ; add edi, esi ; call rsp
0x000000000048e97b : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x48e997
0x0000000000494fd9 : insb byte ptr [rdi], dx ; cli ; call rax
0x00000000004a99fe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004af964 : insb byte ptr [rdi], dx ; jns 0x4af963 ; call rsp
0x000000000045d4d5 : insb byte ptr [rdi], dx ; ret 0x4c40
0x000000000049407d : insb byte ptr [rdi], dx ; stc ; jmp rax
0x0000000000494079 : insb byte ptr [rdi], dx ; stc ; push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x00000000004b4fb4 : insb byte ptr [rdi], dx ; xor al, 0xfd ; jmp qword ptr [rdx]
0x0000000000424550 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453206 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000409f2f : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000042444b : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004853c7 : insd dword ptr [rdi], dx ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004900d2 : insd dword ptr [rdi], dx ; js 0x49014f ; ret 0x8b48
0x00000000004a99ff : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a7dad : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000494081 : insd dword ptr [rdi], dx ; stc ; call rax
0x00000000004a8cbf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000450d65 : int 0x19
0x000000000046817a : int 0x80
0x0000000000454de9 : int 0xfa
0x00000000004742d6 : int1 ; call rbx
0x0000000000490fc7 : int1 ; clc ; push rbx ; ret
0x00000000004950b5 : int1 ; cli ; call rax
0x00000000004950c1 : int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x00000000004950b1 : int1 ; cli ; inc eax ; int1 ; cli ; call rax
0x00000000004950b9 : int1 ; cli ; jmp rax
0x0000000000456412 : int1 ; je 0x4565c1 ; mov rdx, rax ; jmp 0x4563d9
0x0000000000456817 : int1 ; je 0x4565c1 ; mov rdx, rax ; jmp 0x4567de
0x000000000045688e : int1 ; je 0x4565c1 ; mov rdx, rax ; jmp 0x456855
0x0000000000446ccb : int1 ; jl 0x446d1c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446cec : int1 ; jl 0x446d3d ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446cff : int1 ; jl 0x446d50 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446dd4 : int1 ; jl 0x446e25 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446e2c : int1 ; jl 0x446e7d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446ec9 : int1 ; jl 0x446f1a ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000448155 : int1 ; jmp rcx
0x0000000000471c8b : int1 ; jne 0x471c86 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e757 : int1 ; jne 0x47e734 ; ret
0x0000000000448279 : int1 ; mov eax, eax ; ret
0x0000000000434afb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ff2f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000446093 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000448260 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a93d6 : int1 ; ret 0x5803
0x00000000004b14e9 : int1 ; std ; jmp qword ptr [rdi]
0x0000000000446097 : int1 ; sub eax, edx ; ret
0x0000000000400926 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x00000000004965c8 : iretd ; outsd dx, dword ptr [rsi] ; sti ; dec dword ptr [rax + rsi*2] ; sti ; jmp qword ptr [rax]
0x0000000000405dfd : ja 0x405dde ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413848 : ja 0x41387a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000438a03 : ja 0x438a07 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004441e7 : ja 0x4441ed ; ret
0x0000000000444203 : ja 0x44420d ; mov dword ptr [rdi], ecx ; ret
0x0000000000444244 : ja 0x444253 ; mov qword ptr [rdi], rcx ; ret
0x00000000004442c9 : ja 0x4442dd ; ret
0x000000000044431f : ja 0x444337 ; ret
0x00000000004443a1 : ja 0x4443bd ; ret
0x0000000000444807 : ja 0x444811 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444823 : ja 0x444831 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444874 : ja 0x444887 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444959 : ja 0x444971 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000004449cf : ja 0x4449eb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000444a51 : ja 0x444a71 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000446fd4 : ja 0x447005 ; jb 0x446fe6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447334 : ja 0x44737a ; jb 0x447346 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447784 : ja 0x4477e2 ; jb 0x447796 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447d53 : ja 0x447d70 ; jb 0x447d5f ; mov byte ptr [rdi], cl ; ret
0x0000000000447ec1 : ja 0x447ef8 ; jb 0x447ed0 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448089 : ja 0x4480ce ; jb 0x448098 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044965b : ja 0x449663 ; ret
0x00000000004496a9 : ja 0x4496b3 ; ret
0x00000000004498b4 : ja 0x449913 ; ret
0x000000000044994a : ja 0x449953 ; ret
0x0000000000449987 : ja 0x4499e3 ; ret
0x0000000000449a1d : ja 0x449a2b ; ret
0x0000000000449a4d : ja 0x449a5b ; ret
0x0000000000449c57 : ja 0x449c9b ; ret
0x0000000000449ccd : ja 0x449cdb ; ret
0x000000000044a426 : ja 0x44a433 ; ret
0x000000000044c810 : ja 0x44c83d ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d535 : ja 0x44d589 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045afb3 : ja 0x45afc3 ; ret
0x0000000000465ec2 : ja 0x465ea5 ; mov eax, r9d ; ret
0x0000000000474d99 : ja 0x474d67 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047561b : ja 0x475623 ; ret
0x000000000047566f : ja 0x47567b ; ret
0x0000000000475990 : ja 0x4759bb ; ret
0x0000000000482eee : ja 0x482f40 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048dcdd : ja 0x48dce6 ; sbb eax, eax ; ret
0x00000000004a4e61 : ja 0x4a4e62 ; jmp rax
0x00000000004a9444 : ja 0x4a93cb ; ret 0x48f
0x000000000041880d : jae 0x418835 ; movzx eax, byte ptr [rax] ; ret
0x000000000044904d : jae 0x449052 ; ret
0x000000000044911e : jae 0x449120 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004495cd : jae 0x4495d2 ; ret
0x000000000044a65d : jae 0x44a662 ; ret
0x000000000044a68d : jae 0x44a692 ; ret
0x000000000044a6bd : jae 0x44a6c2 ; ret
0x000000000044bd60 : jae 0x44bd65 ; ret
0x000000000044bd8d : jae 0x44bd92 ; ret
0x000000000044c094 : jae 0x44c083 ; ret
0x000000000045ad5e : jae 0x45ada5 ; xor eax, eax ; pop rbx ; ret
0x000000000047559d : jae 0x4755a2 ; ret
0x000000000047f9db : jae 0x47f985 ; xor eax, eax ; ret
0x0000000000488154 : jae 0x488137 ; mov eax, 1 ; ret
0x000000000048860d : jae 0x488612 ; ret
0x000000000048ec66 : jae 0x48ec79 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000049651d : jae 0x49651c ; jmp rsi
0x00000000004a7a02 : jae 0x4a79e4 ; jo 0x4a7a80 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a889e : jae 0x4a8879 ; push rsi ; pop rdx ; je 0x4a886e ; ret 0xacfc
0x00000000004ad17a : jae 0x4ad188 ; ret
0x000000000041dc97 : jb 0x41dc81 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042df3a : jb 0x42df4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e08a : jb 0x42e09a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e1da : jb 0x42e1ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e32a : jb 0x42e33a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e47a : jb 0x42e48a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e5ca : jb 0x42e5da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e71a : jb 0x42e72a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e86a : jb 0x42e87a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e9ba : jb 0x42e9ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eb0a : jb 0x42eb1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ec5a : jb 0x42ec6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042edaa : jb 0x42edba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eefa : jb 0x42ef0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f04a : jb 0x42f05a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f19a : jb 0x42f1aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043090a : jb 0x43091a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a5a : jb 0x430a6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430baa : jb 0x430bba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430cfa : jb 0x430d0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e4a : jb 0x430e5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f9a : jb 0x430faa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310ea : jb 0x4310fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043123a : jb 0x43124a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043138a : jb 0x43139a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004314da : jb 0x4314ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043162a : jb 0x43163a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043177a : jb 0x43178a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004318ca : jb 0x4318da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431a1a : jb 0x431a2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431b6a : jb 0x431b7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004385de : jb 0x4385ea ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446d35 : jb 0x446d44 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000446d40 : jb 0x446d53 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000446d4d : jb 0x446d55 ; mov byte ptr [rdi], cl ; ret
0x0000000000446f54 : jb 0x446f5d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000446fd6 : jb 0x446fe4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446fd5 : jb 0x446fe5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447336 : jb 0x447344 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447786 : jb 0x447794 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447d55 : jb 0x447d5d ; mov byte ptr [rdi], cl ; ret
0x0000000000447ec3 : jb 0x447ece ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044808b : jb 0x448096 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000045654e : jb 0x4565bc ; mov rdx, rax ; jmp 0x456513
0x0000000000494d44 : jb 0x494d73 ; cli ; jmp rdx
0x0000000000494fe5 : jb 0x494fe3 ; call rax
0x000000000049578c : jb 0x4957ce ; sti ; jmp qword ptr [rcx]
0x000000000049578c : jb 0x4957d2 ; sti ; jmp qword ptr [rcx]
0x0000000000496555 : jb 0x496554 ; call qword ptr [rdi]
0x00000000004b14a5 : jb 0x4b14a3 ; call qword ptr [rdx]
0x00000000004b1525 : jb 0x4b1523 ; jmp rax
0x000000000040f3a1 : jbe 0x40f361 ; mov r11d, 1 ; jmp 0x40f376
0x000000000041086f : jbe 0x4108c2 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042b446 : jbe 0x42b485 ; add rax, rdi ; ret
0x000000000042b456 : jbe 0x42b487 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b466 : jbe 0x42b487 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b476 : jbe 0x42b487 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042b887 : jbe 0x42b8f8 ; add rax, rdi ; vzeroupper ; ret
0x0000000000455f82 : jbe 0x455f7c ; ret
0x000000000045d059 : jbe 0x45d019 ; mov r11d, 1 ; jmp 0x45d02e
0x0000000000481aff : jbe 0x481b0b ; ret
0x0000000000494fed : jbe 0x494feb ; call rax
0x00000000004b2e4d : jbe 0x4b2e55 ; add byte ptr [rax], dh ; add al, 0xfc ; jmp rdx
0x00000000004b2e95 : jbe 0x4b2e9d ; add al, cl ; or bh, ah ; jmp qword ptr [rax]
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a89 : je 0x400aa0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000400acb : je 0x400ae0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x00000000004059ce : je 0x4059de ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004123bd : je 0x4123e8 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000412918 : je 0x41291f ; ret
0x0000000000416681 : je 0x4166b0 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x412919
0x0000000000416b05 : je 0x416b13 ; ret
0x0000000000418f8c : je 0x418f91 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000419023 : je 0x419028 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422902 : je 0x42292e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000422df3 : je 0x422e06 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x00000000004244b2 : je 0x42447d ; ret
0x000000000042a233 : je 0x42a1fd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042b11a : je 0x42b122 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042b34c : je 0x42b3a3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b62a : je 0x42b681 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042bff5 : je 0x42c007 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042d617 : je 0x42d621 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d053 : je 0x43d01d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043ebe3 : je 0x43ebad ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004403c1 : je 0x4403d9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004409e4 : je 0x4409ee ; bsf eax, edx ; ret
0x00000000004409e4 : je 0x4409ef ; bsf eax, edx ; ret
0x0000000000440a8d : je 0x440aa5 ; bsf rax, rdx ; ret
0x0000000000440a8d : je 0x440aa6 ; bsf rax, rdx ; ret
0x0000000000440a2c : je 0x440ab9 ; bsf rax, rdx ; ret
0x0000000000447063 : je 0x447084 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044870e : je 0x44871c ; xor eax, eax ; ret
0x0000000000448709 : je 0x448729 ; cmp eax, 2 ; je 0x448721 ; xor eax, eax ; ret
0x000000000044875d : je 0x448743 ; ret
0x0000000000449f87 : je 0x449fb2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044a4ea : je 0x44a4f1 ; ret
0x000000000044be69 : je 0x44be6e ; ret
0x000000000044becd : je 0x44bed2 ; ret
0x000000000044c71c : je 0x44c72f ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000044d448 : je 0x44d453 ; ret
0x000000000044d464 : je 0x44d479 ; mov dword ptr [rip + 0x26b64c], edx ; pop rbx ; ret
0x00000000004514e5 : je 0x451513 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000451c9f : je 0x451cce ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451f8f : je 0x451fbe ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x00000000004522d7 : je 0x452306 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452516 : je 0x452545 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452b7e : je 0x452bac ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453716 : je 0x453745 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004547a2 : je 0x4547d1 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045529b : je 0x4552ca ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000455643 : je 0x455672 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455a87 : je 0x455ab6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455ec2 : je 0x455ef0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000456484 : je 0x4564b3 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456413 : je 0x4565c0 ; mov rdx, rax ; jmp 0x4563d8
0x0000000000456818 : je 0x4565c0 ; mov rdx, rax ; jmp 0x4567dd
0x000000000045688f : je 0x4565c0 ; mov rdx, rax ; jmp 0x456854
0x00000000004567b3 : je 0x4567e2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456cc7 : je 0x456cf6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000457102 : je 0x457130 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000458777 : je 0x458783 ; ret
0x0000000000458772 : je 0x458788 ; cmp esi, 3 ; je 0x458788 ; ret
0x00000000004590ca : je 0x4590d0 ; call rsi
0x00000000004591c6 : je 0x4591cc ; call rax
0x000000000045a5cb : je 0x45a5d1 ; call rax
0x000000000045ab8e : je 0x45ab9b ; ret
0x0000000000462f51 : je 0x462d84 ; jmp 0x462f22
0x0000000000468d0c : je 0x468d37 ; and byte ptr [rax + 1], cl ; ret
0x000000000046c9a8 : je 0x46c95a ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000470b06 : je 0x470b56 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000470b05 : je 0x470b57 ; add esp, 0x20 ; pop rbx ; ret
0x000000000047195c : je 0x471963 ; ret
0x0000000000471979 : je 0x471986 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004719b3 : je 0x471a15 ; pop rbp ; pop r12 ; ret
0x0000000000471a3f : je 0x471aa1 ; pop rbp ; pop r12 ; ret
0x0000000000471bca : je 0x471bf4 ; or al, 0xeb ; ret 0x5590
0x000000000047384c : je 0x473875 ; bsf rax, rdx ; ret
0x000000000047384c : je 0x473876 ; bsf rax, rdx ; ret
0x00000000004737dc : je 0x473889 ; bsf rax, rdx ; ret
0x0000000000473ceb : je 0x473cf3 ; ret
0x00000000004742ce : je 0x4742fd ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x00000000004743f8 : je 0x474405 ; test edx, edx ; jne 0x4743f7 ; ret
0x0000000000474899 : je 0x4748b9 ; mov cl, dl ; and cl, 0xf ; je 0x4748c9 ; ret
0x00000000004748a0 : je 0x4748c2 ; ret
0x00000000004748b5 : je 0x4748d6 ; add rax, 2 ; ret
0x0000000000475d72 : je 0x475e71 ; xor eax, eax ; leave ; ret
0x000000000047e7b6 : je 0x47e7c3 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000480f8d : je 0x480edf ; sub eax, r8d ; ret
0x00000000004850c2 : je 0x4850d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004855c8 : je 0x4855f3 ; or byte ptr [rax + 1], cl ; ret
0x00000000004871bd : je 0x487202 ; shl rdx, 5 ; add rdx, rax ; jmp 0x4871d9
0x0000000000487d86 : je 0x487d93 ; ret
0x000000000048abcd : je 0x48abf8 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d168 : je 0x48d152 ; add rsp, 0x18 ; ret
0x000000000048d151 : je 0x48d176 ; add rsp, 0x18 ; ret
0x000000000048d1f8 : je 0x48d1d8 ; ret
0x000000000048d239 : je 0x48d246 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f52a : je 0x48f533 ; ret
0x000000000048f563 : je 0x48f574 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f579 ; ret
0x000000000048f63a : je 0x48f643 ; ret
0x0000000000490dd3 : je 0x490dde ; call rax
0x0000000000494fe9 : je 0x494fe7 ; call rax
0x00000000004a7b68 : je 0x4a7b33 ; xor al, 0xd8 ; ret
0x00000000004a7da7 : je 0x4a7da4 ; jmp 0x4a7d7e
0x00000000004a88a2 : je 0x4a886a ; ret 0xacfc
0x00000000004b4fb0 : je 0x4b4f50 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, 0xfd ; jmp qword ptr [rdx]
0x0000000000416b02 : jg 0x416b42 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000042fb19 : jg 0x42fb6c ; ret
0x000000000042fb9f : jg 0x42fbea ; ret
0x000000000042fd19 : jg 0x42fd6c ; ret 0x894c
0x000000000042fd9f : jg 0x42fdea ; ret 0x894c
0x00000000004324e9 : jg 0x43253c ; ret
0x000000000043256f : jg 0x4325ba ; ret
0x00000000004326e9 : jg 0x43273c ; ret 0x894c
0x000000000043276f : jg 0x4327ba ; ret 0x894c
0x0000000000434ad8 : jg 0x434b29 ; loope 0x434ad7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b4f : jg 0x434b9a ; ret 0xff2
0x0000000000434b68 : jg 0x434bb9 ; loop 0x434b67 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bdf : jg 0x434c2a ; ret
0x0000000000434bf8 : jg 0x434c49 ; jrcxz 0x434bf7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c88 : jg 0x434cd9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d08 : jg 0x434d59 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d88 : jg 0x434dd9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e08 : jg 0x434e59 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e88 : jg 0x434ed9 ; call 0x4fc25e8a
0x0000000000434f08 : jg 0x434f59 ; jmp 0x4fc25f0a
0x0000000000435088 : jg 0x4350d9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435108 : jg 0x435159 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435198 : jg 0x4351e9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435218 : jg 0x435269 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043528c : jg 0x435297 ; ret
0x00000000004352e6 : jg 0x4352f9 ; ret
0x00000000004352e1 : jg 0x435331 ; psllq mm1, qword ptr [rdi] ; jg 0x4352fe ; ret
0x0000000000435356 : jg 0x435369 ; ret
0x00000000004353c6 : jg 0x4353d9 ; ret
0x00000000004353c1 : jg 0x435411 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435436 : jg 0x435449 ; ret
0x0000000000435431 : jg 0x435481 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004354a6 : jg 0x4354b9 ; ret
0x00000000004354a1 : jg 0x4354f1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435516 : jg 0x435529 ; ret
0x0000000000435511 : jg 0x435561 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435586 : jg 0x435599 ; ret
0x0000000000435581 : jg 0x4355d1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355f6 : jg 0x435609 ; ret
0x00000000004355f1 : jg 0x435641 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435666 : jg 0x435679 ; ret
0x00000000004356d6 : jg 0x4356e9 ; ret
0x0000000000435746 : jg 0x435759 ; ret
0x0000000000435741 : jg 0x435791 ; add eax, 0xf7f0ff3 ; ret
0x00000000004357b6 : jg 0x4357c9 ; ret
0x00000000004357b1 : jg 0x435801 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435826 : jg 0x435839 ; ret
0x0000000000435821 : jg 0x435871 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435896 : jg 0x4358a9 ; ret
0x0000000000435891 : jg 0x4358e1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435906 : jg 0x435919 ; ret
0x0000000000435901 : jg 0x435951 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004375f8 : jg 0x437649 ; loope 0x4375f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043766f : jg 0x4376ba ; ret 0xff2
0x0000000000437688 : jg 0x4376d9 ; loop 0x437687 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004376ff : jg 0x43774a ; ret
0x0000000000437718 : jg 0x437769 ; jrcxz 0x437717 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377a8 : jg 0x4377f9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437828 : jg 0x437879 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004378a8 : jg 0x4378f9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437928 : jg 0x437979 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004379a8 : jg 0x4379f9 ; call 0x4fc289aa
0x0000000000437a28 : jg 0x437a79 ; jmp 0x4fc28a2a
0x0000000000437ba8 : jg 0x437bf9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437c28 : jg 0x437c79 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437cb8 : jg 0x437d09 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437d38 : jg 0x437d89 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437dac : jg 0x437db7 ; ret
0x0000000000437e06 : jg 0x437e19 ; ret
0x0000000000437e01 : jg 0x437e51 ; psllq mm1, qword ptr [rdi] ; jg 0x437e1e ; ret
0x0000000000437e76 : jg 0x437e89 ; ret
0x0000000000437ee6 : jg 0x437ef9 ; ret
0x0000000000437ee1 : jg 0x437f31 ; or eax, 0xf7f0ff3 ; ret
0x0000000000437f56 : jg 0x437f69 ; ret
0x0000000000437f51 : jg 0x437fa1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437fc6 : jg 0x437fd9 ; ret
0x0000000000437fc1 : jg 0x438011 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438036 : jg 0x438049 ; ret
0x0000000000438031 : jg 0x438081 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004380a6 : jg 0x4380b9 ; ret
0x00000000004380a1 : jg 0x4380f1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438116 : jg 0x438129 ; ret
0x0000000000438111 : jg 0x438161 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438186 : jg 0x438199 ; ret
0x00000000004381f6 : jg 0x438209 ; ret
0x0000000000438266 : jg 0x438279 ; ret
0x0000000000438261 : jg 0x4382b1 ; add eax, 0xf7f0ff3 ; ret
0x00000000004382d6 : jg 0x4382e9 ; ret
0x00000000004382d1 : jg 0x438321 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438346 : jg 0x438359 ; ret
0x0000000000438341 : jg 0x438391 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004383b6 : jg 0x4383c9 ; ret
0x00000000004383b1 : jg 0x438401 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438426 : jg 0x438439 ; ret
0x0000000000438421 : jg 0x438471 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438584 : jg 0x438595 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438598 : jg 0x4385a9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000438a0a : jg 0x438a06 ; ret
0x00000000004442b6 : jg 0x4442c1 ; ret
0x00000000004442c6 : jg 0x4442d4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004442da : jg 0x4442e9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004442f9 : jg 0x444307 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444309 : jg 0x444317 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444319 : jg 0x44432a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044433a : jg 0x444349 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044435a : jg 0x444369 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044437a : jg 0x444389 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044439a : jg 0x4443ac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004443dd : jg 0x4443ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004443fd : jg 0x44440f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044441b : jg 0x44442b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044443b : jg 0x44444b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044445b : jg 0x44446b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044447b : jg 0x44448b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444946 : jg 0x444955 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444956 : jg 0x444968 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000444989 : jg 0x44499b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000004449a9 : jg 0x4449bb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000444acf : jg 0x444b2f ; or eax, 0x1c478d48 ; ret
0x0000000000446d17 : jg 0x446d27 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000446d0d : jg 0x446d2d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004471a4 : jg 0x4471dc ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447272 : jg 0x4472aa ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044734a : jg 0x44735b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004474db : jg 0x447505 ; vzeroupper ; ret
0x0000000000447582 : jg 0x44758c ; vzeroupper ; ret
0x000000000044760e : jg 0x447638 ; vzeroupper ; ret
0x000000000044769e : jg 0x4476a8 ; vzeroupper ; ret
0x00000000004477b2 : jg 0x4477c3 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447996 : jg 0x4479c0 ; vzeroupper ; ret
0x0000000000447995 : jg 0x4479c1 ; vzeroupper ; ret
0x0000000000447a5c : jg 0x447a66 ; vzeroupper ; ret
0x0000000000447a5b : jg 0x447a67 ; vzeroupper ; ret
0x0000000000447b2f : jg 0x447b59 ; vzeroupper ; ret
0x0000000000447b2e : jg 0x447b5a ; vzeroupper ; ret
0x0000000000447c02 : jg 0x447c0c ; vzeroupper ; ret
0x0000000000447c01 : jg 0x447c0d ; vzeroupper ; ret
0x0000000000447c6c : jg 0x447c77 ; ret
0x0000000000447cbc : jg 0x447cc7 ; ret
0x0000000000447dc4 : jg 0x447dd2 ; vzeroupper ; ret
0x0000000000447e14 : jg 0x447e22 ; vzeroupper ; ret
0x0000000000447ed3 : jg 0x447ee1 ; vzeroupper ; ret
0x0000000000447f51 : jg 0x447f5f ; vzeroupper ; ret
0x0000000000447f50 : jg 0x447f60 ; vzeroupper ; ret
0x0000000000447fb1 : jg 0x447fbf ; vzeroupper ; ret
0x0000000000447fb0 : jg 0x447fc0 ; vzeroupper ; ret
0x000000000044809b : jg 0x4480a9 ; vzeroupper ; ret
0x00000000004480a9 : jg 0x4480b7 ; vzeroupper ; ret
0x0000000000448100 : jg 0x44813d ; ret 0x2b77
0x000000000044821b : jg 0x4481e8 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448277 : jg 0x448275 ; int1 ; mov eax, eax ; ret
0x0000000000454098 : jg 0x454025 ; ret 0xdb76
0x0000000000454098 : jg 0x454029 ; ret 0xdb76
0x000000000045f092 : jg 0x45f0ab ; test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000469682 : jg 0x46969b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046aafa : jg 0x46ab13 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046abf7 : jg 0x46ac10 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000046f42d : jg 0x46f446 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f405
0x000000000047f447 : jg 0x47f459 ; test rdi, rdi ; jne 0x47f428 ; ret
0x000000000048aa18 : jg 0x48aa22 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000040df6a : jge 0x40df73 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a7b5 : jge 0x44a7ba ; call r12
0x000000000044a7dd : jge 0x44a7e2 ; call r12
0x000000000044accd : jge 0x44ac7d ; mov r12d, r14d ; call r15
0x000000000044b32d : jge 0x44b332 ; call r12
0x000000000044b359 : jge 0x44b35e ; call r12
0x000000000044b38d : jge 0x44b392 ; call r12
0x000000000044b3bd : jge 0x44b3c2 ; call r12
0x000000000044b3e5 : jge 0x44b3ea ; call r12
0x000000000044b415 : jge 0x44b41a ; call r12
0x000000000048d5b2 : jge 0x48d5af ; leave ; ret
0x000000000048d730 : jge 0x48d733 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d87c : jge 0x48d879 ; leave ; ret
0x000000000048d8c8 : jge 0x48d8cb ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048da57 : jge 0x48da5a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dbb7 : jge 0x48dbb4 ; leave ; ret
0x000000000048dc08 : jge 0x48dc0b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000040119f : jl 0x4011cd ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000404aa6 : jl 0x404ad1 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d498 : jl 0x40d4c3 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000416fd2 : jl 0x416fee ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041ea1b : jl 0x41ea15 ; ret 0x7508
0x0000000000438504 : jl 0x438553 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438540 : jl 0x43858f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043873e : jl 0x43878d ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004388a5 : jl 0x4388f4 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000438a07 : jl 0x438a56 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000446ccc : jl 0x446d1b ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446ced : jl 0x446d3c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d00 : jl 0x446d4f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446dd5 : jl 0x446e24 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446e2d : jl 0x446e7c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446eca : jl 0x446f19 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000447880 : jl 0x44789f ; cld ; vzeroupper ; ret
0x000000000044a892 : jl 0x44a8c0 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450dd1 : jl 0x450dff ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004511f6 : jl 0x451224 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000453138 : jl 0x453166 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045371b : jl 0x453745 ; call r15
0x000000000045416a : jl 0x454198 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000455a8c : jl 0x455ab6 ; call r15
0x0000000000455ec7 : jl 0x455ef0 ; call rbx
0x0000000000455f7d : jl 0x455faa ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004566ad : jl 0x4566d7 ; or al, 0xe9 ; ret
0x0000000000456ccc : jl 0x456cf6 ; call r15
0x0000000000457107 : jl 0x457130 ; call rbx
0x00000000004571bd : jl 0x4571ea ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045b1a7 : jl 0x45b1d2 ; and byte ptr [rax + 1], cl ; ret
0x000000000045b61e : jl 0x45b649 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045b966 : jl 0x45b991 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000046734b : jl 0x467378 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000468a35 : jl 0x468a60 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047b645 : jl 0x47b670 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000482655 : jl 0x482683 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000049460c : jl 0x49461e ; cli ; jmp qword ptr [rdx]
0x00000000004b0dc4 : jl 0x4b0dcb ; cli ; jmp qword ptr [rdx]
0x00000000004b40b8 : jl 0x4b4049 ; add byte ptr [rax], al ; and al, 0xca ; cld ; call rdx
0x0000000000440a2e : jle 0x440a37 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000440a2e : jle 0x440a38 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000446ba1 : jle 0x446bdd ; movsxd rax, ecx ; ret
0x00000000004587c2 : jle 0x4587d5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004a4f49 : jle 0x4a4f4a ; jmp qword ptr [rax]
0x0000000000400ba8 : jmp 0x400baf
0x0000000000400ba7 : jmp 0x400bb0
0x0000000000402eed : jmp 0x402f15
0x00000000004049a3 : jmp 0x40441a
0x000000000040f3a9 : jmp 0x40f36e
0x0000000000414762 : jmp 0x414728
0x0000000000420ca6 : jmp 0x420577
0x0000000000440204 : jmp 0x4401ca
0x0000000000440358 : jmp 0x44031d
0x000000000044041c : jmp 0x4403e2
0x0000000000440568 : jmp 0x44052d
0x000000000044688e : jmp 0x446854
0x000000000044695f : jmp 0x446925
0x00000000004469ce : jmp 0x446994
0x0000000000449463 : jmp 0x4492f1
0x00000000004497e1 : jmp 0x44973e
0x0000000000449b71 : jmp 0x449ad1
0x0000000000449c15 : jmp 0x449bda
0x0000000000449cbb : jmp 0x449c80
0x000000000044dd73 : jmp 0x44d588
0x000000000044f728 : jmp 0x44f752
0x000000000045c9f5 : jmp 0x45ca1d
0x000000000045d061 : jmp 0x45d026
0x000000000045d0fe : jmp 0x45d0c2
0x000000000045fbae : jmp 0x45de04
0x000000000045f443 : jmp 0x45f448
0x0000000000462f57 : jmp 0x462f1c
0x000000000046a878 : jmp 0x46a83e
0x000000000046f1a4 : jmp 0x46f169
0x000000000046f1a3 : jmp 0x46f16a
0x000000000046fe9b : jmp 0x46fe60
0x0000000000472553 : jmp 0x472519
0x00000000004757b1 : jmp 0x475703
0x000000000047a252 : jmp 0x47a217
0x0000000000484462 : jmp 0x4844b4
0x0000000000485bda : jmp 0x485ba0
0x0000000000488262 : jmp 0x4882b4
0x000000000048e97e : jmp 0x48e994
0x00000000004923eb : jmp 0x492303
0x00000000004a706a : jmp 0x4a70a9
0x00000000004a7da9 : jmp 0x4a7d7c
0x00000000004a8da0 : jmp 0x4a8d34
0x00000000004a8d9f : jmp 0x4a8d35
0x0000000000434f0a : jmp 0x4fc25f08
0x0000000000434f09 : jmp 0x4fc25f09
0x0000000000437a2a : jmp 0x4fc28a28
0x0000000000437a29 : jmp 0x4fc28a29
0x0000000000482ef1 : jmp 0xffffffffc357b846
0x000000000047ba39 : jmp 0xffffffffeb097cc9
0x0000000000475533 : jmp 0xfffffffff67917c3
0x000000000049402b : jmp qword ptr [rax + 0x10fff955]
0x00000000004949bf : jmp qword ptr [rax + 0x10fffa04]
0x0000000000494ec7 : jmp qword ptr [rax + 0x10fffa29]
0x0000000000494cc3 : jmp qword ptr [rax + 0x10fffa2a]
0x00000000004949b7 : jmp qword ptr [rax + 0x20fffa05]
0x00000000004949af : jmp qword ptr [rax + 0x20fffa06]
0x00000000004949a7 : jmp qword ptr [rax + 0x20fffa07]
0x000000000049499f : jmp qword ptr [rax + 0x20fffa08]
0x0000000000494793 : jmp qword ptr [rax + 0x20fffa0a]
0x0000000000493f83 : jmp qword ptr [rax - 0x1f0006e6]
0x0000000000493f73 : jmp qword ptr [rax - 0x1f0006eb]
0x0000000000493f63 : jmp qword ptr [rax - 0x1f0006f0]
0x0000000000493f53 : jmp qword ptr [rax - 0x1f0006f5]
0x000000000040e371 : jmp qword ptr [rax]
0x00000000004940cf : jmp qword ptr [rbp + 0x51fff98d]
0x00000000004a4e43 : jmp qword ptr [rbx - 0x2f00027a]
0x0000000000495253 : jmp qword ptr [rbx]
0x00000000004940e3 : jmp qword ptr [rcx + 0x21fff991]
0x00000000004940eb : jmp qword ptr [rcx + 0x21fff992]
0x00000000004940d7 : jmp qword ptr [rcx]
0x0000000000495713 : jmp qword ptr [rdi + 0x68fffb3e]
0x00000000004a9664 : jmp qword ptr [rdi]
0x0000000000469755 : jmp qword ptr [rdx + rax*8]
0x000000000049460f : jmp qword ptr [rdx]
0x00000000004483b9 : jmp qword ptr [rsi + 0xf]
0x000000000044c8c8 : jmp qword ptr [rsi]
0x0000000000424909 : jmp r10
0x0000000000480100 : jmp r11
0x000000000042d90d : jmp r9
0x0000000000493f77 : jmp rax
0x0000000000480101 : jmp rbx
0x0000000000422472 : jmp rcx
0x000000000040d5ae : jmp rdi
0x000000000040d2c5 : jmp rdx
0x0000000000459ec7 : jmp rsi
0x000000000049277f : jmp rsp
0x000000000040058d : jne 0x400594 ; ret
0x0000000000402eeb : jne 0x402efd ; jmp 0x402f17
0x0000000000405e1c : jne 0x405e30 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040db48 : jne 0x40db26 ; ret
0x000000000040dc3b : jne 0x40dc65 ; add rsp, 0x118 ; ret
0x000000000040f7c1 : jne 0x40f7d4 ; add rsp, 0xd8 ; ret
0x000000000040f872 : jne 0x40f885 ; add rsp, 0xd8 ; ret
0x0000000000414835 : jne 0x414843 ; ret
0x0000000000416458 : jne 0x4164ac ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004164d1 : jne 0x4164c3 ; ret
0x00000000004173ee : jne 0x4173e3 ; ret
0x0000000000417a21 : jne 0x4179e7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417a6c : jne 0x417a65 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000418386 : jne 0x41837b ; ret
0x0000000000419fe0 : jne 0x419fef ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041f6bc : jne 0x41f683 ; ret
0x0000000000422b6a : jne 0x422af1 ; ret
0x0000000000422e77 : jne 0x422e66 ; sub rax, 0x10 ; ret
0x0000000000425f5c : jne 0x425f46 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042b3f7 : jne 0x42b454 ; xor eax, eax ; ret
0x000000000042b3c7 : jne 0x42b478 ; xor eax, eax ; ret
0x000000000042b873 : jne 0x42b897 ; xor eax, eax ; vzeroupper ; ret
0x000000000042bfaa : jne 0x42bfb5 ; vzeroupper ; ret
0x000000000042c0a4 : jne 0x42bfb6 ; ret
0x000000000042c1ef : jne 0x42bfb9 ; vzeroupper ; ret
0x000000000042d85d : jne 0x42d887 ; xor eax, eax ; ret
0x000000000042ce51 : jne 0x42d88b ; xor eax, eax ; ret
0x000000000042ce79 : jne 0x42d897 ; xor eax, eax ; ret
0x0000000000444c35 : jne 0x444bc6 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444c07 : jne 0x444bc6 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444c06 : jne 0x444bc7 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000446394 : jne 0x4465a8 ; xor eax, eax ; ret
0x0000000000446599 : jne 0x4465b9 ; xor eax, eax ; ret
0x0000000000446441 : jne 0x4465bd ; xor eax, eax ; ret
0x00000000004465b1 : jne 0x4465be ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004466c1 : jne 0x4466b2 ; ret
0x0000000000446771 : jne 0x446762 ; ret
0x00000000004468e1 : jne 0x4468d6 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000446a31 : jne 0x446a26 ; sub rax, 1 ; ret
0x0000000000447d3d : jne 0x447d26 ; ret
0x0000000000447ea4 : jne 0x447e8c ; vzeroupper ; ret
0x0000000000448067 : jne 0x448047 ; vzeroupper ; ret
0x000000000044883f : jne 0x44886b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449627 : jne 0x44963f ; add rsp, 0x28 ; ret
0x0000000000449857 : jne 0x4498a1 ; add rsp, 0x58 ; ret
0x0000000000449c11 : jne 0x449bde ; neg eax ; jmp 0x449bde
0x0000000000449be7 : jne 0x449c39 ; add rsp, 0x68 ; ret
0x000000000044a556 : jne 0x44a56d ; add rsp, 0x28 ; ret
0x000000000044a78b : jne 0x44a7a6 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044a7b1 : jne 0x44a7f7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a7d9 : jne 0x44a817 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b2f6 : jne 0x44b31e ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b329 : jne 0x44b377 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b355 : jne 0x44b3d7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3e1 : jne 0x44b448 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b411 : jne 0x44b479 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044be12 : jne 0x44be09 ; pop rdx ; pop r10 ; ret
0x000000000044f10f : jne 0x44f0a3 ; call rsi
0x000000000044f726 : jne 0x44f73a ; jmp 0x44f754
0x000000000045accf : jne 0x45acdc ; add rsp, 0x18 ; ret
0x000000000045af17 : jne 0x45af6c ; add rsp, 0x148 ; ret
0x000000000045c9f3 : jne 0x45ca05 ; jmp 0x45ca1f
0x0000000000468932 : jne 0x468945 ; add rsp, 0xd8 ; ret
0x0000000000470a41 : jne 0x470a33 ; ret
0x0000000000471c8c : jne 0x471c85 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000473743 : jne 0x47374e ; xor rax, rax ; ret
0x0000000000473b43 : jne 0x473b78 ; mov rax, r8 ; vzeroupper ; ret
0x00000000004743fc : jne 0x4743f3 ; ret
0x0000000000474403 : jne 0x47440e ; xor rax, rax ; ret
0x000000000047469b : jne 0x474656 ; mov rax, rdx ; ret
0x000000000047581c : jne 0x475869 ; add rsp, 0x58 ; ret
0x000000000047589f : jne 0x4758b2 ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000047594e : jne 0x475971 ; add rsp, 0x38 ; ret
0x0000000000478bbf : jne 0x478c3f ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000047e76a : jne 0x47e710 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e758 : jne 0x47e733 ; ret
0x000000000047f3f7 : jne 0x47f411 ; mov rax, qword ptr [rip + 0x23cfb0] ; ret
0x000000000047f44c : jne 0x47f423 ; ret
0x0000000000480f09 : jne 0x480ee1 ; movsx eax, cl ; neg eax ; ret
0x0000000000481cfa : jne 0x481d09 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481df5 : jne 0x481e29 ; add rsp, 0x38 ; ret
0x0000000000481eb5 : jne 0x481ee4 ; add rsp, 0x68 ; ret
0x0000000000482016 : jne 0x482054 ; add rsp, 0x78 ; ret
0x00000000004822e5 : jne 0x482314 ; add rsp, 0x68 ; ret
0x0000000000484321 : jne 0x484361 ; leave ; ret
0x00000000004847c1 : jne 0x4847ad ; mov rax, rsi ; ret
0x0000000000484845 : jne 0x484825 ; mov rax, rsi ; ret
0x0000000000484fad : jne 0x484fba ; add rsp, 0x38 ; ret
0x0000000000485090 : jne 0x4850aa ; add rsp, 0x38 ; ret
0x00000000004877a6 : jne 0x4877d0 ; ret
0x00000000004877a5 : jne 0x4877d1 ; ret
0x000000000048785b : jne 0x487862 ; pop rbx ; ret
0x00000000004883eb : jne 0x488402 ; add rsp, 0x38 ; ret
0x00000000004884f9 : jne 0x488513 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004885e0 : jne 0x4885fb ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048afc9 : jne 0x48afec ; xor eax, eax ; ret
0x000000000048afb1 : jne 0x48aff1 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d1e0 : jne 0x48d201 ; mov rax, qword ptr [rax] ; ret
0x000000000048d24f : jne 0x48d25a ; mov qword ptr [rax], rdx ; ret
0x000000000048d5ae : jne 0x48d5a7 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d878 : jne 0x48d871 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dbb3 : jne 0x48dbac ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e104 : jne 0x48e123 ; ret
0x000000000048e124 : jne 0x48e13c ; mov eax, 8 ; ret
0x000000000048e14f : jne 0x48e17e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e169 : jne 0x48e182 ; xor eax, eax ; ret
0x000000000048efaf : jne 0x48efde ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048efc9 : jne 0x48efe2 ; xor eax, eax ; ret
0x000000000048f569 : jne 0x48f573 ; ret
0x000000000048f584 : jne 0x48f593 ; ret
0x000000000048f7b4 : jne 0x48f7c3 ; ret
0x000000000048fa39 : jne 0x48fa5c ; xor eax, eax ; ret
0x0000000000490005 : jne 0x48fff8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490050 : jne 0x490030 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490195 : jne 0x49017b ; pop rbx ; ret
0x00000000004902a3 : jne 0x49028e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490e5d : jne 0x490e46 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490fe1 : jne 0x490ff8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a4ea1 : jne 0x4a4ea2 ; call rax
0x000000000042d10e : jno 0x42d11d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000438500 : jno 0x438509 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043873a : jno 0x438743 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004388a1 : jno 0x4388b2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000438a06 : jno 0x438a8a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000482de4 : jno 0x482e36 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000496549 : jno 0x49654c ; ljmp ptr [rax + 0x70] ; sti ; call qword ptr [rdx]
0x0000000000496551 : jno 0x496554 ; lcall ptr [rsi + 0x72] ; sti ; call qword ptr [rdi]
0x0000000000424811 : jnp 0x424844 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000424811 : jnp 0x424845 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004923e9 : jnp 0x49240c ; jmp 0x492305
0x00000000004a7885 : jnp 0x4a7842 ; ret
0x00000000004244af : jns 0x4244b7 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000438507 : jns 0x43850a ; ret
0x0000000000438741 : jns 0x438744 ; ret
0x00000000004388a8 : jns 0x4388b3 ; ret
0x000000000044b356 : jns 0x44b3a6 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000478aea : jns 0x478ae9 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048ae9e : jns 0x48aeab ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d14e : jns 0x48d191 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048debe : jns 0x48decb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048fabe : jns 0x48facb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a698e : jns 0x4a6924 ; ret 0xf869
0x00000000004a698d : jns 0x4a6925 ; ret 0xf869
0x00000000004a8d9e : jns 0x4a8df5 ; jmp 0x4a8d36
0x00000000004af965 : jns 0x4af962 ; call rsp
0x0000000000414654 : jo 0x4146a5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414684 : jo 0x4146d5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044a2fd : jo 0x44a301 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c0a2 : jo 0x44c0c6 ; ret
0x0000000000453010 : jo 0x45301a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000470aba : jo 0x470ad2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000473db6 : jo 0x473e18 ; pop rbp ; pop r12 ; ret
0x0000000000473fcd : jo 0x47402f ; pop rbp ; pop r12 ; ret
0x00000000004821d4 : jo 0x48223a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000494018 : jo 0x49406b ; stc ; jmp rax
0x0000000000494ed0 : jo 0x494ee4 ; cli ; call qword ptr [rax + 0x10fffa0c]
0x0000000000495004 : jo 0x494f8c ; cli ; call qword ptr [rax]
0x0000000000495024 : jo 0x494fb9 ; cli ; call qword ptr [rax]
0x0000000000494fe1 : jo 0x494fdf ; call rax
0x0000000000495080 : jo 0x495035 ; cli ; inc eax ; lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000496519 : jo 0x49651c ; lcall ptr [rsi] ; jae 0x496520 ; jmp rsi
0x000000000049654d : jo 0x49654c ; call qword ptr [rdx]
0x00000000004965cd : jo 0x4965cc ; jmp qword ptr [rax]
0x00000000004a7a04 : jo 0x4a7a7e ; mov ebp, 0xfb67d10d ; ret
0x00000000004aeab4 : jo 0x4aeabb ; ret 0xa01
0x00000000004af7ac : jo 0x4af7f4 ; add byte ptr [rax], al ; mov al, 0x46 ; stc ; jmp qword ptr [rbx]
0x00000000004b32ac : jo 0x4b332f ; add byte ptr [rax], al ; loopne 0x4b32db ; cld ; jmp qword ptr [rcx]
0x00000000004571c2 : jp 0x4571bc ; ret
0x00000000004689f4 : jp 0x4689f4 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000494ff5 : jp 0x494ff3 ; call rax
0x00000000004b32ad : jp 0x4b32b5 ; add al, ah ; and bh, ah ; jmp qword ptr [rcx]
0x0000000000434bfa : jrcxz 0x434bf5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bf9 : jrcxz 0x434bf6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043771a : jrcxz 0x437715 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437719 : jrcxz 0x437716 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044be63 : jrcxz 0x44be28 ; cmp r11d, 0xa ; je 0x44be74 ; ret
0x000000000046827f : jrcxz 0x468285 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000046827e : jrcxz 0x468286 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004902a4 : jrcxz 0x490306 ; pop rbp ; pop r12 ; ret
0x00000000004943a5 : jrcxz 0x4943a2 ; jmp qword ptr [rax]
0x00000000004944c9 : jrcxz 0x4944ca ; push qword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x00000000004a67e5 : jrcxz 0x4a683f ; ret
0x000000000040ea05 : js 0x40ea29 ; call rdx
0x0000000000471959 : js 0x471991 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000478bc0 : js 0x478bbf ; dec dword ptr [rax - 0x77] ; ret
0x000000000047bcd2 : js 0x47bce5 ; pop rbx ; ret
0x000000000048d406 : js 0x48d413 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048d413 : js 0x48d41f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004900d3 : js 0x49014e ; ret 0x8b48
0x0000000000494ff1 : js 0x494fef ; call rax
0x00000000004abd28 : js 0x4abcc0 ; cmc ; call qword ptr [rdx]
0x00000000004afab4 : js 0x4afaff ; add byte ptr [rax], al ; test al, 0x84 ; stc ; call qword ptr [rbx]
0x00000000004b4638 : js 0x4b4626 ; cld ; jmp qword ptr [rcx]
0x000000000046b283 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004557eb : lahf ; add dword ptr [rax], eax ; add al, ch ; pop rsp ; ret
0x0000000000456415 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041f0af : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000044911d : lahf ; jae 0x449121 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a8ec3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e76b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000043f83d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045eb2f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000044aa6b : lahf ; ret
0x0000000000418d2f : lahf ; ret 0x3949
0x0000000000418de2 : lahf ; ret 0x48e9
0x000000000044a921 : lahf ; ret 0x8545
0x00000000004a671d : lahf ; ret 0x871e
0x00000000004480f9 : lahf ; ret 0xea81
0x000000000048c7c1 : lahf ; ret 0xf45
0x000000000046fb4d : lahf ; ret 0xfffd
0x000000000043fecd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041abd2 : lcall ptr [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000419430 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411f95 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411d1b : lcall ptr [rbx + 0x5d] ; ret
0x000000000047fd96 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000041064e : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000494a4f : lcall ptr [rsi + 0x33] ; cli ; jmp rax
0x0000000000496553 : lcall ptr [rsi + 0x72] ; sti ; call qword ptr [rdi]
0x000000000049651b : lcall ptr [rsi] ; jae 0x49651e ; jmp rsi
0x00000000004956a3 : lcall ptr [rsi] ; sti ; call qword ptr [rsi]
0x0000000000435286 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000417a7b : lea eax, dword ptr [r8 - 1] ; ret
0x000000000048aebc : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b424 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000042b434 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000042b404 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000417a7c : lea eax, dword ptr [rax - 1] ; ret
0x00000000004b4635 : lea eax, dword ptr [rax] ; add byte ptr [rax - 0x17], bh ; cld ; jmp qword ptr [rcx]
0x000000000047346d : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000004468e4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000044495c : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000444971 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000044498f : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000004449af : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000004449d2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000004449f1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000444a11 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000444a31 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000444a54 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000444a79 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000444a97 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000444ab7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000444ad3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000444af3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000444b13 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000444b33 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000004448ad : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000004448cd : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000004448ef : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000044490f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000044492f : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000444949 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000004447f7 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000044480a : lea eax, dword ptr [rdi + 2] ; ret
0x0000000000444815 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000444828 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000044483d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000044485b : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000444867 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000044487a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000044488f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000042b459 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000042b469 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000042b363 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00000000004736b5 : lea eax, dword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000004403c7 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000446c3a : lea eax, dword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473369 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000004447e3 : lea eax, dword ptr [rdi] ; ret
0x0000000000443dcd : lea eax, dword ptr [rdx + 0xa] ; ret
0x0000000000443ded : lea eax, dword ptr [rdx + 0xb] ; ret
0x0000000000443e0f : lea eax, dword ptr [rdx + 0xc] ; ret
0x0000000000443e2f : lea eax, dword ptr [rdx + 0xd] ; ret
0x0000000000443e4f : lea eax, dword ptr [rdx + 0xe] ; ret
0x0000000000443cdf : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000443d07 : lea eax, dword ptr [rdx + 1] ; ret
0x0000000000443d1d : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000443d35 : lea eax, dword ptr [rdx + 3] ; ret
0x0000000000443d4b : lea eax, dword ptr [rdx + 4] ; ret
0x0000000000443d5d : lea eax, dword ptr [rdx + 5] ; ret
0x0000000000443d7b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000443c87 : lea eax, dword ptr [rdx + 7] ; ret
0x0000000000443d8d : lea eax, dword ptr [rdx + 8] ; ret
0x0000000000443dad : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000417a6e : lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000448213 : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000422df6 : lea eax, dword ptr [rdx - 0x10] ; ret
0x0000000000443cf5 : lea eax, dword ptr [rdx] ; ret
0x0000000000424868 : lea eax, dword ptr [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000423908 : lea eax, dword ptr [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x000000000042441f : lea eax, dword ptr [rip + 0x221ab] ; cmove rax, rdx ; ret
0x00000000004247a8 : lea eax, dword ptr [rip + 0x22732] ; cmovne rax, rdx ; ret
0x0000000000424668 : lea eax, dword ptr [rip + 0x22862] ; cmovne rax, rdx ; ret
0x0000000000424508 : lea eax, dword ptr [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x000000000042480f : lea eax, dword ptr [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x00000000004246cf : lea eax, dword ptr [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x000000000042456f : lea eax, dword ptr [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x00000000004247ee : lea eax, dword ptr [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x00000000004246ae : lea eax, dword ptr [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x000000000042454e : lea eax, dword ptr [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x000000000042388f : lea eax, dword ptr [rip + 0x231db] ; cmovne rax, rdx ; ret
0x00000000004245da : lea eax, dword ptr [rip + 0x23660] ; cmovne rax, rdx ; ret
0x00000000004245bd : lea eax, dword ptr [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x000000000042460e : lea eax, dword ptr [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000044d431 : lea eax, dword ptr [rip + 0x26cec9] ; ret
0x000000000048514f : lea eax, dword ptr [rip + 0x5b] ; cmovne rax, rdx ; ret
0x0000000000424838 : lea eax, dword ptr [rip + 0x6c52] ; cmove rax, rdx ; ret
0x0000000000424448 : lea eax, dword ptr [rip + 0x6d12] ; cmove rax, rdx ; ret
0x00000000004244ac : lea eax, dword ptr [rip + 0x79ee] ; je 0x424483 ; ret
0x0000000000472888 : lea eax, dword ptr [rip + 0x9f2] ; cmove rax, rdx ; ret
0x0000000000473c98 : lea eax, dword ptr [rip + 0xa22] ; cmove rax, rdx ; ret
0x0000000000472858 : lea eax, dword ptr [rip + 0xee2] ; cmove rax, rdx ; ret
0x000000000045f7b1 : lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e091 : lea ebx, dword ptr [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a6fd1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473e6b : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000474006 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000004722a4 : lea ecx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042d970 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000044407e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000468e74 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000422e06 : lea ecx, dword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000484460 : lea ecx, dword ptr [rdx] ; jmp 0x4844b6
0x0000000000488260 : lea ecx, dword ptr [rdx] ; jmp 0x4882b6
0x0000000000475a97 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004720b0 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000471fcb : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473f8e : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000047417c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473e66 : lea ecx, dword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000044c71f : lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000418391 : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000471e27 : lea edx, dword ptr [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042da44 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000424906 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000042de38 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000424523 : lea edx, dword ptr [rip + 0x11407] ; cmovne rax, rdx ; ret
0x000000000042386f : lea edx, dword ptr [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x00000000004246ff : lea edx, dword ptr [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000424494 : lea edx, dword ptr [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000423808 : lea edx, dword ptr [rip + 0x21332] ; cmovne rax, rdx ; ret
0x000000000042383f : lea edx, dword ptr [rip + 0x272b] ; cmovne rax, rdx ; ret
0x00000000004743ca : lea edx, dword ptr [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000423949 : lea edx, dword ptr [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x00000000004247c3 : lea edx, dword ptr [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000424683 : lea edx, dword ptr [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048dd31 : lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046b7fd : lea esi, dword ptr [rip + 0x24b61d] ; jmp rax
0x0000000000446f5f : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e286 : lea esp, dword ptr [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x0000000000424905 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000048dd30 : lea r14, qword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000042d96f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000004722a3 : lea r9, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000048445f : lea r9, qword ptr [rdx] ; jmp 0x4844b7
0x000000000048825f : lea r9, qword ptr [rdx] ; jmp 0x4882b7
0x00000000004720af : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000471fca : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473f8d : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000047417b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473e65 : lea r9, qword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000048aebb : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b423 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000042b433 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000042b403 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000047346c : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004468e3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000044495b : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000444970 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000044498e : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000004449ae : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000004449d1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000004449f0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000444a10 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000444a30 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000444a53 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000444a78 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000444a96 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000444ab6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000444ad2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000444af2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000444b12 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000444b32 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000004448ac : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004448cc : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000004448ee : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000044490e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000044492e : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000444948 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004447f6 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444809 : lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444814 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444827 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000044483c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000044485a : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444866 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444879 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000044488e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000042b458 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b468 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b362 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004736b4 : lea rax, qword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000004403c6 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000446c39 : lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473368 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000004447e2 : lea rax, qword ptr [rdi] ; ret
0x0000000000443dcc : lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000443dec : lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000443e0e : lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000443e2e : lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000443e4e : lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000443cde : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000443d06 : lea rax, qword ptr [rdx + 1] ; ret
0x0000000000443d1c : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000443d34 : lea rax, qword ptr [rdx + 3] ; ret
0x0000000000443d4a : lea rax, qword ptr [rdx + 4] ; ret
0x0000000000443d5c : lea rax, qword ptr [rdx + 5] ; ret
0x0000000000443d7a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000443c86 : lea rax, qword ptr [rdx + 7] ; ret
0x0000000000443d8c : lea rax, qword ptr [rdx + 8] ; ret
0x0000000000443dac : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000422df5 : lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000443cf4 : lea rax, qword ptr [rdx] ; ret
0x000000000044d430 : lea rax, qword ptr [rip + 0x26cec9] ; ret
0x000000000040e090 : lea rbx, qword ptr [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044407d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000473e6a : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000474005 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000422e05 : lea rcx, qword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000475a96 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044c71e : lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000042da43 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042de37 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000046b7fc : lea rsi, qword ptr [rip + 0x24b61d] ; jmp rax
0x0000000000446f5e : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000045795a : leave ; call r15
0x00000000004466c0 : leave ; jne 0x4466b3 ; ret
0x0000000000446770 : leave ; jne 0x446763 ; ret
0x0000000000446a30 : leave ; jne 0x446a27 ; sub rax, 1 ; ret
0x000000000047469a : leave ; jne 0x474657 ; mov rax, rdx ; ret
0x0000000000446c38 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048ae70 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046bd19 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400bac : leave ; ret
0x0000000000473f8a : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000495717 : ljmp ptr [rax + 0x3d] ; sti ; jmp qword ptr [rcx]
0x000000000049654b : ljmp ptr [rax + 0x70] ; sti ; call qword ptr [rdx]
0x000000000041031d : ljmp ptr [rax - 0x76b7ffd6] ; ret 0x8948
0x00000000004ab2ff : ljmp ptr [rbx + rax - 2] ; call rsp
0x000000000049569f : ljmp ptr [rbx] ; sti ; lcall ptr [rsi] ; sti ; call qword ptr [rsi]
0x00000000004957eb : ljmp ptr [rdi + 0x3e] ; sti ; inc dword ptr [rdx + 0x3e] ; sti ; call rdi
0x0000000000494c4b : ljmp ptr [rdx + 0x33] ; cli ; call qword ptr [rax]
0x00000000004948cf : ljmp ptr [rsi + 0x54fffa02] ; or bh, dl ; call rsp
0x0000000000494097 : ljmp ptr [rsi - 0x4f000671] ; nop ; stc ; jmp rcx
0x000000000042c65e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f257 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410180 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446040 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004ab2e8 : lodsb al, byte ptr [rsi] ; add esi, edi ; call rsp
0x0000000000495081 : lodsb al, byte ptr [rsi] ; cli ; inc eax ; lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000042a494 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a965d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000494389 : lodsb al, byte ptr [rsi] ; stc ; jmp rax
0x0000000000495085 : lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000046106f : lodsd eax, dword ptr [rsi] ; pop rdx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000482f52 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000421a9e : loop 0x421af1 ; mov esi, ebx ; mov rdi, r13 ; call 0x41dce9
0x0000000000425f5d : loop 0x425f95 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434b6a : loop 0x434b65 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b69 : loop 0x434b66 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043768a : loop 0x437685 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437689 : loop 0x437686 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004481df : loop 0x4481f9 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044c0b3 : loop 0x44c106 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000468e79 : loop 0x468ec0 ; call qword ptr [rdx + rax*8]
0x000000000047285a : loop 0x472871 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047285a : loop 0x472872 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004871c1 : loop 0x4871cc ; add rdx, rax ; jmp 0x4871d5
0x000000000048d169 : loop 0x48d1b8 ; add esp, 0x18 ; ret
0x00000000004943e5 : loop 0x4943e2 ; jmp rax
0x00000000004a99fa : loop 0x4a9a4f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000434ada : loope 0x434ad5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ad9 : loope 0x434ad6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004375fa : loope 0x4375f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004375f9 : loope 0x4375f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000444d6b : loope 0x444d75 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044875e : loope 0x448755 ; ret
0x000000000044e10e : loope 0x44e11b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000047489e : loope 0x4748b3 ; je 0x4748c4 ; ret
0x000000000047ca6b : loope 0x47ca71 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482de7 : loope 0x482e39 ; mov dword ptr [rdi], ecx ; ret
0x0000000000482e18 : loope 0x482e6b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482e8d : loope 0x482ee0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000490196 : loope 0x4901f5 ; ret
0x0000000000490e5e : loope 0x490ec0 ; pop rbp ; pop r12 ; ret
0x00000000004943a1 : loope 0x49439e ; jmp qword ptr [rax]
0x000000000040f957 : loopne 0x40f9bd ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041c9ec : loopne 0x41ca00 ; xchg eax, esp ; ret 0x3de9
0x000000000042236f : loopne 0x4223d5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042de91 : loopne 0x42dea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042de90 : loopne 0x42dea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dfe1 : loopne 0x42dff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dfe0 : loopne 0x42dff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e131 : loopne 0x42e148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e130 : loopne 0x42e149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e281 : loopne 0x42e298 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e280 : loopne 0x42e299 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e3d1 : loopne 0x42e3e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e3d0 : loopne 0x42e3e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e521 : loopne 0x42e538 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e520 : loopne 0x42e539 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e671 : loopne 0x42e688 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e670 : loopne 0x42e689 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e7bf : loopne 0x42e7d6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e7be : loopne 0x42e7d7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e911 : loopne 0x42e928 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e910 : loopne 0x42e929 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ea61 : loopne 0x42ea78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ea60 : loopne 0x42ea79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ebb1 : loopne 0x42ebc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ebb0 : loopne 0x42ebc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ed01 : loopne 0x42ed18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ed00 : loopne 0x42ed19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ee51 : loopne 0x42ee68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ee50 : loopne 0x42ee69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042efa1 : loopne 0x42efb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042efa0 : loopne 0x42efb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f0f1 : loopne 0x42f108 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f0f0 : loopne 0x42f109 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430861 : loopne 0x430878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430860 : loopne 0x430879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004309b1 : loopne 0x4309c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004309b0 : loopne 0x4309c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b01 : loopne 0x430b18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b00 : loopne 0x430b19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430c51 : loopne 0x430c68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430c50 : loopne 0x430c69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430da1 : loopne 0x430db8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430da0 : loopne 0x430db9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ef1 : loopne 0x430f08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ef0 : loopne 0x430f09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431041 : loopne 0x431058 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431040 : loopne 0x431059 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043118f : loopne 0x4311a6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043118e : loopne 0x4311a7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312e1 : loopne 0x4312f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312e0 : loopne 0x4312f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431431 : loopne 0x431448 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431430 : loopne 0x431449 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431581 : loopne 0x431598 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431580 : loopne 0x431599 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004316d1 : loopne 0x4316e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004316d0 : loopne 0x4316e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431821 : loopne 0x431838 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431820 : loopne 0x431839 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431971 : loopne 0x431988 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431970 : loopne 0x431989 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431ac1 : loopne 0x431ad8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431ac0 : loopne 0x431ad9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044814d : loopne 0x448167 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044bec8 : loopne 0x44bedd ; cmp eax, 4 ; je 0x44bed7 ; ret
0x000000000044e112 : loopne 0x44e175 ; pop r12 ; ret
0x000000000045d4dc : loopne 0x45d513 ; cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000046369f : loopne 0x46362c ; ret
0x000000000046d80a : loopne 0x46d810 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046ed39 : loopne 0x46ed9d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f515 : loopne 0x46f579 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004827bd : loopne 0x4827c6 ; sub eax, 1 ; ret
0x0000000000493f58 : loopne 0x493f69 ; stc ; jmp qword ptr [rax]
0x0000000000493f68 : loopne 0x493f7e ; stc ; jmp qword ptr [rax]
0x0000000000493f78 : loopne 0x493f93 ; stc ; jmp qword ptr [rax]
0x0000000000493f88 : loopne 0x493fac ; stc ; inc eax ; or ecx, edi ; call qword ptr [rax]
0x0000000000494080 : loopne 0x4940f2 ; stc ; call rax
0x0000000000494220 : loopne 0x4941dd ; stc ; call rax
0x0000000000494220 : loopne 0x4941e1 ; stc ; call rax
0x00000000004943e4 : loopne 0x4943cb ; stc ; jmp rax
0x00000000004943e8 : loopne 0x4943d1 ; stc ; jmp rax
0x00000000004943e1 : loopne 0x4943de ; jmp rax
0x00000000004944d0 : loopne 0x494493 ; stc ; jmp qword ptr [rax]
0x0000000000494790 : loopne 0x49479b ; cli ; jmp qword ptr [rax + 0x20fffa0a]
0x00000000004950ec : loopne 0x4950e7 ; cli ; inc dword ptr [rax] ; cli ; jmp qword ptr [rax]
0x000000000049510c : loopne 0x495104 ; cli ; call rax
0x00000000004a6fd4 : loopne 0x4a6fb4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004af61c : loopne 0x4af662 ; add byte ptr [rax], al ; nop ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004b101c : loopne 0x4b107c ; add byte ptr [rax], al ; and byte ptr [rdi], bl ; cli ; call qword ptr [rdi]
0x00000000004b1b1c : loopne 0x4b1b87 ; add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b32b0 : loopne 0x4b32d7 ; cld ; jmp qword ptr [rcx]
0x00000000004946e4 : mov ah, 0x11 ; cli ; inc dword ptr [rcx + rdx - 6] ; call rsp
0x00000000004a69ea : mov ah, 0x13 ; ret
0x00000000004920da : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049183a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000494bdc : mov ah, 0x38 ; cli ; inc dword ptr [rax + rdi - 6] ; call rsp
0x0000000000495fcc : mov ah, 0x68 ; sti ; jmp qword ptr [rax]
0x00000000004a6e90 : mov ah, 0xa5 ; ret
0x00000000004add89 : mov ah, 0xf6 ; call qword ptr [rsi]
0x0000000000494299 : mov ah, 0xf9 ; inc dword ptr [rax - 0x4a] ; stc ; jmp qword ptr [rax]
0x00000000004942b9 : mov ah, 0xf9 ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004a67e4 : mov ah, bl ; push rsi ; ret
0x000000000048afb6 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000457954 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000494570 : mov al, 0x10 ; cli ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x0000000000493fa4 : mov al, 0x26 ; stc ; call rax
0x0000000000494e88 : mov al, 0x29 ; cli ; jmp qword ptr [rax]
0x0000000000493fc4 : mov al, 0x2f ; stc ; call rax
0x0000000000494c80 : mov al, 0x34 ; cli ; inc dword ptr [rax + 0x34] ; cli ; call rax
0x00000000004b5050 : mov al, 0x35 ; std ; jmp qword ptr [rcx]
0x0000000000494a68 : mov al, 0x37 ; cli ; inc dword ptr [rax + 0x37] ; cli ; call rax
0x00000000004af7b0 : mov al, 0x46 ; stc ; jmp qword ptr [rbx]
0x000000000049409c : mov al, 0x90 ; stc ; jmp rcx
0x000000000044078f : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000047f3fc : mov al, 0xcf ; and eax, dword ptr [rax] ; ret
0x0000000000494788 : mov al, 0xd ; cli ; inc dword ptr [rax + 0xd] ; cli ; jmp rax
0x000000000047bccc : mov al, 0xe9 ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004a8c96 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004950b0 : mov al, 0xf1 ; cli ; inc eax ; int1 ; cli ; call rax
0x00000000004b19e0 : mov al, 0xf4 ; std ; call rdx
0x000000000049513c : mov al, 0xf7 ; cli ; call rax
0x0000000000495160 : mov al, 0xf8 ; cli ; call rax
0x0000000000495180 : mov al, 0xf9 ; cli ; call rax
0x00000000004942b1 : mov al, 0xf9 ; inc dword ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x00000000004942d1 : mov al, 0xf9 ; inc dword ptr [rax] ; mov dl, 0xf9 ; call rax
0x0000000000494980 : mov al, 4 ; cli ; jmp qword ptr [rax]
0x0000000000494998 : mov al, 9 ; cli ; jmp qword ptr [rax]
0x00000000004636ab : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000442566 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000442584 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443cf0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000442540 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000442550 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004358a1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000457b2f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000444c08 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004a7cc4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004133d9 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000424685 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004af649 : mov bh, 0xf8 ; call qword ptr [rax]
0x00000000004941dd : mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494301 : mov bh, 0xf9 ; jmp qword ptr [rax]
0x000000000049421d : mov bh, 0xf9 ; jmp rax
0x00000000004a3e95 : mov bh, 0xfc ; jmp qword ptr [rax]
0x000000000048f737 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487ddc : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a93d3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004464fe : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047469c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045a3c2 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a8da3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000415b73 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004adce9 : mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004941f5 : mov bl, 0xf9 ; inc dword ptr [rax - 0x4b] ; stc ; jmp qword ptr [rax]
0x0000000000494235 : mov bl, 0xf9 ; inc dword ptr [rax] ; mov ch, 0xf9 ; jmp rax
0x0000000000494215 : mov bl, 0xf9 ; jmp qword ptr [rax]
0x00000000004941f8 : mov bpl, 0xf9 ; jmp qword ptr [rax]
0x000000000044e3ca : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x000000000044c08a : mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044e3cb : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000044bc2f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400df4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b40b9 : mov byte ptr [rax], al ; add byte ptr [rdx + rcx*8], ah ; cld ; call rdx
0x0000000000402ee8 : mov byte ptr [rbx], ch ; add byte ptr [rbp + 0xa], dh ; jmp 0x402f1a
0x000000000046ec27 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000459ec3 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048ae74 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000405dff : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b01c4 : mov byte ptr [rcx], cl ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000045ea43 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000444958 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000004442c8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004449ce : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000044431e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444a50 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000004443a0 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444806 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000004441e6 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000444822 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444202 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000444243 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a3f00 : mov byte ptr [rdi - 0x48770004], dh ; cld ; jmp qword ptr [rax]
0x00000000004a3e94 : mov byte ptr [rdi - 0x49df0004], dh ; cld ; jmp qword ptr [rax]
0x000000000042f4bb : mov byte ptr [rdi - 1], dl ; ret
0x00000000004129c0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000004385e2 : mov byte ptr [rdi], cl ; ret
0x0000000000447ec5 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004447e0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000004441c0 : mov byte ptr [rdi], dh ; ret
0x0000000000435913 : mov byte ptr [rdi], dl ; ret
0x0000000000443d19 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000442569 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443d47 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000442587 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443cf2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000442542 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048b9e0 : mov byte ptr [rip + 0x2307c9], 8 ; ret
0x0000000000400b06 : mov byte ptr [rip + 0x2ba7d3], 1 ; pop rbp ; ret
0x0000000000466df4 : mov byte ptr [rip + 0xf410004], ch ; xchg eax, esp ; ret
0x00000000004abdc4 : mov byte ptr [rip - 0x66580000], al ; cmc ; call rax
0x000000000041dc99 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004847bf : mov byte ptr [rsi], al ; jne 0x4847af ; mov rax, rsi ; ret
0x0000000000484843 : mov byte ptr [rsi], al ; jne 0x484827 ; mov rax, rsi ; ret
0x00000000004a67e2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a7b23 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000040f3a2 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x40f375
0x000000000045d05a : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x45d02d
0x00000000004a8ebf : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a986a : mov ch, 0xab ; ret
0x0000000000471437 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000494219 : mov ch, 0xf9 ; inc dword ptr [rax] ; mov bh, 0xf9 ; jmp rax
0x00000000004941f9 : mov ch, 0xf9 ; jmp qword ptr [rax]
0x0000000000494239 : mov ch, 0xf9 ; jmp rax
0x00000000004941d9 : mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x00000000004a3e85 : mov ch, 0xfc ; jmp qword ptr [rax]
0x000000000042d1d6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000490e11 : mov cl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044f72b : mov cl, 0x35 ; call rcx
0x000000000040e928 : mov cl, 0x35 ; ret 0x2ade
0x00000000004689f3 : mov cl, 0x7a ; stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000494211 : mov cl, 0xf9 ; inc dword ptr [rax - 0x4d] ; stc ; jmp qword ptr [rax]
0x0000000000494231 : mov cl, 0xf9 ; jmp qword ptr [rax]
0x0000000000494251 : mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x000000000045aac7 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043adc5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000424904 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a8c92 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042c024 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x00000000004385e0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047489b : mov cl, dl ; and cl, 0xf ; je 0x4748c7 ; ret
0x00000000004a8f4c : mov cs, edi ; ret 0x8b36
0x0000000000468132 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043f34e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000004441e0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004848ea : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048e09f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416782 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412c6f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418810 : mov dh, 0 ; ret
0x0000000000435911 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042bb74 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040db44 : mov dh, 0x17 ; test dl, dl ; jne 0x40db2a ; ret
0x0000000000494ab0 : mov dh, 0x36 ; cli ; inc dword ptr [rsi + 0x36] ; cli ; call rsi
0x000000000046ec3c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040da69 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004568f2 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000046955b : mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000004460d1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004460c1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446091 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004460b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000004460a1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045e139 : mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000004a7c82 : mov dh, 0x4e ; ret 0x474c
0x00000000004460d5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000004460c5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000446095 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x00000000004460a5 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000004633c8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x0000000000405f9a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040ef04 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478d2f : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x00000000004758a2 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048c0e6 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046e9b8 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000048843d : mov dh, 0xc0 ; neg eax ; ret
0x0000000000484d0a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e8a1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000004481b1 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000415582 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8ec4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048ae6f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042bb9a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c61f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000446fd9 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000425cb1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c034 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000004945b8 : mov dh, 0xf ; cli ; inc dword ptr [rsi + 0xf] ; cli ; call rsi
0x000000000049429d : mov dh, 0xf9 ; jmp qword ptr [rax]
0x00000000004942bd : mov dh, 0xf9 ; jmp rax
0x000000000040d5a5 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000004a3f11 : mov dh, 0xfc ; dec eax ; mov dh, 0xfc ; jmp qword ptr [rax]
0x00000000004a3e99 : mov dh, 0xfc ; jmp qword ptr [rax]
0x0000000000416791 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412c81 : mov dh, 2 ; ret
0x000000000042c031 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bb71 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425cb4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000044875c : mov dh, byte ptr [rcx - 0xd] ; ret
0x000000000049461c : mov dl, 0x12 ; cli ; inc dword ptr [rdx + 0x12] ; cli ; call rdx
0x0000000000494b14 : mov dl, 0x39 ; cli ; inc dword ptr [rdx + 0x39] ; cli ; call rdx
0x00000000004877a1 : mov dl, 0x50 ; and eax, dword ptr [rax] ; jne 0x4877d5 ; ret
0x000000000040eaad : mov dl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004137c2 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000413148 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x00000000004adc11 : mov dl, 0xf6 ; call qword ptr [rsi]
0x0000000000494255 : mov dl, 0xf9 ; call rax
0x00000000004942b5 : mov dl, 0xf9 ; jmp qword ptr [rax]
0x000000000042f540 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000046252d : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004385d6 : mov dword ptr [r9 - 2], ecx ; ret
0x00000000004385c1 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044c021 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470a79 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470ab9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471ab8 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c087 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c0a1 : mov dword ptr [rax + 0x20], esi ; ret
0x0000000000470a7d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000471b3a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000450adf : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000450ae2 : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004174a5 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044c025 : mov dword ptr [rax + 8], edx ; ret
0x0000000000465fdd : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f292 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041dcca : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000484ecd : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484e1d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041a7d2 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484ec1 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d252 : mov dword ptr [rax], edx ; ret
0x0000000000471e2b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c741 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x000000000046974f : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x000000000047d0e1 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x00000000004587b2 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412a97 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481d3e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412e7f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047fa2e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485bd3 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485ba7
0x0000000000481c73 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488465 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000488539 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045ad5d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000416b3d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416621 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000471cea : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004182bd : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414652 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470b04 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004719b1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004587c7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000485693 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000416acc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a499 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000416b40 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412995 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471abb : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000410141 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400dae : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000450e35 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x00000000004385d7 : mov dword ptr [rcx - 2], ecx ; ret
0x00000000004385c2 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000004385b1 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000449cb4 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x449c87
0x000000000044905a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000419204 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000044496d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000004449ab : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000444a2d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000044431b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044439d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004442dd : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004443e0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444400 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004443c1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000444a93 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000004443e3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000416503 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000444a75 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000444ab3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000004443c5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000419201 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b6e5 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b6b7 : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000416533 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d291 : mov dword ptr [rdi + 0x98], esi ; ret
0x00000000004449ed : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000044433d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000044498b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000444a0d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000004442fb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435755 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435598 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435838 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004356e5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435528 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444857 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000435675 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004354b8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444227 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000444839 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000435448 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444219 : mov dword ptr [rdi + 4], edx ; ret
0x00000000004448eb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004353d8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044428b : mov dword ptr [rdi + 5], edx ; ret
0x000000000044490b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435368 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044429b : mov dword ptr [rdi + 6], edx ; ret
0x00000000004448a9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044492b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004352f8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444269 : mov dword ptr [rdi + 7], edx ; ret
0x000000000048470e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000416507 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000482f24 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000004448c9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044488b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000004843c4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000044425b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000447d6b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000447005 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000447d63 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000447ee5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000446ff5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000447d5b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000446fe7 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d23c : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042f205 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f243 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482e8f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042f58c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434da8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f76c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d28 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f95c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ca8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fb2d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c19 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fd2d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b89 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ff2d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f90d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042f725 : mov dword ptr [rdi - 2], edx ; ret
0x000000000042f909 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fce9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f3bf : mov dword ptr [rdi - 4], edx ; ret
0x000000000042fce6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fee6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004300e6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f209 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042f247 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042f3bc : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f4b8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f404 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e28 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000482e14 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482f1e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046875a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000444825 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444877 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444804 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000004441e4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000444855 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444225 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004448a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000444267 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000004448c7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444277 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000446d37 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000444288 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444298 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000004442a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444216 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444258 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000446d43 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004352fc : mov dword ptr [rdi], ecx ; ret
0x0000000000447edf : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004447f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444812 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444864 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435604 : mov dword ptr [rdi], edx ; ret
0x00000000004385bf : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484596 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004385ae : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000004385d3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000446fec : mov dword ptr [rdi], esi ; ret
0x0000000000412b15 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000443d77 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000004425a7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000443d59 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442599 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000443e0b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000443d89 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00000000004425b9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443e2b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000443da9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00000000004425c9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000443dc9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000443e4b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004425d9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000443de9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000443cdb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000044252b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000418430 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x0000000000443d04 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000443d32 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000443c84 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000044966a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484598 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004846f5 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044991a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004424d4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484ead : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000418398 : mov dword ptr [rdx], eax ; ret
0x000000000049018f : mov dword ptr [rip + 0x22bb5b], ebx ; jne 0x490181 ; pop rbx ; ret
0x00000000004849f8 : mov dword ptr [rip + 0x23766a], eax ; ret
0x000000000047f305 : mov dword ptr [rip + 0x23d0a5], eax ; ret
0x000000000045ab88 : mov dword ptr [rip + 0x25ff2a], edx ; je 0x45aba1 ; ret
0x000000000044d466 : mov dword ptr [rip + 0x26b64c], edx ; pop rbx ; ret
0x000000000041f846 : mov dword ptr [rip + 0x29a014], eax ; ret
0x000000000041976c : mov dword ptr [rip + 0x2a00ee], eax ; ret
0x0000000000419267 : mov dword ptr [rip + 0x2a0583], eax ; ret
0x000000000041927e : mov dword ptr [rip + 0x2a0588], eax ; ret
0x000000000041923f : mov dword ptr [rip + 0x2a05a3], eax ; ret
0x000000000041921f : mov dword ptr [rip + 0x2a05bb], eax ; ret
0x0000000000419115 : mov dword ptr [rip + 0x2a072d], eax ; ret
0x0000000000419105 : mov dword ptr [rip + 0x2a0735], eax ; ret
0x00000000004190f3 : mov dword ptr [rip + 0x2a0737], edx ; ret
0x00000000004190b5 : mov dword ptr [rip + 0x2a073d], eax ; ret
0x00000000004190a5 : mov dword ptr [rip + 0x2a0755], eax ; ret
0x0000000000419294 : mov dword ptr [rip + 0x2a2afa], eax ; ret
0x0000000000446d46 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000446d39 : mov dword ptr [rsi - 4], ecx ; ret
0x00000000004788d1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d27e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f472 : mov dword ptr [rsi], eax ; ret
0x000000000047e7b9 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045d0fa : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x45d0c6
0x000000000041ca0a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041cac7 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000004511cc : mov dword ptr [rsp + 0x50], eax ; call 0x44d4a6
0x000000000041ca0f : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000041129e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041d024 : mov dword ptr [rsp + 8], edx ; call 0x4192c6
0x000000000041d023 : mov dword ptr [rsp + 8], r10d ; call 0x4192c7
0x0000000000489c43 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413372 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000416685 : mov dword ptr [rsp], edi ; call 0x412915
0x0000000000465fdc : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f291 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000004759ac : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000449cb3 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x449c88
0x0000000000449059 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000449669 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000446ff4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f720 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004441d0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400c27 : mov eax, 0 ; leave ; ret
0x000000000044822b : mov eax, 0x10 ; pop rbx ; ret
0x0000000000423520 : mov eax, 0x16 ; ret
0x0000000000448239 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000485370 : mov eax, 0x27 ; syscall ; ret
0x0000000000448232 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000448247 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a6ddb : mov eax, 0x45155e93 ; ret 0x591c
0x00000000004afdf4 : mov eax, 0x48000045 ; xchg eax, edx ; stc ; jmp qword ptr [rcx]
0x0000000000457b88 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000448240 : mov eax, 0x60 ; pop rbx ; ret
0x00000000004755c0 : mov eax, 0x66 ; syscall ; ret
0x00000000004755e0 : mov eax, 0x68 ; syscall ; ret
0x00000000004755d0 : mov eax, 0x6b ; syscall ; ret
0x00000000004755f0 : mov eax, 0x6c ; syscall ; ret
0x000000000044821d : mov eax, 0x80 ; pop rbx ; ret
0x0000000000489a4f : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000486c64 : mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000494221 : mov eax, 0xbad0fff9 ; stc ; call rax
0x0000000000474e60 : mov eax, 0xc9 ; syscall ; ret
0x000000000044be32 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000045834c : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000449cb6 : mov eax, 0xffffffff ; jmp 0x449c85
0x0000000000411f91 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411d17 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000412e93 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000411cdb : mov eax, 0xffffffff ; ret
0x0000000000475e21 : mov eax, 1 ; leave ; ret
0x0000000000484575 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000417202 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048689d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047fd80 : mov eax, 1 ; pop rbx ; ret
0x00000000004686bf : mov eax, 1 ; ret
0x00000000004746b3 : mov eax, 2 ; ret
0x0000000000474911 : mov eax, 3 ; ret
0x000000000048e0ff : mov eax, 4 ; jne 0x48e128 ; ret
0x0000000000474921 : mov eax, 4 ; ret
0x0000000000474931 : mov eax, 5 ; ret
0x0000000000474941 : mov eax, 6 ; ret
0x0000000000474951 : mov eax, 7 ; ret
0x0000000000448224 : mov eax, 8 ; pop rbx ; ret
0x000000000044e8f0 : mov eax, 8 ; ret
0x0000000000411831 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000471f44 : mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004173e8 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x4173e9 ; ret
0x0000000000481b31 : mov eax, dword ptr [rax + 8] ; ret
0x00000000004591c0 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x4591d2 ; call rax
0x000000000046bd5a : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045abcf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046092d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048aeb9 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048aea1 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047fd99 : mov eax, dword ptr [rax] ; ret
0x000000000047c680 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c4a1 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041666d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484ec9 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416d59 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004511c9 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44d4a9
0x00000000004425a4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004425b6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004425c6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004425d6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004425e6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043d1ba : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043ea92 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443d30 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000442570 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000443c81 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004424d1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000443d01 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000442551 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047cc86 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471d9e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x00000000004183a0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004183c8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000490dcd : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x490de4 ; call rax
0x0000000000471f41 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004186f1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d211 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d261 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d2a1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d301 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d2f1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d2b1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000460e6f : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487d81 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487d98 ; ret
0x0000000000418395 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000419291 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a2afa], eax ; ret
0x000000000048f565 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f577 ; ret
0x000000000048f580 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f597 ; ret
0x000000000048f7b0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f7c7 ; ret
0x000000000047e76c : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000448757 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448749 ; ret
0x000000000043adc6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000418381 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x418380 ; ret
0x0000000000485570 : mov eax, dword ptr [rip + 0x23734a] ; ret
0x000000000047f46b : mov eax, dword ptr [rip + 0x23cf37] ; mov qword ptr [rsi], rax ; ret
0x000000000047f3fa : mov eax, dword ptr [rip + 0x23cfb0] ; ret
0x0000000000457a31 : mov eax, dword ptr [rip + 0x264441] ; ret
0x000000000044f531 : mov eax, dword ptr [rip + 0x26d3f1] ; ret
0x00000000004186d1 : mov eax, dword ptr [rip + 0x2a0a49] ; ret
0x000000000048e152 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048afe1 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048afb4 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048afd1 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e171 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046bd1f : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000460eb9 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461519 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x0000000000470faf : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d2d6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a896 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000004011a3 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000045313c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000449c8a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449c0d : mov eax, dword ptr [rsp + 0xc] ; jne 0x449be2 ; neg eax ; jmp 0x449be2
0x000000000040df6d : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000486d0f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048aa4a : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047fd98 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041a940 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042271f : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000448262 : mov eax, eax ; ret
0x0000000000474cd4 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000473b11 : mov eax, eax ; vzeroupper ; ret
0x00000000004101eb : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044b274 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410303 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fdbe : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411c82 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000484503 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004884f7 : mov eax, ebx ; jne 0x488515 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004885de : mov eax, ebx ; jne 0x4885fd ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004104e8 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414725 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a4b0 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000412a9b : mov eax, ebx ; pop rbx ; ret
0x00000000004843c7 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000465ec5 : mov eax, ecx ; ret
0x0000000000412993 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041abd5 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x00000000004129c4 : mov eax, edi ; ret
0x000000000041a7d5 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000410650 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465f8e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004106f9 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410091 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000448266 : mov eax, edx ; pop rbx ; ret
0x000000000041a7e1 : mov eax, edx ; ret
0x0000000000482777 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000413c6a : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046fc04 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041dc9d : mov eax, esi ; pop rbx ; ret
0x000000000041dcd1 : mov eax, esi ; ret
0x000000000046ed38 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465ec4 : mov eax, r9d ; ret
0x000000000049430d : mov ebp, 0x96d0fff9 ; stc ; call qword ptr [rax]
0x000000000049f1c4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a629d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000004732d8 : mov ebp, 0xf80148c0 ; ret
0x000000000047355c : mov ebp, 0xf80148c6 ; ret
0x00000000004a7a06 : mov ebp, 0xfb67d10d ; ret
0x000000000046920e : mov ebp, 0xfffff730 ; call rax
0x000000000045dcdc : mov ebp, 0xfffff758 ; call rax
0x000000000046c209 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x00000000004650e5 : mov ebp, 0xffffff40 ; call rax
0x000000000048d733 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000048e97a : mov ebp, dword ptr [rsp + 8] ; jmp 0x48e998
0x000000000046fe99 : mov ebp, eax ; jmp 0x46fe62
0x000000000048277d : mov ebp, ecx ; nop ; jmp rdx
0x000000000044be64 : mov ebx, 0xafb8341 ; je 0x44be73 ; ret
0x00000000004941e5 : mov ebx, 0xbd10fff9 ; stc ; call qword ptr [rax]
0x0000000000494309 : mov ebx, 0xbd20fff9 ; stc ; call rax
0x00000000004a629b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000490192 : mov ebx, 0xe1750022 ; pop rbx ; ret
0x000000000042486b : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000040f3a4 : mov ebx, 1 ; jmp 0x40f373
0x000000000045d05c : mov ebx, 1 ; jmp 0x45d02b
0x000000000045a5c6 : mov ebx, edi ; test rax, rax ; je 0x45a5d6 ; call rax
0x000000000047570c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004941e1 : mov ecx, 0xbb10fff9 ; stc ; call qword ptr [rax]
0x0000000000494305 : mov ecx, 0xbb20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a6299 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000046bd5d : mov ecx, 1 ; jmp rax
0x00000000004385bc : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042d96e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000471f1b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043adc3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000042fce3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fee3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004300e3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000444200 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000444241 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435753 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004356e3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435673 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435595 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435525 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435445 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435365 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435835 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004441e1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000481c27 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481bb5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472551 : mov ecx, eax ; jmp 0x47251b
0x000000000044e82b : mov ecx, ebp ; call rbx
0x0000000000417180 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000446fc2 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004171ba : mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004742d5 : mov ecx, esi ; call rbx
0x000000000045f52a : mov edi, 0x440f48c0 ; ret 0xae9
0x00000000004010d5 : mov edi, 0x58b48ff ; ret 0x2b79
0x0000000000400a8c : mov edi, 0x6babd0 ; jmp rax
0x000000000048cf66 : mov edi, 1 ; call r14
0x000000000048cebc : mov edi, 1 ; call rax
0x000000000048dc2c : mov edi, 1 ; jmp rax
0x000000000040ea04 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044accc : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045dcdb : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000046920d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x00000000004650e4 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d5b1 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044a7b4 : mov edi, dword ptr [rbp] ; call r12
0x000000000040df69 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a78e : mov edi, dword ptr [rbx] ; call r12
0x000000000047c86f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f446 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47f429 ; ret
0x00000000004a7cc6 : mov edi, dword ptr [rdx] ; ret
0x000000000048ee8e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x0000000000482654 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450f05 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000450dd0 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004517e1 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004519b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000451ca3 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x00000000004522db : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000045529f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000004514e9 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x00000000004511f5 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045371a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000455ec6 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000453137 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040119e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000416d8b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a891 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000416696 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048dd7c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000423584 : mov edi, eax ; call rcx
0x00000000004689f0 : mov edi, ebp ; call 0x4004b1
0x0000000000421aa3 : mov edi, ebp ; call 0x41dce4
0x0000000000489aee : mov edi, ebp ; call qword ptr [r14]
0x000000000040193e : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x0000000000489bc2 : mov edi, ebp ; call qword ptr [rax]
0x0000000000489c9e : mov edi, ebp ; call qword ptr [rcx]
0x00000000004581fc : mov edi, ebp ; call r12
0x000000000048ec6c : mov edi, ebp ; call r14
0x0000000000422906 : mov edi, ebp ; call rax
0x0000000000474181 : mov edi, ebp ; call rbx
0x00000000004742d2 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040dff9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044eb2e : mov edi, ebx ; call r14
0x0000000000413376 : mov edi, ebx ; call rax
0x000000000041672d : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470e2f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004722a8 : mov edi, edi ; call r12
0x00000000004112a3 : mov edi, edi ; call rax
0x000000000044f10b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000484841 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x484829 ; mov rax, rsi ; ret
0x0000000000458353 : mov edi, esi ; call rbx
0x0000000000458631 : mov edi, esi ; call rdx
0x000000000041d021 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x4192c9
0x000000000048dc84 : mov edi, esp ; call r15
0x0000000000471fd0 : mov edi, esp ; call rbx
0x0000000000448166 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000412b16 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000455854 : mov edx, 0x22f ; call 0x401b57
0x0000000000494e50 : mov edx, 0x60fffa28 ; xor dl, bh ; jmp rax
0x000000000044bcd6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004049ec : mov edx, 0x8949ffff ; ret 0x149
0x0000000000494225 : mov edx, 0xbcd0fff9 ; stc ; call rax
0x00000000004a717e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d0ffe
0x000000000048592f : mov edx, 0xcc ; call 0x401b57
0x0000000000450ba7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e6ec : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000045862a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048dd80 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484ea9 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043ea8f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d1bd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484ebd : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048ec69 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000444222 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000444213 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444263 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444273 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042f721 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042fae0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f371 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000444810 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004357c0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000444861 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435601 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004447f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004441d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000482659 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048ceb9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000423589 : mov edx, eax ; jmp 0x42353c
0x000000000045641a : mov edx, eax ; jmp 0x4563d1
0x0000000000456551 : mov edx, eax ; jmp 0x456510
0x000000000045681f : mov edx, eax ; jmp 0x4567d6
0x0000000000456896 : mov edx, eax ; jmp 0x45684d
0x000000000046f432 : mov edx, eax ; jmp 0x46f400
0x0000000000475ebe : mov edx, eax ; jmp 0x475eb2
0x0000000000489ae9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489bbd : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489c99 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489aa3 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000447c88 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000455cc9 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000453212 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x0000000000475a99 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000450adc : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000044fc92 : mov esi, 0x83480147 ; ret
0x000000000049422d : mov esi, 0xb160fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a629e : mov esi, 0xc2c1c0bf ; ret
0x00000000004480f4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000460ebc : mov esi, 1 ; jmp rax
0x000000000046ef9c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044a728 : mov esi, 2 ; jmp rax
0x000000000044a73b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x00000000004590c4 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x4590d6 ; call rsi
0x000000000048d5ad : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044f10e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048ee8b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048dd35 : mov esi, dword ptr [rsi] ; call r12
0x0000000000446ff3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044e826 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422901 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004519b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004514e4 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455ec1 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000420319 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x0000000000400589 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400598 ; ret
0x0000000000423581 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000421f32 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000421aa0 : mov esi, ebx ; mov rdi, r13 ; call 0x41dce7
0x000000000048dc2a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045dcd8 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e753 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e738 ; ret
0x00000000004650e1 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048dc81 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000489aec : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489bc0 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489c9c : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489aa6 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000470e2c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d33b : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042b401 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b431 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b421 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000402f33 : mov esp, 0x8024 ; add al, ch ; ret 0xbfd0
0x000000000040480f : mov esp, 0x8949ffff ; ret 0x149
0x0000000000417a22 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004516fd : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000451b7f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000440b43 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000046fda4 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000042b4eb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042b411 : mov esp, 0xf80148c0 ; ret
0x000000000042b902 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004007e6 : mov esp, eax ; call 0x4480e8
0x00000000004006af : mov esp, eax ; call 0x4485a8
0x000000000048277a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d737 : mov esp, ecx ; ret
0x000000000044acd0 : mov esp, esi ; call r15
0x000000000045298d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x0000000000456f0d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048aea3 : mov qword ptr [r10], r8 ; ret
0x00000000004385b0 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044c020 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470a78 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470ab8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471ab7 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c086 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c0a0 : mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000470a7c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471b39 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004174a4 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044c024 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484ecc : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484e1c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484ec0 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d251 : mov qword ptr [rax], rdx ; ret
0x0000000000471e2a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c740 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000047d0e0 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x00000000004587b1 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412a96 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481d3d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412e7e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047fa2d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485bd2 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485ba8
0x0000000000481c72 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488464 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488538 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000416620 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004182bc : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485692 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a498 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000410140 : mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000482f9e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000444a2c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000044439c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044437c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004443df : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004443ff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004443c0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000416502 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b6e4 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b6b6 : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000416532 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d290 : mov qword ptr [rdi + 0x98], rsi ; ret
0x00000000004449ec : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000044433c : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444a0c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000044435c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435597 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435527 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354b7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435447 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004448ea : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004353d7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044428a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000044490a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435367 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044429a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000044492a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004352f7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442aa : mov qword ptr [rdi + 7], rdx ; ret
0x00000000004843c3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000482f23 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000048470d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000416506 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000447d5a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000446fe6 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d23b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042f204 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f242 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482e8e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042f58b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434da7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f76b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d27 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f95b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ca7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fb2c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c18 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fd2c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b88 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ff2c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000482e19 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042f208 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f246 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f3bb : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f4b7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f403 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e27 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000468759 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482de8 : mov qword ptr [rdi], r9 ; ret
0x0000000000444876 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444266 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444276 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000444287 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444297 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000004442a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444257 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004352fb : mov qword ptr [rdi], rcx ; ret
0x0000000000447ede : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000444863 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435603 : mov qword ptr [rdi], rdx ; ret
0x00000000004385ad : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000446feb : mov qword ptr [rdi], rsi ; ret
0x0000000000412b14 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000443e0a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004425fa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000443e2a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000044261a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000443e4a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000044263a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000443cda : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000044252a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000041842f : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000443c83 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004424d3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484eac : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000418397 : mov qword ptr [rdx], rax ; ret
0x00000000004849f7 : mov qword ptr [rip + 0x23766a], rax ; ret
0x000000000047f304 : mov qword ptr [rip + 0x23d0a5], rax ; ret
0x000000000041f845 : mov qword ptr [rip + 0x29a014], rax ; ret
0x000000000041976b : mov qword ptr [rip + 0x2a00ee], rax ; ret
0x0000000000419266 : mov qword ptr [rip + 0x2a0583], rax ; ret
0x000000000041923e : mov qword ptr [rip + 0x2a05a3], rax ; ret
0x000000000041921e : mov qword ptr [rip + 0x2a05bb], rax ; ret
0x0000000000419114 : mov qword ptr [rip + 0x2a072d], rax ; ret
0x0000000000419104 : mov qword ptr [rip + 0x2a0735], rax ; ret
0x00000000004190f2 : mov qword ptr [rip + 0x2a0737], rdx ; ret
0x00000000004190b4 : mov qword ptr [rip + 0x2a073d], rax ; ret
0x00000000004190a4 : mov qword ptr [rip + 0x2a0755], rax ; ret
0x00000000004788d0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f471 : mov qword ptr [rsi], rax ; ret
0x000000000047e7b8 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000045d0f9 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x45d0c7
0x00000000004511cb : mov qword ptr [rsp + 0x50], rax ; call 0x44d4a7
0x000000000041ca0e : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041129d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489c42 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413371 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000416684 : mov qword ptr [rsp], rdi ; call 0x412916
0x000000000045abb5 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000446fe5 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000004a717d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d0fff
0x000000000040f3a3 : mov r11d, 1 ; jmp 0x40f374
0x000000000045d05b : mov r11d, 1 ; jmp 0x45d02c
0x00000000004007e5 : mov r12, rax ; call 0x4480e9
0x00000000004006ae : mov r12, rax ; call 0x4485a9
0x000000000044accf : mov r12d, r14d ; call r15
0x000000000048d5ac : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d5b0 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048aea0 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000044e82a : mov r9, r13 ; call rbx
0x00000000004742d4 : mov r9, r14 ; call rbx
0x0000000000417930 : mov rax, -1 ; ret
0x00000000004748f0 : mov rax, 1 ; ret
0x0000000000474900 : mov rax, 2 ; ret
0x0000000000474910 : mov rax, 3 ; ret
0x0000000000474920 : mov rax, 4 ; ret
0x0000000000474930 : mov rax, 5 ; ret
0x0000000000474940 : mov rax, 6 ; ret
0x0000000000474950 : mov rax, 7 ; ret
0x0000000000486d0e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047cc85 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000411830 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000471f43 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000481b30 : mov rax, qword ptr [rax + 8] ; ret
0x00000000004591bf : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x4591d3 ; call rax
0x000000000046bd59 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045abce : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046092c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d1e2 : mov rax, qword ptr [rax] ; ret
0x000000000047c4a0 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041666c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484ec8 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416d58 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004424d0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000490dcc : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x490de5 ; call rax
0x0000000000471f40 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004186f0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d210 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d260 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d2a0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d300 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d2f0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d2b0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000460e6e : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487d80 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487d99 ; ret
0x0000000000418394 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000418380 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x418381 ; ret
0x000000000047f3f9 : mov rax, qword ptr [rip + 0x23cfb0] ; ret
0x0000000000457a30 : mov rax, qword ptr [rip + 0x264441] ; ret
0x000000000044f530 : mov rax, qword ptr [rip + 0x26d3f1] ; ret
0x00000000004186d0 : mov rax, qword ptr [rip + 0x2a0a49] ; ret
0x000000000048e151 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048afe0 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048afb3 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048afd0 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e170 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046bd1e : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000460eb8 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461518 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d2d5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a895 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004011a2 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045313b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040df6c : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048aa49 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046ed37 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044ac5d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a93f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042271e : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473b10 : mov rax, r8 ; vzeroupper ; ret
0x000000000044b273 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410302 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413da6 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d40a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004147f1 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414724 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a4af : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000412a9a : mov rax, rbx ; pop rbx ; ret
0x000000000047e7bb : mov rax, rcx ; ret
0x0000000000412992 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041abd4 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000004129c3 : mov rax, rdi ; ret
0x000000000041a7d4 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047539a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a18c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000448265 : mov rax, rdx ; pop rbx ; ret
0x000000000041a7e0 : mov rax, rdx ; ret
0x000000000041dc9c : mov rax, rsi ; pop rbx ; ret
0x000000000041dcd0 : mov rax, rsi ; ret
0x000000000048d732 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e979 : mov rbp, qword ptr [rsp + 8] ; jmp 0x48e999
0x000000000048277c : mov rbp, r9 ; nop ; jmp rdx
0x000000000046fe98 : mov rbp, rax ; jmp 0x46fe63
0x000000000045a5c5 : mov rbx, rdi ; test rax, rax ; je 0x45a5d7 ; call rax
0x0000000000444240 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000481c26 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481bb4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472550 : mov rcx, rax ; jmp 0x47251c
0x0000000000446fc1 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b38b : mov rdi, qword ptr [r13] ; call r12
0x000000000040df68 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040ea03 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044accb : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045dcda : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046920c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x00000000004650e3 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044a7b3 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044a78d : mov rdi, qword ptr [rbx] ; call r12
0x000000000048ee8d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000450f04 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004517e0 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004519b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451ca2 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x00000000004522da : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045529e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004514e8 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453719 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455ec5 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000416695 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048dd7b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048dc83 : mov rdi, r12 ; call r15
0x0000000000471fcf : mov rdi, r12 ; call rbx
0x0000000000421aa2 : mov rdi, r13 ; call 0x41dce5
0x00000000004581fb : mov rdi, r13 ; call r12
0x000000000048ec6b : mov rdi, r13 ; call r14
0x00000000004920e0 : mov rdi, r13 ; call rax
0x000000000040dff8 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000458352 : mov rdi, r14 ; call rbx
0x0000000000458630 : mov rdi, r14 ; call rdx
0x00000000004722a7 : mov rdi, r15 ; call r12
0x00000000004112a2 : mov rdi, r15 ; call rax
0x000000000044f10a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000423583 : mov rdi, rax ; call rcx
0x0000000000422905 : mov rdi, rbp ; call rax
0x0000000000474180 : mov rdi, rbp ; call rbx
0x00000000004742d1 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000044eb2d : mov rdi, rbx ; call r14
0x0000000000413375 : mov rdi, rbx ; call rax
0x000000000041672c : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470e2e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048ceb8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048ec68 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048dd7f : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484ea8 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484ebc : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042f370 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435600 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000482658 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000489ae8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489bbc : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489c98 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489aa2 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000046f431 : mov rdx, r8 ; jmp 0x46f401
0x0000000000423588 : mov rdx, rax ; jmp 0x42353d
0x0000000000456419 : mov rdx, rax ; jmp 0x4563d2
0x0000000000456550 : mov rdx, rax ; jmp 0x456511
0x000000000045681e : mov rdx, rax ; jmp 0x4567d7
0x0000000000456895 : mov rdx, rax ; jmp 0x45684e
0x0000000000475ebd : mov rdx, rax ; jmp 0x475eb3
0x0000000000447c87 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048dd34 : mov rsi, qword ptr [r14] ; call r12
0x000000000048ee8a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x00000000004590c3 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x4590d7 ; call rsi
0x000000000044f10d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044e825 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422900 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000420318 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000489aeb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489bbf : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489c9b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489aa5 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000048dc80 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400588 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400599 ; ret
0x0000000000423580 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x0000000000421a9f : mov rsi, rbx ; mov rdi, r13 ; call 0x41dce8
0x000000000048dc29 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e752 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e739 ; ret
0x0000000000482779 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d736 : mov rsp, rcx ; ret
0x000000000049429c : mov sil, 0xf9 ; jmp qword ptr [rax]
0x000000000046c846 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x00000000004385d5 : mov word ptr [r9 - 2], cx ; ret
0x000000000044496c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000004442dc : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444a74 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000004443c4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435837 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444838 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000444218 : mov word ptr [rdi + 4], dx ; ret
0x000000000044488a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000044425a : mov word ptr [rdi + 8], dx ; ret
0x0000000000447d6a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000447004 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000042f90c : mov word ptr [rdi - 2], cx ; ret
0x000000000042f724 : mov word ptr [rdi - 2], dx ; ret
0x000000000042f908 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000004441e3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000446d42 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043583b : mov word ptr [rdi], cx ; ret
0x0000000000447ef4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000004447f3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004358a3 : mov word ptr [rdi], dx ; ret
0x00000000004385d2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000447009 : mov word ptr [rdi], si ; ret
0x0000000000443d58 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442598 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000443d03 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000442553 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000446d45 : mov word ptr [rsi - 2], cx ; ret
0x000000000040483b : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000447003 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000004474d7 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000042de92 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042de8e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042df3c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004442b0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444b2d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000044447d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043550f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043549f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043542f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353bf : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444acd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000044441d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043534f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444aed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000044443d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004352df : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b0d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000044445d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004358ff : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043588f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043581f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357af : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043573f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356cf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043565f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355ef : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043557f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447cdd : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000434a6b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000434adb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000444944 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004442c4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444307 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004442f7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444378 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444338 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444358 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004442d8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444479 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444419 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444439 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444459 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043528a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004352e4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004442b1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444b2e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000044447e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000435510 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354a0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435430 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353c0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444ace : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000044441e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435350 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444aee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000044443e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004352e0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b0e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000044445e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000435900 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435890 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435820 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357b0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435740 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356d0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435660 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355f0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435580 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447c65 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000447cde : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000434a6c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000434adc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435217 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435197 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435107 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435087 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435007 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f87 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f07 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e87 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e07 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d87 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d07 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c87 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434bf7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b67 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ad7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000444945 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004442c5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444318 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444308 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004442f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444379 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444339 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444359 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004442d9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044447a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000044441a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044443a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044445a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043528b : movq qword ptr [rdi], mm0 ; ret
0x00000000004352e5 : movq qword ptr [rdi], mm1 ; ret
0x000000000045787c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446f65 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000495069 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; jmp rax
0x00000000004a7b42 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a8d9d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4a8df6 ; jmp 0x4a8d37
0x00000000004acd0c : movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rsi, esi ; jmp rdx
0x0000000000446f57 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000494331 : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax - 0x1f00065b]
0x00000000004b0199 : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000047f9dc : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004a93d5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a8c91 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046be07 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000482e42 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004b0245 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x0000000000494335 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp rax
0x000000000048ae44 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480f0b : movsx eax, cl ; neg eax ; ret
0x0000000000480fb0 : movsx eax, dl ; sub eax, ecx ; ret
0x0000000000424901 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432eeb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042d96b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048c0e8 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000040220e : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048c9e9 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048b097 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048ae71 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c621 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000044d5ae : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044d537 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000047c17d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046eb26 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000047caa5 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000046f156 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000401fa5 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004492d3 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000046e9ba : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000448127 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000004481e1 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000004852fd : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000446bf7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000446ba4 : movsxd rax, ecx ; ret
0x0000000000446be9 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042c29d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000444079 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000044814f : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000446c37 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040d5a7 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045a3bf : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000042da3f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040d2be : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000449549 : movsxd rdx, eax ; jmp 0x4492f3
0x0000000000459ec0 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004acd0d : movsxd rsi, esi ; jmp rdx
0x000000000044605c : movsxd rsi, esi ; ret 0x7520
0x000000000044711f : movups xmmword ptr [r11], xmm4 ; ret
0x00000000004471a6 : movups xmmword ptr [r11], xmm8 ; ret
0x00000000004471a7 : movups xmmword ptr [rbx], xmm0 ; ret
0x0000000000447120 : movups xmmword ptr [rbx], xmm4 ; ret
0x000000000044711b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044711a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004471a2 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446f02 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447089 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000447066 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446eff : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048ae45 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000004758a1 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000048843c : movzx eax, al ; neg eax ; ret
0x0000000000484d09 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e8a0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000415580 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e09e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416781 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412c6e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041880f : movzx eax, byte ptr [rax] ; ret
0x000000000046bd1a : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000425c98 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042c030 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bb70 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425cb3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000416790 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412c80 : movzx eax, byte ptr [rdx] ; ret
0x0000000000415581 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004481b0 : movzx eax, cl ; pop rbx ; ret
0x00000000004466ba : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4466b9 ; ret
0x000000000044676a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446769 ; ret
0x000000000042d154 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000446fd8 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000425cb0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c033 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040db43 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40db2b ; ret
0x0000000000425e71 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042a2e8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042bfb8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000425d03 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000446084 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000004460e4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000004460d4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004460c4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004460b4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000004460a4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000446094 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435230 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042cf07 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000044606b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000435910 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042bb73 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042bb99 : movzx edx, dl ; sub eax, edx ; ret
0x00000000004351b0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004358a0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004733a7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004728be : neg bl ; clc ; dec dword ptr [rax + 1] ; ret
0x0000000000449c13 : neg eax ; jmp 0x449bdc
0x0000000000449057 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000041884f : neg eax ; ret
0x0000000000494f28 : nop ; adc al, 0xfa ; call qword ptr [rax]
0x0000000000494ee4 : nop ; adc bh, dl ; call qword ptr [rax]
0x0000000000494f20 : nop ; adc edx, edi ; call qword ptr [rax]
0x0000000000494568 : nop ; adc edx, edi ; jmp qword ptr [rax]
0x0000000000434967 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044b3b7 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b3c8 ; call r12
0x000000000042c5bc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b48a5 : nop ; add byte ptr [rax], al ; pop rax ; add ebp, edi ; jmp qword ptr [rdx]
0x0000000000475adc : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044e9df : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487ddf : nop ; add rsp, 8 ; ret
0x0000000000494f48 : nop ; and dl, bh ; call qword ptr [rax]
0x0000000000493fa0 : nop ; and eax, 0x26b0fff9 ; stc ; call rax
0x0000000000494f0c : nop ; and edx, edi ; call rax
0x00000000004856ef : nop ; call rax
0x000000000044f110 : nop ; call rsi
0x0000000000495025 : nop ; cli ; call qword ptr [rax]
0x0000000000494a60 : nop ; cmp dl, bh ; jmp qword ptr [rax]
0x000000000044c08f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c088 ; ret
0x000000000048277f : nop ; jmp rdx
0x0000000000400bab : nop ; leave ; ret
0x0000000000494388 : nop ; lodsb al, byte ptr [rsi] ; stc ; jmp rax
0x000000000042f53f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000419293 : nop ; mov dword ptr [rip + 0x2a2afa], eax ; ret
0x000000000042f71f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000048536f : nop ; mov eax, 0x27 ; syscall ; ret
0x0000000000474e5f : nop ; mov eax, 0xc9 ; syscall ; ret
0x0000000000416baf : nop ; mov eax, 0xffffffff ; ret
0x000000000047fd7f : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000042fadf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044480f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000471e29 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000419113 : nop ; mov qword ptr [rip + 0x2a072d], rax ; ret
0x0000000000419103 : nop ; mov qword ptr [rip + 0x2a0735], rax ; ret
0x00000000004190b3 : nop ; mov qword ptr [rip + 0x2a073d], rax ; ret
0x00000000004190a3 : nop ; mov qword ptr [rip + 0x2a0755], rax ; ret
0x000000000048d25f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048afcf : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e16f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x00000000004442af : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000495068 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; jmp rax
0x0000000000494334 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp rax
0x0000000000494ed4 : nop ; or al, 0xfa ; call qword ptr [rax]
0x000000000046f19f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f16e
0x000000000046f19e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f16f
0x00000000004947a4 : nop ; or dl, bh ; call qword ptr [rax]
0x000000000049479c : nop ; or edx, edi ; call qword ptr [rax]
0x0000000000400b5d : nop ; pop rbp ; ret
0x00000000004004cf : nop ; ret
0x0000000000494500 : nop ; sar ecx, 1 ; jmp rax
0x0000000000494f38 : nop ; sbb bh, dl ; call qword ptr [rax]
0x0000000000494ef4 : nop ; sbb dl, bh ; call qword ptr [rax]
0x0000000000494efc : nop ; sbb edi, edx ; call qword ptr [rax]
0x00000000004940bd : nop ; stc ; call rax
0x00000000004940dd : nop ; stc ; jmp qword ptr [rcx]
0x000000000049409d : nop ; stc ; jmp rcx
0x0000000000412913 : nop ; sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004183cf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004af620 : nop ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004941c4 : nop ; xchg eax, ebp ; stc ; push qword ptr [rax] ; xchg eax, esi ; stc ; call rax
0x000000000041481f : nop ; xor eax, eax ; ret
0x000000000040eac8 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419d68 : nop dword ptr [rax + rax] ; call rax
0x0000000000485908 : nop dword ptr [rax + rax] ; call rbx
0x00000000004441eb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a93 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000411838 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a5b : nop dword ptr [rax + rax] ; ret
0x00000000004465bb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004748bc : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042351d : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x0000000000471f25 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000041a7dc : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ad5 : nop dword ptr [rax] ; pop rbp ; ret
0x00000000004487dc : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000419d5d : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004184e1 : nop dword ptr [rax] ; ret
0x000000000041475d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x41472d
0x0000000000416ce5 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000485907 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040eac7 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419d67 : nop word ptr [rax + rax] ; call rax
0x0000000000484c7a : nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000004746a2 : nop word ptr [rax + rax] ; ret
0x00000000004483ba : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004103a5 : not dword ptr [rbx - 0x76b7ffd6] ; ret
0x000000000042a467 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f49f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a495 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004759c2 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041dccc : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473ce8 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046be08 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000468e75 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000425c96 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041dc9a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000413373 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047f9d9 : or al, 0x37 ; jae 0x47f987 ; xor eax, eax ; ret
0x0000000000424610 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000046f1a2 : or al, 0x40 ; jmp 0x46f16b
0x000000000046f1a1 : or al, 0x40 ; jmp 0x46f16c
0x0000000000449c8d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000416683 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x412917
0x00000000004011a1 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004850c3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004965cc : or al, 0x70 ; sti ; jmp qword ptr [rax]
0x000000000046ec53 : or al, 0x7e ; ret 0x8944
0x0000000000458773 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x458787 ; ret
0x000000000045e13b : or al, 0x83 ; ret
0x0000000000448151 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000004633ca : or al, 0x89 ; ret 0xc689
0x00000000004481db : or al, 0x89 ; ret 0xe283
0x0000000000424903 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043adc4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432eed : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042d96d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000475a98 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042c29f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044407b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042d971 : or al, 0xb ; jmp r9
0x000000000044407f : or al, 0xb ; jmp rcx
0x0000000000411458 : or al, 0xe8 ; ret 0xec
0x00000000004566af : or al, 0xe9 ; ret
0x0000000000471bcc : or al, 0xeb ; ret 0x5590
0x0000000000435433 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000466b2d : or al, 0xf6 ; ret 0xf01
0x0000000000493f59 : or al, 0xf9 ; jmp qword ptr [rax]
0x0000000000494ed5 : or al, 0xfa ; call qword ptr [rax]
0x0000000000422dc1 : or al, 9 ; ret 0xbae9
0x000000000047fbb3 : or al, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004ac245 : or al, byte ptr [rax] ; add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x0000000000473c9b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042a647 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e031 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a675 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048cf8a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004ac305 : or al, byte ptr [rax] ; add byte ptr [rax], ch ; sub esi, esi ; call qword ptr [rax]
0x00000000004ac32d : or al, byte ptr [rax] ; add byte ptr [rax], dh ; sub esi, esi ; jmp qword ptr [rax]
0x000000000040766d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040aafc : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044c646 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b3fc3 : or al, byte ptr [rcx] ; ret
0x000000000040bcd7 : or al, ch ; ret
0x0000000000472658 : or al, ch ; ret 0xf8dd
0x000000000040add8 : or al, ch ; ret 0xffb2
0x000000000041d027 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x00000000004b2e99 : or bh, ah ; jmp qword ptr [rax]
0x0000000000493f51 : or bh, cl ; jmp qword ptr [rax - 0x1f0006f5]
0x00000000004244f0 : or bh, dh ; ret 0
0x0000000000494799 : or bh, dl ; call qword ptr [rax + 0x10fffa09]
0x00000000004948d5 : or bh, dl ; call rsp
0x0000000000494795 : or bh, dl ; jmp qword ptr [rax]
0x000000000041a7da : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000405e1d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048e97d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004355f3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a427 : or bl, dh ; ret
0x000000000044fd86 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000411631 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e16d : or byte ptr [r8 + 0x39], cl ; ret
0x00000000004510d3 : or byte ptr [r8 + 0xf], cl ; ret
0x000000000048470f : or byte ptr [r8 + 2], r15b ; ret
0x00000000004116ff : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f51a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000442528 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047fa05 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478d92 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000484754 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048c9e7 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004425e7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000411632 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000412e65 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e16e : or byte ptr [rax + 0x39], cl ; ret
0x0000000000452988 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000418809 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004ad176 : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x00000000004510d4 : or byte ptr [rax + 0xf], cl ; ret
0x00000000004198b6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000048689c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d801 : or byte ptr [rax + 1], cl ; ret
0x0000000000484710 : or byte ptr [rax + 2], bh ; ret
0x0000000000411700 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000419153 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044a894 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044b272 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe1440fdb
0x000000000044252d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f51b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a4ae : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041672b : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000442529 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f8c0 : or byte ptr [rax - 0x77], cl ; ret
0x000000000048950a : or byte ptr [rax - 0x77], r9b ; ret
0x000000000047f448 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478d93 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000048975e : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047fa06 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004897b7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041ede0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b620 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044ac42 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b647 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047dcb2 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044c500 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000411d16 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047263e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041a47b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042a917 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e1d1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a855 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004174a7 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000045107a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000448225 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044e8f1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f6b6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f689 ; ret
0x000000000042068c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000040d2bc : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043f88e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d1df : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000485abb : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482b91 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000004857d6 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048d24e : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000482813 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041ce52 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004921f3 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044a2ac : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449dc3 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000413736 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401c05 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044b0fe : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041dd97 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041dd96 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x000000000046f1a0 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f16d
0x00000000004630a7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040fe29 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000047b6b9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004844fb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000484755 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x00000000004815ed : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004791e2 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x00000000004791b4 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004106f8 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00000000004104e7 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048a435 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000046fc03 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048c9e8 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ec39 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004882fb : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004834f0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000489bbb : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004112a1 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000484502 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044b16b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000004425e8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000420928 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d49a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044a906 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041ce56 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000041480a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a965e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047bc30 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047bb80 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004a4e60 : or byte ptr [rdi - 3], dh ; jmp rax
0x00000000004549a7 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044fd87 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000040ef02 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004758a0 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048843b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000042df3b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041af26 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000483153 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000401261 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000494584 : or byte ptr [rsi], 0xfa ; call qword ptr [rax]
0x00000000004af644 : or byte ptr [rsi], bh ; add byte ptr [rax], al ; test al, 0xb7 ; clc ; call qword ptr [rax]
0x0000000000457b31 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000410b94 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000410487 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000423a92 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045d52e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000486d0d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047b655 : or cl, ch ; ret
0x0000000000435513 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f585 : or dh, bl ; ret
0x000000000044cefc : or dh, dh ; ret 0x8902
0x000000000041aa77 : or dh, dh ; ret 0xf02
0x00000000004947a9 : or dl, bh ; call qword ptr [rax + 0x10fffa07]
0x00000000004947a5 : or dl, bh ; call qword ptr [rax]
0x00000000004949a5 : or dl, bh ; jmp qword ptr [rax + 0x20fffa07]
0x00000000004949a1 : or dl, bh ; jmp qword ptr [rax]
0x0000000000494825 : or dl, bh ; jmp rdx
0x00000000004b0c08 : or dl, bh ; std ; jmp qword ptr [rdx]
0x00000000004b40a8 : or dl, cl ; cld ; jmp qword ptr [rcx]
0x000000000042068a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044d53a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040da6b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x000000000045a72e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000440dae : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000047288b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000488b40 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042a827 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f73f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a765 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000411cd7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000045ea45 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000401fa3 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000042d6d6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412e90 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000046f342 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424497 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000047fd76 : or dword ptr [rip + 0x23a46b], 1 ; pop rbx ; ret
0x00000000004b3fc0 : or eax, 0x10a0303 ; ret
0x00000000004b4018 : or eax, 0x1370303 ; ret
0x0000000000494611 : or eax, 0x1392fffa ; cli ; jmp qword ptr [rdx]
0x0000000000444ad1 : or eax, 0x1c478d48 ; ret
0x00000000004b3fb0 : or eax, 0x34b0303 ; ret
0x00000000004b3fe4 : or eax, 0x35b0303 ; ret
0x000000000046f162 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046e9ca : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a83a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004403c2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000042a377 : or eax, 0x83480000 ; ret 0x4910
0x000000000043dcf1 : or eax, 0x83480000 ; ret 0xe910
0x000000000042a3a5 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000490fe2 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000474522 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000494789 : or eax, 0xd40fffa ; cli ; jmp rax
0x0000000000494609 : or eax, 0xd7cfffa ; cli ; jmp qword ptr [rdx]
0x000000000049ef19 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x0000000000494f15 : or eax, 0xe90fffa ; cli ; call qword ptr [rax]
0x0000000000454265 : or eax, 0xea810000 ; ret 0
0x00000000004a8c93 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000004353c3 : or eax, 0xf7f0ff3 ; ret
0x000000000044905d : or eax, 0xffffffff ; ret
0x000000000042bff9 : or eax, 1 ; ret
0x000000000042a557 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043de91 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a585 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004ad178 : or eax, dword ptr [rdx] ; jae 0x4ad18a ; ret
0x00000000004b52f2 : or eax, dword ptr [rdx] ; ret 0xe0a
0x00000000004183c4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000044f727 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call rcx
0x00000000004129ad : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ae41 : or ebx, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000435583 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000414836 : or ebx, esi ; ret
0x000000000042330f : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000413727 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000004106a8 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000464c26 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc27f9436
0x000000000042424c : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000049105f : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004829f3 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x0000000000493f8d : or ecx, edi ; call qword ptr [rax]
0x0000000000493f55 : or edi, ecx ; jmp rax
0x0000000000494ed1 : or edi, edx ; call qword ptr [rax + 0x10fffa0c]
0x0000000000494f11 : or edi, edx ; call qword ptr [rax]
0x00000000004947a1 : or edx, edi ; call qword ptr [rax + 0x10fffa08]
0x000000000049479d : or edx, edi ; call qword ptr [rax]
0x000000000049499d : or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x0000000000494999 : or edx, edi ; jmp qword ptr [rax]
0x000000000049481d : or edx, edi ; jmp rdx
0x00000000004354a3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045afb4 : or esi, ebx ; ret
0x0000000000412e91 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004ac982 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000004355f2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435582 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435512 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004354a2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b52f1 : or r8d, dword ptr [r10] ; ret 0xe0a
0x0000000000457b30 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b4017 : or rax, 0x1370303 ; ret
0x00000000004b3faf : or rax, 0x34b0303 ; ret
0x00000000004b3fe3 : or rax, 0x35b0303 ; ret
0x000000000046f161 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046e9c9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044905c : or rax, 0xffffffffffffffff ; ret
0x00000000004ad177 : or rax, qword ptr [rdx] ; jae 0x4ad18b ; ret
0x00000000004ac981 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x00000000004247c6 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424686 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048dc85 : out 0x41, eax ; call rdi
0x0000000000486849 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470e2d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000422e78 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000489aed : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x000000000040193d : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489bc1 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000489c9d : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000489aa7 : out 0x89, al ; out dx, eax ; call rax
0x00000000004a7b40 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004728bc : out 0xe8, al ; neg bl ; clc ; dec dword ptr [rax + 1] ; ret
0x000000000047414c : out 0xe8, eax ; ret
0x000000000044ddd8 : out 0xe8, eax ; ret 0xfddc
0x0000000000434d8a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e0a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a9868 : out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000049442d : out 0xf9, al ; call qword ptr [rax]
0x000000000049444d : out 0xf9, al ; call rax
0x0000000000461c42 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000402b9d : out 1, eax ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000004761de : out 2, al ; add byte ptr [rax + 9], cl ; ret 0x850f
0x0000000000456f0e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000041976e : out dx, al ; add byte ptr [rdx], ch ; add bl, dh ; ret
0x00000000004a8c97 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000004244ae : out dx, al ; jns 0x4244b8 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000042f58a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000423582 : out dx, al ; mov rdi, rax ; call rcx
0x000000000043519a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f5ee : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000421f33 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000041ff46 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000417989 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004179e1 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042de04 : out dx, eax ; and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x00000000004689f1 : out dx, eax ; call 0x4004b0
0x0000000000421aa4 : out dx, eax ; call 0x41dce3
0x0000000000489aef : out dx, eax ; call qword ptr [r14]
0x000000000040193f : out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489bc3 : out dx, eax ; call qword ptr [rax]
0x0000000000489c9f : out dx, eax ; call qword ptr [rcx]
0x00000000004581fd : out dx, eax ; call r12
0x000000000048ec6d : out dx, eax ; call r14
0x0000000000422907 : out dx, eax ; call rax
0x0000000000474182 : out dx, eax ; call rbx
0x00000000004010d4 : out dx, eax ; mov edi, 0x58b48ff ; ret 0x2b79
0x000000000042f3ba : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f4b6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f402 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004742d3 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040dffa : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000043521a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f6ed : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c323 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c338 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c34d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446803 : out dx, eax ; ret 0xf66
0x000000000042d83c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d825 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d80e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c2ca : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048abe7 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043d5fe : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444c2e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000494fdd : outsb dx, byte ptr [rsi] ; cli ; call rax
0x00000000004a9443 : outsb dx, byte ptr [rsi] ; ja 0x4a93cc ; ret 0x48f
0x000000000047d800 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x000000000046759a : outsb dx, byte ptr [rsi] ; ret
0x00000000004a7184 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000419202 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000424a58 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438f7e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042d63d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042d6dd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004733aa : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d642 : outsd dx, dword ptr [rsi] ; ret
0x000000000046346d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463496 : outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041a3ca : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004a7b46 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000419e02 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042fcf7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000004661ed : outsd dx, dword ptr [rsi] ; ret 0xace8
0x000000000042d6e2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000004661c9 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x00000000004733fa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000463434 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004965c9 : outsd dx, dword ptr [rsi] ; sti ; dec dword ptr [rax + rsi*2] ; sti ; jmp qword ptr [rax]
0x00000000004957ec : outsd dx, dword ptr [rsi] ; sti ; inc dword ptr [rdx + 0x3e] ; sti ; call rdi
0x00000000004a7b45 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042a232 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004748b4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047489f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042a231 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a8f45 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a8f46 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000447ec6 : pextrw edi, mm0, 0x77 ; ret
0x000000000042b3f2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42b459 ; xor eax, eax ; ret
0x00000000004409df : pmovmskb edx, mm4 ; test edx, edx ; je 0x4409f3 ; bsf eax, edx ; ret
0x000000000044be15 : pop r10 ; ret
0x00000000004a93cf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044a741 : pop r12 ; jmp rax
0x000000000044a726 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ff49 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042246c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421116 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040260e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040067f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f959 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004101ee : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040daf9 : pop r12 ; pop r13 ; ret
0x0000000000405e04 : pop r12 ; ret
0x0000000000460dcf : pop r13 ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000041ff4b : pop r13 ; pop r14 ; jmp rax
0x000000000042246e : pop r13 ; pop r14 ; jmp rcx
0x0000000000421118 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402610 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400681 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f95b : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004101f0 : pop r13 ; pop r14 ; ret
0x000000000040dafb : pop r13 ; ret
0x000000000041ff4d : pop r14 ; jmp rax
0x0000000000422470 : pop r14 ; jmp rcx
0x000000000042111a : pop r14 ; pop r15 ; jmp rax
0x0000000000402612 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400683 : pop r14 ; pop r15 ; ret
0x000000000040f95d : pop r14 ; pop rbp ; ret
0x00000000004101f2 : pop r14 ; ret
0x000000000042111c : pop r15 ; jmp rax
0x0000000000402614 : pop r15 ; pop rbp ; ret
0x0000000000400685 : pop r15 ; ret
0x00000000004af694 : pop rax ; add byte ptr ds:[rax], al ; pop rax ; hlt ; clc ; call qword ptr [rax]
0x000000000041e704 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x00000000004b48a8 : pop rax ; add ebp, edi ; jmp qword ptr [rdx]
0x0000000000460e1a : pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004af698 : pop rax ; hlt ; clc ; call qword ptr [rax]
0x000000000045dd3d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004b2e94 : pop rax ; jbe 0x4b2e9e ; add al, cl ; or bh, ah ; jmp qword ptr [rax]
0x000000000045f442 : pop rax ; jmp 0x45f449
0x0000000000481bbc : pop rax ; jmp qword ptr [rax]
0x00000000004921f2 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481c76 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000415664 : pop rax ; ret
0x000000000048cccb : pop rax ; ret 0x22
0x00000000004b5309 : pop rax ; std ; call qword ptr [rdx]
0x00000000004b5878 : pop rax ; test ch, bh ; call qword ptr [rbx]
0x0000000000456549 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x4565c1 ; mov rdx, rax ; jmp 0x456518
0x0000000000460d82 : pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000416730 : pop rbp ; jmp rax
0x0000000000486c63 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a8b : pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000488b3f : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a740 : pop rbp ; pop r12 ; jmp rax
0x000000000044a725 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ff48 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042246b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421115 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040067e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004101ed : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040daf8 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405e03 : pop rbp ; pop r12 ; ret
0x000000000041ff4c : pop rbp ; pop r14 ; jmp rax
0x000000000042246f : pop rbp ; pop r14 ; jmp rcx
0x0000000000421119 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402611 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400682 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f95c : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004101f1 : pop rbp ; pop r14 ; ret
0x0000000000484508 : pop rbp ; pop rbx ; ret
0x0000000000400a98 : pop rbp ; ret
0x0000000000485151 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a6718 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000448216 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a6716 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000416674 : pop rbx ; jmp rax
0x000000000046d808 : pop rbx ; loopne 0x46d812 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000047fd97 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000448261 : pop rbx ; mov eax, eax ; ret
0x000000000041064f : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465f8d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000490191 : pop rbx ; mov ebx, 0xe1750022 ; pop rbx ; ret
0x00000000004171b9 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041abd3 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040f958 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000457b8c : pop rbx ; pop r12 ; ret
0x000000000048ac69 : pop rbx ; pop r14 ; ret
0x000000000041672f : pop rbx ; pop rbp ; jmp rax
0x0000000000470e31 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a724 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ff47 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042246a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000410224 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040daf7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405e02 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401c06 : pop rbx ; pop rbp ; ret
0x0000000000400df8 : pop rbx ; ret
0x00000000004a9a00 : pop rbx ; ret 0x6f9
0x000000000044e110 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000049403d : pop rbx ; stc ; call rax
0x0000000000405e1e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000417182 : pop rbx ; xor edx, edx ; jmp rax
0x000000000046117b : pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448fc3 : pop rcx ; shl byte ptr [rsi], cl ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042df38 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b1819 : pop rdi ; add byte ptr [rax], al ; in al, 0x93 ; cli ; call qword ptr [rcx]
0x00000000004b1775 : pop rdi ; add byte ptr [rax], al ; test al, 0x8e ; cli ; call qword ptr [rdx]
0x000000000043fd7d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494ffd : pop rdi ; cli ; call rax
0x000000000042f959 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f769 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8cbe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000042111d : pop rdi ; jmp rax
0x00000000004a7c81 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044b412 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044a905 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042f589 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f3b9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f4b5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f401 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000402615 : pop rdi ; pop rbp ; ret
0x0000000000400686 : pop rdi ; ret
0x000000000042abe6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000461070 : pop rdx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a88a1 : pop rdx ; je 0x4a886b ; ret 0xacfc
0x00000000004a9867 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044be14 : pop rdx ; pop r10 ; ret
0x0000000000481c77 : pop rdx ; pop rbx ; ret
0x000000000044be39 : pop rdx ; pop rsi ; ret
0x00000000004498b5 : pop rdx ; ret
0x00000000004a93d0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043fc7e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420416 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000460929 : pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000496554 : pop rsi ; jb 0x496555 ; call qword ptr [rdi]
0x000000000041ff4e : pop rsi ; jmp rax
0x0000000000422471 : pop rsi ; jmp rcx
0x000000000044b3e2 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x000000000042111b : pop rsi ; pop r15 ; jmp rax
0x0000000000402613 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400684 : pop rsi ; pop r15 ; ret
0x000000000040f95e : pop rsi ; pop rbp ; ret
0x00000000004101f3 : pop rsi ; ret
0x0000000000494a50 : pop rsi ; xor edi, edx ; jmp rax
0x000000000043d810 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aee4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b0798 : pop rsp ; add byte ptr [r8], r8b ; add al, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004b14a1 : pop rsp ; add byte ptr [rax], al ; pushfq ; jb 0x4b14a7 ; call qword ptr [rdx]
0x00000000004b14a0 : pop rsp ; add byte ptr [rax], al ; pushfq ; jb 0x4b14a8 ; call qword ptr [rdx]
0x000000000043e510 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041ca0b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000044a742 : pop rsp ; jmp rax
0x000000000044a727 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000041ff4a : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x000000000042246d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x0000000000421117 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040260f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400680 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f95a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004101ef : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040dafa : pop rsp ; pop r13 ; ret
0x0000000000401db3 : pop rsp ; ret
0x000000000040f904 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046aafd : popfq ; call 0xffffffffc3caab07
0x000000000046a83f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000048c7ae : popfq ; ret 0xf45
0x00000000004957c8 : popfq ; sti ; jmp qword ptr [rcx]
0x00000000004352e2 : psllq mm1, qword ptr [r15] ; jg 0x4352fd ; ret
0x0000000000437e02 : psllq mm1, qword ptr [r15] ; jg 0x437e1d ; ret
0x00000000004352e3 : psllq mm1, qword ptr [rdi] ; jg 0x4352fc ; ret
0x0000000000437e03 : psllq mm1, qword ptr [rdi] ; jg 0x437e1c ; ret
0x00000000004442f6 : psllq mm1, qword ptr [rdi] ; jg 0x44430a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004442f5 : psllq mm1, qword ptr [rdi] ; jg 0x44430b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444357 : psllq mm1, qword ptr [rdi] ; jg 0x44436c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000049463d : psubd mm7, mm7 ; ret 0xfa0e
0x000000000045e232 : push -0x7c000003 ; ret
0x0000000000444c14 : push -0x9ffffff ; ret 0x7501
0x0000000000494fd5 : push -6 ; call rax
0x0000000000494071 : push -7 ; call qword ptr [rax]
0x0000000000496518 : push 0x1efffb70 ; jae 0x496521 ; jmp rsi
0x0000000000494c4c : push 0x33 ; cli ; call qword ptr [rax]
0x0000000000411c7d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000488534 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479b65 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000045862c : push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004b48a4 : push 0x58000090 ; add ebp, edi ; jmp qword ptr [rdx]
0x0000000000495fc9 : push 0x68b4fffb ; sti ; jmp qword ptr [rax]
0x0000000000494069 : push 0x6930fff9 ; stc ; jmp qword ptr [rax]
0x0000000000495fd5 : push 0x69f8fffb ; sti ; call rax
0x0000000000494fd1 : push 0x6ad0fffa ; cli ; call rax
0x00000000004a9442 : push 0x6e ; ja 0x4a93cd ; ret 0x48f
0x00000000004173ea : push 0x75c08548 ; ret
0x00000000004849fa : push 0x76 ; and eax, dword ptr [rax] ; ret
0x000000000049456f : push qword ptr [rax + 0x40fffa10] ; adc dl, bh ; call rax
0x0000000000494c7f : push qword ptr [rax + 0x40fffa34] ; xor al, 0xfa ; call rax
0x0000000000494017 : push qword ptr [rax + 0x4e] ; stc ; jmp rax
0x0000000000494e8f : push qword ptr [rax + 0x50fffa28] ; xor dl, bh ; call rax
0x0000000000494ecf : push qword ptr [rax + 0xb] ; cli ; call qword ptr [rax + 0x10fffa0c]
0x0000000000495fc7 : push qword ptr [rax + rbp*2 + 0x68b4fffb] ; sti ; jmp qword ptr [rax]
0x0000000000495fd3 : push qword ptr [rax + rbp*2 + 0x69f8fffb] ; sti ; call rax
0x0000000000494bdb : push qword ptr [rax + rdi + 0x3844fffa] ; cli ; call rsp
0x00000000004950af : push qword ptr [rax - 0x3f00050f] ; int1 ; cli ; call rax
0x000000000049507f : push qword ptr [rax - 0x54] ; cli ; inc eax ; lodsd eax, dword ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000495023 : push qword ptr [rax - 0x70] ; cli ; call qword ptr [rax]
0x0000000000495003 : push qword ptr [rax - 0x7d] ; cli ; call qword ptr [rax]
0x000000000049434f : push qword ptr [rax - 0x7f000668] ; wait ; stc ; call rax
0x000000000049497b : push qword ptr [rax] ; add eax, 0x4b0fffa ; cli ; jmp qword ptr [rax]
0x0000000000494a4b : push qword ptr [rax] ; cld ; stc ; lcall ptr [rsi + 0x33] ; cli ; jmp rax
0x0000000000494477 : push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000049406b : push qword ptr [rax] ; imul edi, ecx, 0xf96a20ff ; call qword ptr [rax]
0x00000000004944cb : push qword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x000000000048e14d : push qword ptr [rax] ; jne 0x48e180 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048efad : push qword ptr [rax] ; jne 0x48efe0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004944c7 : push qword ptr [rax] ; jrcxz 0x4944cc ; push qword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x00000000004941db : push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x000000000049424f : push qword ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000494027 : push qword ptr [rax] ; push rsp ; stc ; jmp qword ptr [rax + 0x10fff955]
0x0000000000494ec3 : push qword ptr [rax] ; sub bh, dl ; jmp qword ptr [rax + 0x10fffa29]
0x0000000000494cbf : push qword ptr [rax] ; sub edi, edx ; jmp qword ptr [rax + 0x10fffa2a]
0x00000000004941c7 : push qword ptr [rax] ; xchg eax, esi ; stc ; call rax
0x0000000000446598 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044a7d8 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a7b0 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3e0 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b410 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042bfa9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000471978 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004171ed : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000047199e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000417656 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000047f44b : push qword ptr [rbp - 0x2e] ; ret
0x0000000000417a20 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046144b : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45d6f9
0x000000000044904c : push qword ptr [rbx + 1] ; ret
0x00000000004946e3 : push qword ptr [rcx + rdx + 0x1144fffa] ; cli ; call rsp
0x000000000045ebb4 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a24f : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x00000000004157cf : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000454fe3 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004956f3 : push qword ptr [rdi + 0x3d21fffb] ; sti ; jmp qword ptr [rcx]
0x00000000004956ef : push qword ptr [rdi + 0x3d34fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000495903 : push qword ptr [rdi + 0x3d44fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000449c56 : push qword ptr [rdi + 0x3f] ; ret
0x0000000000449986 : push qword ptr [rdi + 0x57] ; ret
0x00000000004498b3 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045afb2 : push qword ptr [rdi + 0xb] ; ret
0x000000000044965a : push qword ptr [rdi + 3] ; ret
0x0000000000449949 : push qword ptr [rdi + 4] ; ret
0x00000000004496a8 : push qword ptr [rdi + 5] ; ret
0x000000000047566e : push qword ptr [rdi + 7] ; ret
0x000000000044a425 : push qword ptr [rdi + 8] ; ret
0x0000000000449a1c : push qword ptr [rdi + 9] ; ret
0x0000000000475524 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000494d43 : push qword ptr [rdx + 0x2a] ; cli ; jmp rdx
0x000000000049578b : push qword ptr [rdx + 0x3d] ; sti ; jmp qword ptr [rcx]
0x000000000049461b : push qword ptr [rdx + 0x42fffa12] ; adc bh, dl ; call rdx
0x0000000000494b13 : push qword ptr [rdx + 0x42fffa39] ; cmp edx, edi ; call rdx
0x00000000004940bb : push qword ptr [rdx] ; nop ; stc ; call rax
0x000000000049463b : push qword ptr [rdx] ; psubd mm7, mm7 ; ret 0xfa0e
0x0000000000494aaf : push qword ptr [rsi + 0x46fffa36] ; cli ; call rsi
0x0000000000411456 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000416622 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000470a7a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000004183d1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041c45d : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000494770 : push rax ; adc dl, bh ; jmp rax
0x0000000000494558 : push rax ; adc edi, edx ; jmp rax
0x0000000000416623 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042394c : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000400f40 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004877a2 : push rax ; and eax, dword ptr [rax] ; jne 0x4877d4 ; ret
0x00000000004511cf : push rax ; call 0x44d4a3
0x0000000000461451 : push rax ; call 0x45d6f3
0x000000000044e8a8 : push rax ; call rbx
0x0000000000495167 : push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000494e64 : push rax ; cli ; call rax
0x0000000000494f87 : push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x00000000004705a4 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000494fbc : push rax ; cmp eax, 0x60d0fffa ; cli ; call rax
0x00000000004943fb : push rax ; fdivp st(1) ; call rax
0x0000000000494490 : push rax ; fdivr st(1) ; call qword ptr [rax]
0x0000000000493e98 : push rax ; hlt ; clc ; call qword ptr [rax]
0x0000000000493ea7 : push rax ; hlt ; clc ; inc eax ; clc ; call qword ptr [rax]
0x0000000000495117 : push rax ; idiv dl ; inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x0000000000495143 : push rax ; idiv edx ; call qword ptr [rax]
0x0000000000495fa0 : push rax ; imul edi, ebx, -1 ; xor byte ptr [rbx - 5], ch ; call qword ptr [rax]
0x000000000049407b : push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x00000000004950bf : push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000420ca5 : push rax ; jmp 0x420578
0x0000000000471fc9 : push rax ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004943df : push rax ; loopne 0x4943e0 ; jmp rax
0x0000000000494300 : push rax ; mov bh, 0xf9 ; jmp qword ptr [rax]
0x00000000004941d8 : push rax ; mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494253 : push rax ; mov dl, 0xf9 ; call rax
0x0000000000450ae1 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000419152 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041a47a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044b0fd : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041ce55 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044cefb : push rax ; or dh, dh ; ret 0x8902
0x000000000041db92 : push rax ; or dh, dh ; ret 0xf02
0x000000000048242e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004885e5 : push rax ; pop rbx ; ret
0x0000000000494ffc : push rax ; pop rdi ; cli ; call rax
0x0000000000450ae3 : push rax ; push rsp ; ret
0x00000000004183c6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471ab9 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000495187 : push rax ; stc ; cli ; call qword ptr [rax]
0x0000000000494e74 : push rax ; sub al, 0xfa ; call rax
0x0000000000493fab : push rax ; sub cl, bh ; call qword ptr [rax]
0x0000000000494e7c : push rax ; sub edi, edx ; call rax
0x00000000004941b4 : push rax ; xchg eax, ebx ; stc ; jmp rax
0x00000000004941a4 : push rax ; xchg eax, ecx ; stc ; call rax
0x00000000004941ac : push rax ; xchg eax, edx ; stc ; call rax
0x0000000000494e94 : push rax ; xor dl, bh ; call rax
0x0000000000494a77 : push rax ; xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x000000000048a06a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048cb12 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004b0dc1 : push rbp ; add byte ptr [rax], al ; jl 0x4b0dce ; cli ; jmp qword ptr [rdx]
0x000000000047fbb8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041045d : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004815ec : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004b5c36 : push rbp ; ret
0x000000000049402d : push rbp ; stc ; call qword ptr [rax]
0x000000000046c7c7 : push rbp ; stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000410a06 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040108f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047fa2f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484d07 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b0c05 : push rbx ; add byte ptr [rax], al ; or dl, bh ; std ; jmp qword ptr [rdx]
0x0000000000412e68 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000447785 : push rbx ; jb 0x447795 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004719b2 : push rbx ; je 0x471a16 ; pop rbp ; pop r12 ; ret
0x0000000000471a3e : push rbx ; je 0x471aa2 ; pop rbp ; pop r12 ; ret
0x0000000000412e64 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044b30f : push rbx ; ret
0x00000000004a889c : push rbx ; xchg eax, edx ; jae 0x4a887b ; push rsi ; pop rdx ; je 0x4a8870 ; ret 0xacfc
0x000000000041ea72 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041adab : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b127 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x000000000044b7ab : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a7b25 : push rcx ; call qword ptr [rsi]
0x000000000045e6a6 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000043873d : push rcx ; jl 0x43878e ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004388a4 : push rcx ; jl 0x4388f5 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004791e1 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x00000000004791b3 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004610cb : push rcx ; pop rdx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004505d3 : push rcx ; ret
0x000000000041576b : push rcx ; ret 0xffff
0x00000000004198bd : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000494100 : push rcx ; xchg eax, ebp ; stc ; jmp rcx
0x000000000044483a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000435449 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b101d : push rdi ; add byte ptr [rax], al ; and byte ptr [rdi], bl ; cli ; call qword ptr [rdi]
0x0000000000478124 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004448ec : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045dd7f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042f248 : push rdi ; clc ; ret
0x000000000042f3c0 : push rdi ; cld ; ret
0x000000000042fee7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434d29 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046fdd5 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000434ca9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434afa : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000416534 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434b8a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004844fa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004882fa : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000484501 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000041aa76 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000444ad0 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000004236a5 : push rdi ; ret
0x000000000042d6de : push rdi ; ret 0xff3
0x00000000004191e0 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045dd83 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004300e7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f90a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fce7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004733ab : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b3f8 : push rdi ; xor eax, eax ; ret
0x00000000004ab871 : push rdx ; cmc ; call qword ptr [rbx]
0x000000000042483a : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000450add : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000494d4c : push rdx ; sub edx, edi ; jmp rdx
0x00000000004945a0 : push rsi ; adc bh, dl ; jmp rsi
0x000000000042c324 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446e29 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x446e80 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004356e1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435751 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000444285 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435671 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000444223 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042c339 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f372 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fae1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f715 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f8f5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fad5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f535 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a9440 : push rsi ; cli ; push 0x6e ; ja 0x4a93cf ; ret 0x48f
0x00000000004460d6 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000495867 : push rsi ; cmp eax, 0x3e00fffb ; sti ; jmp qword ptr [rcx]
0x0000000000494a98 : push rsi ; cmp edx, edi ; jmp rsi
0x00000000004460c6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000490fc6 : push rsi ; int1 ; clc ; push rbx ; ret
0x0000000000446096 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a88a0 : push rsi ; pop rdx ; je 0x4a886c ; ret 0xacfc
0x000000000044fac6 : push rsi ; ret
0x00000000004692c1 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000045e193 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040389c : push rsi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004460a6 : push rsi ; sub eax, edx ; ret
0x000000000042c34e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048265a : push rsp ; and al, 0x10 ; call rdx
0x000000000041cac8 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d025 : push rsp ; and al, 8 ; call 0x4192c5
0x0000000000495720 : push rsp ; cmp eax, 0x3d21fffb ; sti ; jmp qword ptr [rcx]
0x00000000004b2190 : push rsp ; imul eax, dword ptr [rax], 0xfb92fc00 ; jmp qword ptr [rax]
0x00000000004948d4 : push rsp ; or bh, dl ; call rsp
0x00000000004611c8 : push rsp ; pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000450ae4 : push rsp ; ret
0x00000000004890dc : push rsp ; ret 0x4808
0x0000000000494029 : push rsp ; stc ; jmp qword ptr [rax + 0x10fff955]
0x0000000000494c04 : push rsp ; xor al, 0xfa ; jmp rsp
0x000000000043d4d0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000046252e : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044b387 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b398 ; call r12
0x000000000045218a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000479d5f : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416c5b : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004b14a4 : pushfq ; jb 0x4b14a4 ; call qword ptr [rdx]
0x000000000043e1d0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3a4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000040fb70 : pushfq ; ret
0x000000000048c7e7 : pushfq ; ret 0xf45
0x00000000004b0069 : pushfq ; stc ; call qword ptr [rbx]
0x0000000000494359 : pushfq ; stc ; jmp qword ptr [rax]
0x00000000004941a0 : rcl byte ptr [rax - 0x6eaf0007], 1 ; stc ; call rax
0x000000000044d05b : rcl byte ptr [rcx + 0xf480004], 0x44 ; ret
0x00000000004941a8 : rcl byte ptr [rcx - 0x6daf0007], 1 ; stc ; call rax
0x00000000004941b0 : rcl byte ptr [rdx - 0x6caf0007], 1 ; stc ; jmp rax
0x000000000040389b : rcl byte ptr [rsi + 0x2b], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042394b : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004a889f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a886d ; ret 0xacfc
0x00000000004a889b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a8871 ; ret 0xacfc
0x00000000004af670 : rcr al, 1 ; clc ; call qword ptr [rax]
0x0000000000473193 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405e20 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000410651 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000465f8f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000484507 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000044fad2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041480c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ece6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048d418 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x00000000004106fa : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000410092 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a8cbd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004827b9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000446f64 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000446f56 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447c8a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041ed51 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040058b : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400596 ; ret
0x0000000000400416 : ret
0x00000000004006b7 : ret 0
0x000000000049f320 : ret 0x10
0x000000000047b64a : ret 0x101
0x00000000004844dc : ret 0x114d
0x0000000000457b34 : ret 0x1176
0x000000000047fbbc : ret 0x1272
0x0000000000480e20 : ret 0x12e8
0x000000000047c753 : ret 0x13e9
0x000000000048ac81 : ret 0x145
0x0000000000483986 : ret 0x1474
0x00000000004791e8 : ret 0x1475
0x0000000000475981 : ret 0x1477
0x0000000000446038 : ret 0x148
0x0000000000404814 : ret 0x149
0x0000000000438afc : ret 0x14d
0x000000000040ac5a : ret 0x154
0x000000000040a85a : ret 0x158
0x000000000046c211 : ret 0x1674
0x00000000004494ce : ret 0x16e9
0x000000000042722a : ret 0x17
0x000000000042b8d6 : ret 0x1776
0x000000000040ab02 : ret 0x18
0x0000000000438a39 : ret 0x180f
0x000000000042b465 : ret 0x1876
0x0000000000457b2b : ret 0x1a72
0x00000000004a921a : ret 0x1ad4
0x0000000000407cc2 : ret 0x1b
0x00000000004a79ad : ret 0x1b49
0x000000000048ed4f : ret 0x1be8
0x00000000004246fa : ret 0x1c6
0x000000000045cca9 : ret 0x1ce9
0x00000000004a0ff0 : ret 0x1d4
0x00000000004a1788 : ret 0x1d5
0x0000000000400c51 : ret 0x1d89
0x000000000040eba2 : ret 0x1f0f
0x000000000041ea76 : ret 0x1f77
0x0000000000459f1d : ret 0x1fe9
0x000000000045ab77 : ret 0x200
0x0000000000477d6b : ret 0x2041
0x0000000000449f8c : ret 0x2044
0x0000000000461c47 : ret 0x20be
0x000000000048abeb : ret 0x2148
0x00000000004138dd : ret 0x214c
0x0000000000412e6c : ret 0x2175
0x000000000048cccc : ret 0x22
0x00000000004923f2 : ret 0x2266
0x00000000004923fa : ret 0x2273
0x000000000047e958 : ret 0x2275
0x0000000000440da8 : ret 0x2288
0x000000000042480a : ret 0x22a
0x000000000042d842 : ret 0x2373
0x000000000049fff8 : ret 0x24
0x0000000000459ea8 : ret 0x25
0x000000000041601d : ret 0x2501
0x0000000000467314 : ret 0x2504
0x0000000000423723 : ret 0x2575
0x000000000048c681 : ret 0x25e9
0x000000000044c27c : ret 0x26
0x0000000000473886 : ret 0x2774
0x000000000042f016 : ret 0x280f
0x000000000042b455 : ret 0x2876
0x000000000045aa0a : ret 0x28e8
0x000000000047e9d7 : ret 0x28f5
0x000000000041dec4 : ret 0x29
0x000000000046346e : ret 0x290f
0x0000000000411627 : ret 0x2948
0x00000000004663aa : ret 0x2949
0x000000000040f0b0 : ret 0x294c
0x000000000041314d : ret 0x294d
0x000000000042255a : ret 0x298
0x0000000000420cae : ret 0x29b0
0x0000000000410561 : ret 0x2a
0x000000000041874a : ret 0x2a35
0x000000000041015a : ret 0x2aaa
0x000000000040fc45 : ret 0x2acb
0x000000000040e92a : ret 0x2ade
0x000000000047960a : ret 0x2b1
0x0000000000410a0a : ret 0x2b48
0x0000000000422e4b : ret 0x2b74
0x000000000041ed92 : ret 0x2b75
0x0000000000448102 : ret 0x2b77
0x00000000004010da : ret 0x2b79
0x00000000004009a5 : ret 0x2b8
0x000000000040311a : ret 0x2b86
0x000000000048c66f : ret 0x2be9
0x000000000041f5de : ret 0x2c75
0x000000000046f1a5 : ret 0x2e66
0x000000000044c1fe : ret 0x2f75
0x0000000000467ed5 : ret 0x30be
0x00000000004a04e8 : ret 0x33
0x0000000000452994 : ret 0x349
0x000000000048aa20 : ret 0x3575
0x000000000047b31a : ret 0x3774
0x000000000042b8b6 : ret 0x3776
0x00000000004a8afa : ret 0x3827
0x000000000047002e : ret 0x3873
0x000000000042b445 : ret 0x3876
0x0000000000416acb : ret 0x389
0x00000000004a7186 : ret 0x38ae
0x000000000048e332 : ret 0x38e8
0x00000000004895f8 : ret 0x3901
0x00000000004810dd : ret 0x3934
0x000000000046d7e8 : ret 0x3941
0x00000000004112b1 : ret 0x3948
0x000000000041206d : ret 0x3949
0x000000000041eebc : ret 0x394c
0x0000000000468e7d : ret 0x394d
0x00000000004466b2 : ret 0x3a01
0x000000000042d82b : ret 0x3a73
0x0000000000488143 : ret 0x3a83
0x000000000048116a : ret 0x3b34
0x00000000004470d1 : ret 0x3b48
0x0000000000449c6f : ret 0x3b8
0x00000000004140c9 : ret 0x3c75
0x000000000048109d : ret 0x3d
0x000000000047f348 : ret 0x3d73
0x0000000000420691 : ret 0x3d83
0x0000000000464b6d : ret 0x3de8
0x000000000041c9ef : ret 0x3de9
0x0000000000463497 : ret 0x3e8
0x000000000047b17a : ret 0x3e80
0x000000000045a32b : ret 0x4002
0x000000000040d28d : ret 0x4074
0x0000000000473e71 : ret 0x408d
0x0000000000462a84 : ret 0x40c
0x000000000044c44a : ret 0x4101
0x0000000000460518 : ret 0x4108
0x0000000000460cc5 : ret 0x4110
0x0000000000481117 : ret 0x4134
0x0000000000453147 : ret 0x415f
0x0000000000450bae : ret 0x41c3
0x0000000000454d15 : ret 0x41f
0x0000000000425eaa : ret 0x4266
0x0000000000470b03 : ret 0x4389
0x0000000000405df1 : ret 0x4401
0x000000000046872b : ret 0x4404
0x000000000041a3cb : ret 0x4466
0x000000000041dd63 : ret 0x4473
0x00000000004a7c84 : ret 0x474c
0x0000000000423ec6 : ret 0x4801
0x0000000000412266 : ret 0x4803
0x0000000000422731 : ret 0x4804
0x0000000000440d33 : ret 0x4808
0x0000000000402fc6 : ret 0x480a
0x000000000041c408 : ret 0x4810
0x00000000004588dc : ret 0x4811
0x000000000045dc17 : ret 0x481e
0x000000000045dc37 : ret 0x4820
0x000000000044e3ce : ret 0x4830
0x0000000000425db6 : ret 0x4840
0x00000000004409e8 : ret 0x48c3
0x0000000000418de3 : ret 0x48e9
0x00000000004a9446 : ret 0x48f
0x0000000000405d8c : ret 0x4901
0x00000000004555eb : ret 0x4902
0x0000000000419422 : ret 0x4908
0x000000000042a37c : ret 0x4910
0x000000000045a779 : ret 0x4c01
0x000000000041e70a : ret 0x4c07
0x000000000045d4d6 : ret 0x4c40
0x000000000041d3c6 : ret 0x4d01
0x000000000045bf98 : ret 0x4d10
0x00000000004026cf : ret 0x4de8
0x00000000004a8ea7 : ret 0x4e27
0x00000000004016fe : ret 0x4f76
0x000000000044ef4f : ret 0x5089
0x000000000044c067 : ret 0x508b
0x000000000042d814 : ret 0x5173
0x0000000000449ec7 : ret 0x5488
0x00000000004a710c : ret 0x5508
0x0000000000471bce : ret 0x5590
0x000000000042b896 : ret 0x5776
0x00000000004a93d8 : ret 0x5803
0x0000000000455651 : ret 0x5841
0x0000000000487ab5 : ret 0x5876
0x000000000040e6e3 : ret 0x589
0x00000000004a6de0 : ret 0x591c
0x00000000004a7b47 : ret 0x5ae4
0x00000000004243ee : ret 0x5ae9
0x0000000000455839 : ret 0x5be9
0x000000000040f3ea : ret 0x5d5b
0x00000000004a9872 : ret 0x62c1
0x000000000047c5c0 : ret 0x6349
0x00000000004852d4 : ret 0x637f
0x00000000004588b3 : ret 0x6411
0x000000000045b491 : ret 0x6601
0x000000000042b3d1 : ret 0x6620
0x0000000000423898 : ret 0x66c3
0x000000000047fbce : ret 0x674
0x000000000042b886 : ret 0x6776
0x00000000004a6dff : ret 0x67b2
0x0000000000417075 : ret 0x6874
0x000000000044957a : ret 0x6ae9
0x00000000004a9a01 : ret 0x6f9
0x00000000004171f1 : ret 0x7401
0x00000000004226fa : ret 0x7402
0x000000000047c62a : ret 0x7403
0x000000000044a5f1 : ret 0x7404
0x00000000004719a2 : ret 0x7408
0x000000000041297d : ret 0x7420
0x00000000004643c4 : ret 0x7450
0x0000000000480dda : ret 0x7472
0x0000000000444c19 : ret 0x7501
0x0000000000444c26 : ret 0x7502
0x0000000000444c33 : ret 0x7504
0x000000000041ea1d : ret 0x7508
0x0000000000444beb : ret 0x7510
0x0000000000444bf8 : ret 0x7520
0x000000000042471e : ret 0x7540
0x00000000004758e0 : ret 0x7577
0x000000000042c702 : ret 0x7677
0x0000000000482a72 : ret 0x777
0x0000000000484336 : ret 0x77f
0x000000000041aa3a : ret 0x78a
0x0000000000402e21 : ret 0x7ce9
0x000000000042b371 : ret 0x7e20
0x000000000042b7ec : ret 0x7e40
0x0000000000424a5c : ret 0x7f10
0x000000000046da00 : ret 0x7f3c
0x0000000000432fde : ret 0x80
0x0000000000425c39 : ret 0x8000
0x000000000048dff2 : ret 0x8001
0x0000000000476d27 : ret 0x8116
0x000000000045fceb : ret 0x8148
0x000000000048e548 : ret 0x8166
0x000000000041d0f0 : ret 0x820f
0x0000000000454e73 : ret 0x8301
0x000000000047d347 : ret 0x8303
0x000000000042c2d0 : ret 0x830f
0x000000000045dae4 : ret 0x8341
0x00000000004237d5 : ret 0x8348
0x0000000000446b30 : ret 0x8349
0x000000000047f1bf : ret 0x8364
0x00000000004712e6 : ret 0x840
0x0000000000475cd9 : ret 0x8401
0x0000000000412075 : ret 0x840f
0x0000000000453bc0 : ret 0x841
0x000000000048b29e : ret 0x8440
0x0000000000479d67 : ret 0x848b
0x000000000046ee49 : ret 0x8502
0x0000000000413202 : ret 0x850f
0x0000000000458213 : ret 0x8511
0x000000000044a922 : ret 0x8545
0x0000000000402ba2 : ret 0x8548
0x000000000042374a : ret 0x854d
0x000000000040d2ba : ret 0x855
0x0000000000405c61 : ret 0x8575
0x0000000000401432 : ret 0x860f
0x000000000041adaf : ret 0x870f
0x00000000004a671e : ret 0x871e
0x000000000046da07 : ret 0x875
0x000000000042b475 : ret 0x876
0x0000000000402ccc : ret 0x8801
0x0000000000451ebd : ret 0x8804
0x000000000045b4e2 : ret 0x8841
0x000000000047e2ae : ret 0x8844
0x00000000004024ba : ret 0x8901
0x000000000044cefe : ret 0x8902
0x00000000004124fa : ret 0x8908
0x000000000045dad6 : ret 0x8941
0x000000000041f67f : ret 0x8944
0x0000000000403e7f : ret 0x8948
0x000000000041372a : ret 0x8949
0x0000000000410d21 : ret 0x894c
0x00000000004834eb : ret 0x894e
0x000000000046dd99 : ret 0x89e8
0x000000000041765a : ret 0x8a
0x0000000000487ce0 : ret 0x8b
0x00000000004507e9 : ret 0x8b01
0x000000000046f49a : ret 0x8b04
0x0000000000475a73 : ret 0x8b05
0x000000000046f34b : ret 0x8b08
0x00000000004a8f4e : ret 0x8b36
0x000000000041d5d1 : ret 0x8b41
0x000000000046daa3 : ret 0x8b44
0x0000000000413b53 : ret 0x8b48
0x00000000004114d6 : ret 0x8b49
0x000000000048346e : ret 0x8b4a
0x000000000040d49d : ret 0x8b4c
0x0000000000464c2d : ret 0x8c0f
0x000000000045d531 : ret 0x8d04
0x000000000048c49f : ret 0x8d0f
0x000000000041cccc : ret 0x8d44
0x00000000004198c1 : ret 0x8d48
0x000000000046810c : ret 0x8d49
0x0000000000482817 : ret 0x8d4a
0x000000000041dde4 : ret 0x8d4c
0x000000000045daf2 : ret 0x8d89
0x000000000045298b : ret 0x8e0f
0x000000000045dd9a : ret 0x8f0f
0x00000000004401b5 : ret 0x90c3
0x0000000000423e69 : ret 0x90e9
0x0000000000477e2e : ret 0x9174
0x000000000048b0db : ret 0x9272
0x000000000041b0cd : ret 0x948
0x0000000000473448 : ret 0x94c
0x0000000000484d02 : ret 0x950f
0x0000000000448ed0 : ret 0x9572
0x00000000004a7d73 : ret 0x9576
0x00000000004606ef : ret 0x958b
0x000000000042268e : ret 0x976
0x000000000047d0f3 : ret 0x9be9
0x00000000004871c5 : ret 0x9eb
0x000000000049eb20 : ret 0xa
0x00000000004aeab6 : ret 0xa01
0x000000000044a618 : ret 0xa076
0x0000000000449444 : ret 0xa0e9
0x000000000048c55e : ret 0xa4e9
0x00000000004a7a63 : ret 0xa514
0x0000000000423cb5 : ret 0xa5e8
0x000000000048c65d : ret 0xa5e9
0x000000000044b5bd : ret 0xabe
0x000000000040fd56 : ret 0xac20
0x00000000004a7ee7 : ret 0xac65
0x00000000004661ee : ret 0xace8
0x00000000004a88a4 : ret 0xacfc
0x000000000045f52f : ret 0xae9
0x000000000042358a : ret 0xaeeb
0x00000000004ac0df : ret 0xb00e
0x000000000041193d : ret 0xb074
0x000000000041b12b : ret 0xb277
0x00000000004651fe : ret 0xb2c8
0x000000000045641b : ret 0xb2eb
0x0000000000449430 : ret 0xb4e9
0x000000000045db16 : ret 0xb589
0x0000000000489fd5 : ret 0xb5e8
0x0000000000402c85 : ret 0xb60f
0x0000000000400f44 : ret 0xb70f
0x0000000000469d75 : ret 0xb8
0x000000000046bb1c : ret 0xb848
0x000000000048e3b2 : ret 0xb8e8
0x00000000004a7dae : ret 0xb9b9
0x000000000046d355 : ret 0xb9e9
0x000000000046ef24 : ret 0xba41
0x0000000000422dc3 : ret 0xbae9
0x0000000000456552 : ret 0xbaeb
0x0000000000448a3a : ret 0xbb75
0x000000000048cb16 : ret 0xbc80
0x000000000045db02 : ret 0xbd89
0x0000000000480de5 : ret 0xbde8
0x0000000000480f22 : ret 0xbe0f
0x00000000004a7b04 : ret 0xbe57
0x0000000000402f3a : ret 0xbfd0
0x0000000000425af9 : ret 0xc000
0x00000000004031b6 : ret 0xc031
0x00000000004588fe : ret 0xc083
0x000000000042b230 : ret 0xc085
0x00000000004744a9 : ret 0xc148
0x000000000041b249 : ret 0xc183
0x0000000000404948 : ret 0xc189
0x000000000044a2b2 : ret 0xc221
0x000000000041f6bb : ret 0xc275
0x0000000000476886 : ret 0xc283
0x000000000042d6e4 : ret 0xc2b2
0x000000000044816e : ret 0xc35b
0x0000000000457ced : ret 0xc389
0x000000000041f6bd : ret 0xc3f3
0x00000000004a62a2 : ret 0xc4c3
0x00000000004a76b8 : ret 0xc4ff
0x000000000042b851 : ret 0xc540
0x0000000000457db6 : ret 0xc589
0x00000000004633cc : ret 0xc689
0x000000000047f19d : ret 0xc74
0x00000000004410f0 : ret 0xc748
0x0000000000468fc8 : ret 0xc789
0x0000000000480fb2 : ret 0xc829
0x0000000000461d93 : ret 0xc839
0x0000000000416abc : ret 0xc883
0x000000000047cd6a : ret 0xc8e8
0x00000000004607c7 : ret 0xc985
0x000000000046f433 : ret 0xc9eb
0x0000000000440d01 : ret 0xc9ff
0x00000000004008c1 : ret 0xca21
0x000000000047836f : ret 0xcbe9
0x00000000004a714a : ret 0xcca7
0x00000000004a922d : ret 0xcd11
0x0000000000405152 : ret 0xce80
0x000000000049ef20 : ret 0xd
0x0000000000420f3e : ret 0xd020
0x000000000040df26 : ret 0xd021
0x000000000044ba3f : ret 0xd029
0x000000000046424b : ret 0xd120
0x0000000000401264 : ret 0xd284
0x00000000004578aa : ret 0xd285
0x000000000048ea98 : ret 0xd2e8
0x0000000000479df6 : ret 0xd348
0x000000000044f8c7 : ret 0xd5e9
0x000000000048135f : ret 0xd75
0x000000000045ced6 : ret 0xd774
0x00000000004a8cc5 : ret 0xd8f
0x0000000000410043 : ret 0xdaf7
0x000000000045409a : ret 0xdb76
0x00000000004a8da6 : ret 0xdcd9
0x00000000004a7d22 : ret 0xde5d
0x00000000004a6ab1 : ret 0xde9e
0x00000000004259b9 : ret 0xe000
0x0000000000444ba9 : ret 0xe074
0x000000000044d650 : ret 0xe083
0x00000000004b52f4 : ret 0xe0a
0x000000000048c721 : ret 0xe1e9
0x000000000044d482 : ret 0xe1eb
0x000000000040db30 : ret 0xe281
0x0000000000400c85 : ret 0xe283
0x0000000000473158 : ret 0xe575
0x0000000000465850 : ret 0xe57f
0x00000000004661ca : ret 0xe583
0x0000000000448162 : ret 0xe680
0x00000000004668af : ret 0xe683
0x00000000004a8ec6 : ret 0xe71f
0x00000000004791ba : ret 0xe75
0x0000000000422e76 : ret 0xe775
0x0000000000465e83 : ret 0xe7e9
0x000000000042beb5 : ret 0xe883
0x0000000000478d36 : ret 0xe8c0
0x0000000000402f5a : ret 0xe901
0x0000000000402f9f : ret 0xe902
0x0000000000440d96 : ret 0xe908
0x000000000043d336 : ret 0xe910
0x000000000045e35d : ret 0xe920
0x00000000004a7227 : ret 0xe970
0x00000000004480fa : ret 0xea81
0x000000000040dbfd : ret 0xeab8
0x0000000000400c6d : ret 0xeac1
0x000000000047d9f6 : ret 0xeb01
0x000000000046f363 : ret 0xeb04
0x000000000042a3aa : ret 0xeb10
0x0000000000481182 : ret 0xeb34
0x000000000041145a : ret 0xec
0x00000000004a99d8 : ret 0xec2
0x000000000045ce60 : ret 0xed75
0x00000000004a967a : ret 0xef32
0x000000000048c2e8 : ret 0xef89
0x0000000000475ebf : ret 0xefeb
0x000000000042919e : ret 0xf
0x0000000000425879 : ret 0xf000
0x0000000000405635 : ret 0xf01
0x000000000041aa79 : ret 0xf02
0x000000000041ce59 : ret 0xf04
0x0000000000411bc3 : ret 0xf08
0x000000000041ad49 : ret 0xf0f
0x000000000040e42e : ret 0xf10
0x00000000004666cb : ret 0xf20
0x000000000041cfc3 : ret 0xf275
0x0000000000463786 : ret 0xf3f
0x0000000000466c53 : ret 0xf40
0x000000000046fddd : ret 0xf41
0x000000000048c79c : ret 0xf45
0x0000000000423a69 : ret 0xf475
0x0000000000451746 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000466c39 : ret 0xf50
0x0000000000489766 : ret 0xf608
0x0000000000475535 : ret 0xf631
0x0000000000425e36 : ret 0xf66
0x000000000047ae47 : ret 0xf675
0x000000000046fe9c : ret 0xf741
0x0000000000405882 : ret 0xf748
0x0000000000482a5c : ret 0xf749
0x0000000000425739 : ret 0xf800
0x00000000004a6990 : ret 0xf869
0x00000000004187f3 : ret 0xf8b
0x0000000000463781 : ret 0xf8c1
0x0000000000440616 : ret 0xf8c5
0x000000000047265a : ret 0xf8dd
0x00000000004484a4 : ret 0xf8e9
0x000000000048f59a : ret 0xf902
0x0000000000494850 : ret 0xfa02
0x0000000000494848 : ret 0xfa03
0x0000000000494640 : ret 0xfa0e
0x0000000000494b38 : ret 0xfa35
0x000000000041f3a2 : ret 0xfae9
0x0000000000450102 : ret 0xfb03
0x00000000004957c0 : ret 0xfb3d
0x000000000044a162 : ret 0xfb62
0x000000000041f98a : ret 0xfbe9
0x00000000004255f9 : ret 0xfc00
0x0000000000424511 : ret 0xfc3
0x0000000000490cfa : ret 0xfc98
0x000000000044ddda : ret 0xfddc
0x000000000044d8da : ret 0xfde1
0x00000000004254b9 : ret 0xfe00
0x0000000000400db5 : ret 0xfe83
0x0000000000425379 : ret 0xff00
0x0000000000434b51 : ret 0xff2
0x000000000044d5fb : ret 0xff25
0x000000000042c079 : ret 0xff2d
0x0000000000425dda : ret 0xff3
0x000000000046ae77 : ret 0xff31
0x000000000041c2da : ret 0xff3c
0x000000000041b9da : ret 0xff45
0x0000000000425239 : ret 0xff80
0x0000000000466451 : ret 0xff83
0x000000000045402c : ret 0xff85
0x000000000045d4c2 : ret 0xffa0
0x000000000042371a : ret 0xffa5
0x000000000040b0da : ret 0xffaf
0x000000000040adda : ret 0xffb2
0x0000000000410fd7 : ret 0xffb8
0x000000000040dc4a : ret 0xffc0
0x0000000000423428 : ret 0xffdf
0x000000000045abb0 : ret 0xffe0
0x000000000046d434 : ret 0xffe7
0x00000000004680e9 : ret 0xffe8
0x00000000004494e5 : ret 0xffe9
0x000000000040f111 : ret 0xffef
0x0000000000422e42 : ret 0xfff
0x000000000040da72 : ret 0xfff0
0x000000000046a860 : ret 0xfff1
0x0000000000485936 : ret 0xfff7
0x0000000000424d39 : ret 0xfff8
0x000000000041c8f8 : ret 0xfffa
0x0000000000404869 : ret 0xfffb
0x0000000000424bf9 : ret 0xfffc
0x0000000000418275 : ret 0xfffd
0x0000000000424ab9 : ret 0xfffe
0x000000000041576c : ret 0xffff
0x000000000042bac5 : ret 1
0x000000000042baeb : ret 2
0x000000000040fb4a : ret 3
0x0000000000409f38 : ret 4
0x0000000000438cbe : ret 5
0x000000000049e6c8 : ret 6
0x000000000042a93a : ret 7
0x0000000000409f98 : ret 8
0x000000000044565a : ret 9
0x000000000046f19d : retf 0x9066 ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f170
0x000000000048dd33 : retf ; mov rsi, qword ptr [r14] ; call r12
0x0000000000494510 : rol al, 0xf9 ; call qword ptr [rax - 0x1f00063d]
0x0000000000446775 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000448263 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e16c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042b3ce : rol bl, 0x83 ; ret 0x6620
0x00000000004746ab : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004183d7 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042bb9d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000044711d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000425db2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042b8bb : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000473882 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a29c0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000479d61 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042c60d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044cf0b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d19e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040fb69 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042b612 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004827bb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000418848 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000453141 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000474912 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004480f1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046669f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000044711e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000046d352 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000495000 : rol byte ptr [rcx - 0x7c8f0006], 1 ; cli ; call qword ptr [rax]
0x00000000004748f2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000044e8a6 : rol byte ptr [rcx], 0x50 ; call rbx
0x00000000004593fb : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000448487 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x00000000004484a0 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000042390b : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044e0f1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000474952 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000474902 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000474942 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004944dc : rol ch, 0xf9 ; call qword ptr [rax]
0x000000000042b93f : rol ch, 1 ; std ; xlatb ; ret
0x00000000004735f6 : rol ch, cl ; std ; xlatb ; ret
0x0000000000440caf : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a62a0 : rol cl, 0xc2 ; ret
0x000000000047489c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000042b3f4 : rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000042b933 : rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x0000000000440783 : rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000400929 : rol dword ptr [rcx], -0x73 ; call r11
0x0000000000478019 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000004568ef : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004549aa : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c075 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000422e0c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000422e0b : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000494530 : ror ah, 0xf9 ; call qword ptr [rax]
0x0000000000494524 : ror al, 1 ; stc ; jmp qword ptr [rax]
0x00000000004722a5 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048aa08 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042b442 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42b489 ; add rax, rdi ; ret
0x0000000000440b47 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004745bc : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000041118e : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000047598c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x4759bf ; ret
0x000000000044bde8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041dc93 : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000482c71 : ror byte ptr [rax + 0x39], cl ; call 0x490abe8e
0x000000000047c8ea : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000470033 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044d5ad : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e816 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045f52b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045aad9 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045aaca : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042b4ec : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042b412 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042b903 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x00000000004059d3 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000440b44 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049edc8 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042bb95 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000048328c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x000000000046644a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000042b402 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042b432 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042b422 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000422e3e : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004799ea : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x00000000004113d0 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048aa1d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045a2e4 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000413b50 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000481f8a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040db2d : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041f48d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000414831 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x414847 ; ret
0x0000000000484cfc : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004165b5 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004758a3 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000004157d1 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041dddd : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb25fc
0x000000000041ef1d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb373c
0x000000000041fcd7 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb44f6
0x00000000004217da : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb5ff9
0x0000000000421cdf : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb64fe
0x000000000042221b : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb6a3a
0x000000000040ebb0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000454fe5 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004895f5 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046f072 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x0000000000473f8c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000494f10 : ror byte ptr [rbx], 1 ; cli ; call qword ptr [rax]
0x00000000004846f4 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048c0e7 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000004722a6 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045bfe6 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000468138 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000044f8bf : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000046974e : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x000000000046fe94 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x46fe67
0x0000000000493f8c : ror byte ptr [rcx], 0xf9 ; call qword ptr [rax]
0x000000000044bcdc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000477fc1 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045eb2c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041017d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475ad9 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f901 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004027a6 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000466c4b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000450847 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x000000000044107a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004227df : ror byte ptr [rdi], 0x85 ; ret
0x000000000044c93f : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047dad2 : ror byte ptr [rdi], 0x85 ; ret 2
0x00000000004677e9 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000044ba3c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047f5a9 : ror byte ptr [rdi], 0x94 ; ret
0x000000000048109a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046d9fd : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000484cff : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000446bee : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004106ab : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000410040 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046ce0a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000422e3b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000447065 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040db42 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40db2c ; ret
0x000000000046377e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000495020 : ror byte ptr [rsi - 0x6f8f0006], 1 ; cli ; call qword ptr [rax]
0x0000000000494198 : ror byte ptr [rsi - 0x702f0007], 1 ; stc ; call rax
0x00000000004852fe : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x0000000000446bf8 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x000000000048abe4 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046f626 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000423587 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000479df3 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000465e80 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000485911 : ror dword ptr [rax - 0x77], cl ; ret
0x00000000004164cd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x4164c7 ; ret
0x0000000000470a3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x470a37 ; ret
0x000000000045dc34 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000483f5d : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x000000000046583b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000444ba7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000042ce78 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d584 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d356 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042d2d6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042d614 : ror dword ptr [rdi], -0x7b ; je 0x42d624 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d10b : ror dword ptr [rdi], -0x7b ; jno 0x42d120 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d1d3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ce50 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004164cc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x4164c8 ; ret
0x0000000000470a3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x470a38 ; ret
0x000000000043f73e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a7185 : sahf ; ret 0x38ae
0x0000000000483851 : sahf ; ret 0x3948
0x000000000045bfec : sahf ; ret 0x894c
0x000000000048c7d4 : sahf ; ret 0xf45
0x000000000041884e : sal bh, 0xd8 ; ret
0x0000000000495140 : sal bh, 1 ; cli ; push rax ; idiv edx ; call qword ptr [rax]
0x0000000000425c37 : sal bh, 1 ; ret 0x8000
0x0000000000425af7 : sal bh, 1 ; ret 0xc000
0x00000000004259b7 : sal bh, 1 ; ret 0xe000
0x0000000000425877 : sal bh, 1 ; ret 0xf000
0x0000000000425737 : sal bh, 1 ; ret 0xf800
0x00000000004255f7 : sal bh, 1 ; ret 0xfc00
0x00000000004254b7 : sal bh, 1 ; ret 0xfe00
0x0000000000425377 : sal bh, 1 ; ret 0xff00
0x0000000000425237 : sal bh, 1 ; ret 0xff80
0x00000000004250f7 : sal bh, 1 ; ret 0xffc0
0x0000000000424fb7 : sal bh, 1 ; ret 0xffe0
0x0000000000424e77 : sal bh, 1 ; ret 0xfff0
0x0000000000424d37 : sal bh, 1 ; ret 0xfff8
0x0000000000424bf7 : sal bh, 1 ; ret 0xfffc
0x0000000000424ab7 : sal bh, 1 ; ret 0xfffe
0x0000000000400bba : sal bh, cl ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000493eac : sal bl, 0xf8 ; call qword ptr [rax]
0x0000000000495108 : sal bl, 0xfa ; jmp rax
0x000000000047469f : sal bl, 1 ; ret
0x000000000047f44d : sal bl, cl ; ret
0x000000000040da6d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x0000000000489761 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x0000000000494fe0 : sal byte ptr [rax - 6], 1 ; call rax
0x0000000000473b42 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x000000000048264e : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000405e1b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f583 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000048f568 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000414834 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044be11 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000004173ed : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000004468e0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004164d0 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000425f5b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040db47 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042b93d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480f08 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042b935 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000044078d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000440785 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000004743fb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000041880c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044cef6 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x00000000004871bc : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x4871da
0x0000000000440a8c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044e8a2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044bde6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000040eaac : sal byte ptr [rdx + 0x3948006b], 1 ; ret
0x000000000047384b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044c71b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000494fe8 : sal byte ptr [rdx + rdi*8 - 1], 1 ; sal byte ptr [rsi - 6], 1 ; call rax
0x0000000000440da3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000494fe4 : sal byte ptr [rdx - 6], 1 ; call rax
0x0000000000494fec : sal byte ptr [rsi - 6], 1 ; call rax
0x00000000004850c1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047fa09 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004897ba : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x00000000004950b4 : sal cl, 0xfa ; call rax
0x00000000004950b8 : sal cl, 1 ; cli ; jmp rax
0x0000000000495110 : sal dh, 1 ; cli ; jmp rax
0x00000000004950e8 : sal dl, 0xfa ; jmp rax
0x0000000000446fc3 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480f0d : sal edi, -0x28 ; ret
0x00000000004ae1ed : sal esi, cl ; call qword ptr [rax]
0x0000000000444be6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000423872 : salc ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000042d906 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000490051 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000446d2a : salc ; clc ; ret
0x000000000047e754 : salc ; cmp rcx, rsi ; jne 0x47e737 ; ret
0x0000000000405dfe : salc ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000484c79 : salc ; nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000047e759 : salc ; ret
0x0000000000495164 : sar al, 1 ; cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000403070 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000449583 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047fd93 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000484650 : sar bh, 0xff ; mov eax, 1 ; ret
0x00000000004027a2 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047bcd1 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x0000000000494ff0 : sar byte ptr [rax - 6], 1 ; call rax
0x0000000000446b9e : sar byte ptr [rcx], 0xc8 ; jle 0x446be0 ; movsxd rax, ecx ; ret
0x000000000044d47d : sar byte ptr [rcx], cl ; ret
0x0000000000494ff8 : sar byte ptr [rdx + rdi*8 - 1], 1 ; push rax ; pop rdi ; cli ; call rax
0x0000000000494224 : sar byte ptr [rdx - 0x432f0007], 1 ; stc ; call rax
0x0000000000494ff4 : sar byte ptr [rdx - 6], 1 ; call rax
0x00000000004588f6 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a7b1f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000049422c : sar byte ptr [rsi - 0x4e9f0007], 1 ; stc ; jmp qword ptr [rax]
0x0000000000494f80 : sar byte ptr [rsi], 1 ; cli ; jmp rax
0x0000000000494511 : sar cl, 0xff ; nop ; ret
0x00000000004944fd : sar cl, 1 ; call qword ptr [rax - 0x1f00062f]
0x0000000000495184 : sar cl, 1 ; cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x000000000046323d : sar cl, cl ; dec dword ptr [rax + 0x29] ; ret
0x0000000000438503 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43850e ; ret
0x00000000004474d9 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000471c9c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004886ce : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000494501 : sar ecx, 1 ; jmp rax
0x00000000004a7883 : sar ecx, 1 ; jnp 0x4a7844 ; ret
0x0000000000415767 : sar edx, 2 ; call 0x4119c5
0x0000000000471da2 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042bb97 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000447993 : sar esi, 1 ; jg 0x4479c3 ; vzeroupper ; ret
0x0000000000447b2c : sar esi, 1 ; jg 0x447b5c ; vzeroupper ; ret
0x0000000000471c9b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004886cd : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415766 : sar rdx, 2 ; call 0x4119c6
0x0000000000415765 : sar rdx, 2 ; call 0x4119c7
0x0000000000471da1 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042bb96 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000463435 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004668ad : sbb al, 0x29 ; ret 0xe683
0x00000000004677e7 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a3e84 : sbb al, 0xb5 ; cld ; jmp qword ptr [rax]
0x0000000000494f3d : sbb al, 0xfa ; call qword ptr [rax + 0x10fffa1d]
0x000000000040e092 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000463f16 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406f43 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000004699bb : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b0d8 : sbb al, ch ; ret 0xffaf
0x0000000000493f85 : sbb bh, cl ; jmp rax
0x0000000000494ef9 : sbb bh, dl ; call qword ptr [rax + 0x10fffa1b]
0x0000000000494f39 : sbb bh, dl ; call qword ptr [rax]
0x00000000004a6605 : sbb bl, byte ptr [rsi] ; ret
0x0000000000481c74 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000485bd4 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000484cf9 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047e2b1 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x00000000004191e1 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045dd84 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000481c75 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000004692c2 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048ddda : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000482657 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041f43d : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000004742d0 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047fa2c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416531 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041a18b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004858df : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004199a3 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485bd5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040a58a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000048a855 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041fa58 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044d25c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000411907 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004183c7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000494354 : sbb byte ptr [rbx - 0x632f0007], 0xf9 ; jmp qword ptr [rax]
0x0000000000471aba : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004198be : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000471fce : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004900cf : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x490152 ; ret 0x8b48
0x00000000004543a8 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040dc40 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041f48b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000484cfa : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004870bb : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b4188 : sbb ch, cl ; cld ; jmp qword ptr [rsi]
0x000000000041dc8d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000457b2d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043de8d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fada : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f2fa : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f6ea : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef0a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e9ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e1cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043d9ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043f0a9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e50d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dced : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d4cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e6ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043f59a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043edba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043feca : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d80d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d943 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e643 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e163 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f49b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fdcb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e983 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dc83 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d7a3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e4a3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f5eb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ee0b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048e105 : sbb dh, bl ; ret
0x0000000000494ef5 : sbb dl, bh ; call qword ptr [rax]
0x0000000000480917 : sbb dl, dh ; jmp r11
0x00000000004886ab : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048dff9 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000461271 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a8ebd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004465b7 : sbb eax, -1 ; ret
0x000000000048d152 : sbb eax, 0x18c48348 ; ret
0x0000000000494f01 : sbb eax, 0x1e90fffa ; cli ; call qword ptr [rax]
0x0000000000490190 : sbb eax, 0x22bb5b ; jne 0x490180 ; pop rbx ; ret
0x0000000000487856 : sbb eax, 0x2317 ; jne 0x487867 ; pop rbx ; ret
0x000000000045e794 : sbb eax, 0x39480001 ; ret
0x0000000000462366 : sbb eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045dc12 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000407cba : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x00000000004827ba : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042bff7 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048dcdf : sbb eax, eax ; ret
0x00000000004465b5 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000424571 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x0000000000455833 : sbb ebx, eax ; cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000472a69 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x0000000000450ade : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000403f1d : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000493f81 : sbb ecx, edi ; jmp qword ptr [rax - 0x1f0006e6]
0x0000000000493f89 : sbb edi, ecx ; inc eax ; or ecx, edi ; call qword ptr [rax]
0x0000000000494efd : sbb edi, edx ; call qword ptr [rax]
0x0000000000494f35 : sbb edx, edi ; call qword ptr [rax + 0x10fffa1a]
0x000000000042b092 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fb2e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000004853c6 : scasb al, byte ptr [rdi] ; insd dword ptr [rdi], dx ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000043fc2d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3af9 : scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000004a3af5 : scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; call rax
0x00000000004a3ae5 : scasd eax, dword ptr [rdi] ; cld ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; jmp rax
0x00000000004a3ae9 : scasd eax, dword ptr [rdi] ; cld ; jmp rax
0x00000000004b1b21 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b1b09 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b1b35 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000041481e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e449 : scasd eax, dword ptr [rdi] ; ret
0x000000000045b02e : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000411626 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004198b9 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004484a3 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000044bdec : setae al ; ret
0x000000000045ad5a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041884c : setne al ; neg eax ; ret
0x000000000044d480 : setne dl ; jmp 0x44d468
0x000000000042b8db : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000494fc0 : shl byte ptr [rax - 6], 1 ; call rax
0x000000000042b89b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000004b5bfc : shl byte ptr [rbx - 0x66c00000], 0xfd ; call qword ptr [rdx]
0x0000000000493fa8 : shl byte ptr [rdi], 1 ; stc ; push rax ; sub cl, bh ; call qword ptr [rax]
0x0000000000494fc8 : shl byte ptr [rdx + rdi*8 - 1], 1 ; shl byte ptr [rsi - 6], 1 ; call rax
0x0000000000494fc4 : shl byte ptr [rdx - 6], 1 ; call rax
0x00000000004467ff : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000444ba3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000440355 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042d80b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d822 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004733e6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004733f7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042d701 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494fcc : shl byte ptr [rsi - 6], 1 ; call rax
0x0000000000448fc4 : shl byte ptr [rsi], cl ; add byte ptr [rax + 0x39], cl ; ret
0x000000000049fff0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000047405b : shl dword ptr [rcx], 0x24 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000400b08 : shl dword ptr [rdi + 0x5d01002b], cl ; ret
0x00000000004a7a08 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000042d786 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044665b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x00000000004733e2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d83d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d826 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d80f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c2cb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d7a1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b22c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042d661 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044e111 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044e10d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482e8c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482e17 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482de6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004871c0 : shl edx, 5 ; add rdx, rax ; jmp 0x4871d6
0x0000000000482e8b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482e16 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482de5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004871bf : shl rdx, 5 ; add rdx, rax ; jmp 0x4871d7
0x00000000004236a3 : shr al, 0x57 ; ret
0x0000000000494fd0 : shr byte ptr [rax - 6], 1 ; call rax
0x0000000000425f5f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000042450a : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004578d8 : shr byte ptr [rcx], cl ; ret
0x000000000042bb9b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000494fd8 : shr byte ptr [rdx + rdi*8 - 1], 1 ; shr byte ptr [rsi - 6], 1 ; call rax
0x0000000000494fd4 : shr byte ptr [rdx - 6], 1 ; call rax
0x0000000000494e68 : shr byte ptr [rip + 0x2d50fffa], 1 ; cli ; call rax
0x0000000000494fdc : shr byte ptr [rsi - 6], 1 ; call rax
0x000000000048cc32 : shr cl, 1 ; ret 0xfffe
0x000000000046827c : shr cl, cl ; jrcxz 0x468288 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c73f : shr cl, cl ; ret
0x000000000044817a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000004744ab : shr eax, 2 ; ret
0x00000000004749b3 : shr eax, 2 ; vzeroupper ; ret
0x00000000004481c5 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041ed4e : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000482f9c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482f21 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482ef0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000482f9b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482f20 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482eef : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004744aa : shr rax, 2 ; ret
0x00000000004749b2 : shr rax, 2 ; vzeroupper ; ret
0x000000000049f1c9 : sldt word ptr [rax] ; ret
0x0000000000473ce6 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004944fe : stc ; call qword ptr [rax - 0x1f00062f]
0x0000000000494512 : stc ; call qword ptr [rax - 0x1f00063d]
0x0000000000494386 : stc ; call qword ptr [rax - 0x1f000654]
0x0000000000494332 : stc ; call qword ptr [rax - 0x1f00065b]
0x0000000000493fbe : stc ; call qword ptr [rax - 0x4f0006d2]
0x00000000004943da : stc ; call qword ptr [rax]
0x00000000004afa6a : stc ; call qword ptr [rbx]
0x00000000004b049a : stc ; call qword ptr [rcx]
0x00000000004af9de : stc ; call qword ptr [rdx]
0x0000000000494136 : stc ; call qword ptr [rsi]
0x0000000000493fa6 : stc ; call rax
0x00000000004b0246 : stc ; call rsi
0x00000000004af966 : stc ; call rsp
0x0000000000495189 : stc ; cli ; call qword ptr [rax]
0x0000000000495181 : stc ; cli ; call rax
0x0000000000495185 : stc ; cli ; push rax ; stc ; cli ; call qword ptr [rax]
0x000000000046323e : stc ; dec dword ptr [rax + 0x29] ; ret
0x00000000004689f5 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000049442a : stc ; inc dword ptr [rax + 0x10fff9e6] ; fyl2xp1 ; call rax
0x00000000004942ae : stc ; inc dword ptr [rax + 0x40fff9b0] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x000000000049420e : stc ; inc dword ptr [rax + 0x40fff9b1] ; mov bl, 0xf9 ; jmp qword ptr [rax]
0x000000000049444a : stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x0000000000494446 : stc ; inc dword ptr [rax - 0x1c] ; stc ; inc dword ptr [rax - 0x1a] ; stc ; call rax
0x000000000049439a : stc ; inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x000000000049433e : stc ; inc dword ptr [rax - 0x2f000657] ; stosb byte ptr [rdi], al ; stc ; jmp qword ptr [rax]
0x0000000000494352 : stc ; inc dword ptr [rax - 0x2f000665] ; pushfq ; stc ; jmp qword ptr [rax]
0x00000000004944fa : stc ; inc dword ptr [rax - 0x30] ; stc ; call qword ptr [rax - 0x1f00062f]
0x000000000049429a : stc ; inc dword ptr [rax - 0x4a] ; stc ; jmp qword ptr [rax]
0x00000000004941f6 : stc ; inc dword ptr [rax - 0x4b] ; stc ; jmp qword ptr [rax]
0x0000000000494212 : stc ; inc dword ptr [rax - 0x4d] ; stc ; jmp qword ptr [rax]
0x00000000004942b2 : stc ; inc dword ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x00000000004942ce : stc ; inc dword ptr [rax - 0x50] ; stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; call rax
0x0000000000494382 : stc ; inc dword ptr [rax - 0x55] ; stc ; call qword ptr [rax - 0x1f000654]
0x000000000049432e : stc ; inc dword ptr [rax - 0x5c] ; stc ; call qword ptr [rax - 0x1f00065b]
0x0000000000494426 : stc ; inc dword ptr [rax - 0x7f00061c] ; out 0xf9, al ; call qword ptr [rax]
0x00000000004944a6 : stc ; inc dword ptr [rax - 0x7f00061d] ; in eax, 0xf9 ; call qword ptr [rax]
0x0000000000494076 : stc ; inc dword ptr [rax] ; insb byte ptr [rdi], dx ; stc ; push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x000000000049421a : stc ; inc dword ptr [rax] ; mov bh, 0xf9 ; jmp rax
0x0000000000494236 : stc ; inc dword ptr [rax] ; mov ch, 0xf9 ; jmp rax
0x00000000004942ba : stc ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004942d2 : stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; call rax
0x0000000000494012 : stc ; inc dword ptr [rax] ; stc ; push qword ptr [rax + 0x4e] ; stc ; jmp rax
0x0000000000493f8a : stc ; inc eax ; or ecx, edi ; call qword ptr [rax]
0x000000000049450e : stc ; inc eax ; sar cl, 0xff ; nop ; ret
0x000000000043ebe2 : stc ; je 0x43ebae ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000049402a : stc ; jmp qword ptr [rax + 0x10fff955]
0x0000000000493f82 : stc ; jmp qword ptr [rax - 0x1f0006e6]
0x0000000000493f72 : stc ; jmp qword ptr [rax - 0x1f0006eb]
0x0000000000493f62 : stc ; jmp qword ptr [rax - 0x1f0006f0]
0x0000000000493f52 : stc ; jmp qword ptr [rax - 0x1f0006f5]
0x0000000000493f5a : stc ; jmp qword ptr [rax]
0x00000000004940ce : stc ; jmp qword ptr [rbp + 0x51fff98d]
0x00000000004af7b2 : stc ; jmp qword ptr [rbx]
0x00000000004940e2 : stc ; jmp qword ptr [rcx + 0x21fff991]
0x00000000004940ea : stc ; jmp qword ptr [rcx + 0x21fff992]
0x00000000004940d6 : stc ; jmp qword ptr [rcx]
0x00000000004b079e : stc ; jmp qword ptr [rdx]
0x0000000000493f76 : stc ; jmp rax
0x00000000004afa2e : stc ; jmp rbx
0x000000000049409e : stc ; jmp rcx
0x00000000004a7884 : stc ; jnp 0x4a7843 ; ret
0x0000000000494a4e : stc ; lcall ptr [rsi + 0x33] ; cli ; jmp rax
0x0000000000494096 : stc ; ljmp ptr [rsi - 0x4f000671] ; nop ; stc ; jmp rcx
0x00000000004300e8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000494016 : stc ; push qword ptr [rax + 0x4e] ; stc ; jmp rax
0x000000000049434e : stc ; push qword ptr [rax - 0x7f000668] ; wait ; stc ; call rax
0x0000000000494a4a : stc ; push qword ptr [rax] ; cld ; stc ; lcall ptr [rsi + 0x33] ; cli ; jmp rax
0x0000000000494476 : stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000049406a : stc ; push qword ptr [rax] ; imul edi, ecx, 0xf96a20ff ; call qword ptr [rax]
0x00000000004944ca : stc ; push qword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x00000000004944c6 : stc ; push qword ptr [rax] ; jrcxz 0x4944cd ; push qword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x00000000004941da : stc ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x000000000049424e : stc ; push qword ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000494026 : stc ; push qword ptr [rax] ; push rsp ; stc ; jmp qword ptr [rax + 0x10fff955]
0x00000000004941c6 : stc ; push qword ptr [rax] ; xchg eax, esi ; stc ; call rax
0x00000000004940ba : stc ; push qword ptr [rdx] ; nop ; stc ; call rax
0x00000000004943fa : stc ; push rax ; fdivp st(1) ; call rax
0x000000000049407a : stc ; push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x00000000004943de : stc ; push rax ; loopne 0x4943e1 ; jmp rax
0x0000000000494252 : stc ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000493faa : stc ; push rax ; sub cl, bh ; call qword ptr [rax]
0x0000000000446d29 : stc ; salc ; clc ; ret
0x0000000000438a04 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042c077 : stc ; xlatb ; ret 0xff2d
0x00000000004b587a : std ; call qword ptr [rbx]
0x00000000004b530a : std ; call qword ptr [rdx]
0x00000000004a4e46 : std ; call rax
0x00000000004b19e2 : std ; call rdx
0x00000000004763aa : std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000473d08 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044a2fe : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469a02 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a4e5e : std ; dec dword ptr [rax] ; ja 0x4a4e65 ; jmp rax
0x00000000004240a2 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004a4e9e : std ; dec eax ; jne 0x4a4ea5 ; call rax
0x00000000004a4f42 : std ; inc dword ptr [rbp + 0x38fffd87] ; jle 0x4a4f51 ; jmp qword ptr [rax]
0x000000000048264b : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000481afe : std ; jbe 0x481b0c ; ret
0x00000000004a4f4a : std ; jmp qword ptr [rax]
0x00000000004a4e42 : std ; jmp qword ptr [rbx - 0x2f00027a]
0x00000000004b5052 : std ; jmp qword ptr [rcx]
0x00000000004b14ea : std ; jmp qword ptr [rdi]
0x00000000004b0c0a : std ; jmp qword ptr [rdx]
0x000000000044c8c7 : std ; jmp qword ptr [rsi]
0x00000000004a4e62 : std ; jmp rax
0x00000000004b4982 : std ; jmp rdx
0x00000000004b5086 : std ; jmp rsp
0x000000000042f90b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000044b30e : std ; push rbx ; ret
0x0000000000446f63 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000042b941 : std ; xlatb ; ret
0x000000000042b939 : std ; xlatb ; ret 0xc085
0x000000000042beb3 : std ; xlatb ; ret 0xe883
0x00000000004735f4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000421c31 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000411703 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000495fa6 : sti ; call qword ptr [rax]
0x0000000000496556 : sti ; call qword ptr [rdi]
0x000000000049654e : sti ; call qword ptr [rdx]
0x00000000004956a6 : sti ; call qword ptr [rsi]
0x000000000049520e : sti ; call rax
0x000000000049528a : sti ; call rbp
0x00000000004957f2 : sti ; call rdi
0x00000000004965ca : sti ; dec dword ptr [rax + rsi*2] ; sti ; jmp qword ptr [rax]
0x000000000044911f : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000049524e : sti ; dec dword ptr [rsi] ; xor bl, bh ; jmp qword ptr [rbx]
0x00000000004965c6 : sti ; dec edi ; outsd dx, dword ptr [rsi] ; sti ; dec dword ptr [rax + rsi*2] ; sti ; jmp qword ptr [rax]
0x00000000004b0a01 : sti ; hlt ; jmp qword ptr [rbx]
0x000000000049586a : sti ; inc dword ptr [rax] ; sti ; jmp qword ptr [rcx]
0x0000000000495896 : sti ; inc dword ptr [rbp + rdi - 5] ; jmp qword ptr [rcx]
0x00000000004957ee : sti ; inc dword ptr [rdx + 0x3e] ; sti ; call rdi
0x0000000000495fce : sti ; jmp qword ptr [rax]
0x0000000000495252 : sti ; jmp qword ptr [rbx]
0x00000000004956b2 : sti ; jmp qword ptr [rcx]
0x0000000000495712 : sti ; jmp qword ptr [rdi + 0x68fffb3e]
0x0000000000490660 : sti ; jmp qword ptr [rsi + 0xf]
0x0000000000495292 : sti ; jmp rbx
0x00000000004956fe : sti ; jmp rdx
0x000000000049651e : sti ; jmp rsi
0x000000000049573e : sti ; jmp rsp
0x0000000000496552 : sti ; lcall ptr [rsi + 0x72] ; sti ; call qword ptr [rdi]
0x000000000049651a : sti ; lcall ptr [rsi] ; jae 0x49651f ; jmp rsi
0x00000000004956a2 : sti ; lcall ptr [rsi] ; sti ; call qword ptr [rsi]
0x0000000000495716 : sti ; ljmp ptr [rax + 0x3d] ; sti ; jmp qword ptr [rcx]
0x000000000049654a : sti ; ljmp ptr [rax + 0x70] ; sti ; call qword ptr [rdx]
0x000000000049569e : sti ; ljmp ptr [rbx] ; sti ; lcall ptr [rsi] ; sti ; call qword ptr [rsi]
0x00000000004957ea : sti ; ljmp ptr [rdi + 0x3e] ; sti ; inc dword ptr [rdx + 0x3e] ; sti ; call rdi
0x000000000042fce8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000495fc6 : sti ; push qword ptr [rax + rbp*2 + 0x68b4fffb] ; sti ; jmp qword ptr [rax]
0x0000000000495fd2 : sti ; push qword ptr [rax + rbp*2 + 0x69f8fffb] ; sti ; call rax
0x00000000004956f2 : sti ; push qword ptr [rdi + 0x3d21fffb] ; sti ; jmp qword ptr [rcx]
0x00000000004956ee : sti ; push qword ptr [rdi + 0x3d34fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000495902 : sti ; push qword ptr [rdi + 0x3d44fffb] ; sti ; jmp qword ptr [rcx]
0x000000000049578a : sti ; push qword ptr [rdx + 0x3d] ; sti ; jmp qword ptr [rcx]
0x0000000000495866 : sti ; push rsi ; cmp eax, 0x3e00fffb ; sti ; jmp qword ptr [rcx]
0x00000000004a7a0a : sti ; ret
0x00000000004b2ca1 : sti ; sti ; jmp qword ptr [rbx]
0x000000000045a5c7 : sti ; test rax, rax ; je 0x45a5d5 ; call rax
0x000000000046c73e : stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a7ee4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000447c8b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000494345 : stosb byte ptr [rdi], al ; stc ; jmp qword ptr [rax]
0x000000000046c6ef : stosd dword ptr [rdi], eax ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000424421 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004686be : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000041ed53 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a8fec : stosd dword ptr [rdi], eax ; ret
0x0000000000494385 : stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax - 0x1f000654]
0x00000000004246d1 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041ed52 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a93d1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000481df6 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000447ec2 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000042ce53 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000494e75 : sub al, 0xfa ; call rax
0x0000000000494df5 : sub al, 0xfa ; jmp rsp
0x00000000004187d0 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412915 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000418766 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a35a5], 1 ; ret
0x00000000004186d5 : sub al, byte ptr [rax] ; ret
0x00000000004244ca : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x0000000000424812 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000419723 : sub al, byte ptr es:[rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042c215 : sub al, ch ; std ; xlatb ; ret
0x000000000045ab8a : sub bh, bh ; and eax, 0xf3087400 ; ret
0x0000000000494cc5 : sub bh, dl ; call qword ptr [rax]
0x0000000000494ec5 : sub bh, dl ; jmp qword ptr [rax + 0x10fffa29]
0x0000000000494d45 : sub bh, dl ; jmp rdx
0x000000000046369b : sub bl, cl ; in eax, 0xdf ; loopne 0x463630 ; ret
0x00000000004772cc : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004772cb : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000483983 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x00000000004af464 : sub byte ptr [rax + rax], bh ; add byte ptr [rax], ch ; ret 0xfff7
0x0000000000495074 : sub byte ptr [rax - 0x562f0006], 0xfa ; jmp qword ptr [rax]
0x0000000000422904 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c23c : sub byte ptr [rax - 0x77], cl ; ret
0x000000000046fa84 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000404a63 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000048431d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484365 ; leave ; ret
0x0000000000448c84 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000488153 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000488152 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004b4964 : sub byte ptr [rcx + 0x4d80000], dl ; std ; jmp qword ptr [rdx]
0x0000000000494340 : sub byte ptr [rcx - 0x552f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000044c08c : sub byte ptr [rcx], al ; ret
0x0000000000421726 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042462a : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x000000000042466b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004afa64 : sub byte ptr [rdx], al ; add byte ptr [rax - 0x7d], ch ; stc ; call qword ptr [rbx]
0x0000000000493fad : sub cl, bh ; call qword ptr [rax]
0x00000000004680e6 : sub cl, bpl ; ret 0xffe8
0x000000000040ebad : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004680e7 : sub cl, ch ; ret 0xffe8
0x000000000045e194 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004ac249 : sub dh, dh ; jmp qword ptr [rax]
0x0000000000494d11 : sub dl, bh ; call qword ptr [rdx + 0x12fffa30]
0x000000000048012a : sub dl, dh ; call r11
0x000000000045c493 : sub dword ptr [rax - 6], eax ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000041f7ea : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004244ec : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f84a : sub dword ptr [rax], eax ; ret
0x000000000042df37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42df4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e09d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e1d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e1ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e327 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e33d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e48d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e5c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e5dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e717 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e72d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e867 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e87d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e9b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e9cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eb07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42eb1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ec57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ec6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eda7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42edbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eef7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ef0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f047 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f05d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f197 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f1ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43091d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430a6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ba7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430bbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430cf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430e5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430fad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4310fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431237 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43124d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431387 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43139d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004314d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4314ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431627 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43163d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431777 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43178d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004318c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4318dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431a17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431a2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431b67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431b7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042de93 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042de8f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042df3d : sub dword ptr [rdi], esp ; jmp r9
0x000000000042450b : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042d636 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042bfa7 : sub eax, -1 ; jne 0x42bfb8 ; vzeroupper ; ret
0x0000000000422e7a : sub eax, 0x10 ; ret
0x0000000000494e69 : sub eax, 0x2d50fffa ; cli ; call rax
0x0000000000494de9 : sub eax, 0x2d64fffa ; cli ; jmp rsp
0x0000000000469594 : sub eax, 0x83000000 ; ret
0x0000000000466965 : sub eax, 0x83000000 ; ret 0x8b01
0x0000000000466df5 : sub eax, 0xf410004 ; xchg eax, esp ; ret
0x0000000000424572 : sub eax, 0xf480002 ; ret 0x66c3
0x00000000004587c4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446a34 : sub eax, 1 ; ret
0x0000000000481b46 : sub eax, dword ptr [0] ; ret
0x000000000040389d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b0a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000402ee9 : sub eax, dword ptr [rax] ; jne 0x402eff ; jmp 0x402f19
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401bff : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045e136 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000041908e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000044875a : sub eax, dword ptr [rdx + rcx*4] ; je 0x448746 ; ret
0x00000000004246d2 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004183a3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000446b9d : sub eax, eax ; cmp eax, ecx ; jle 0x446be1 ; movsxd rax, ecx ; ret
0x0000000000480f94 : sub eax, eax ; ret
0x000000000042bff3 : sub eax, ecx ; je 0x42c009 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000417a79 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000484610 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000425c9c : sub eax, ecx ; ret
0x0000000000440b49 : sub eax, edi ; ret
0x00000000004745be : sub eax, edi ; shr rax, 2 ; ret
0x00000000004846f3 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000004183cb : sub eax, edx ; ret
0x00000000004749b0 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042bfbc : sub eax, edx ; vzeroupper ; ret
0x0000000000446bfd : sub eax, esi ; ret
0x0000000000480f93 : sub eax, r8d ; ret
0x00000000004a7c7e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000413dc0 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412996 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a6715 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044cef8 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000473b44 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x00000000004956a0 : sub edi, dword ptr [rsi] ; sti ; lcall ptr [rsi] ; sti ; call qword ptr [rsi]
0x00000000004010d3 : sub edi, ebp ; mov edi, 0x58b48ff ; ret 0x2b79
0x0000000000494e7d : sub edi, edx ; call rax
0x0000000000494cc1 : sub edi, edx ; jmp qword ptr [rax + 0x10fffa2a]
0x0000000000494dfd : sub edi, edx ; jmp rsp
0x0000000000494d41 : sub edi, edx ; push qword ptr [rdx + 0x2a] ; cli ; jmp rdx
0x00000000004183d0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004183c5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042b444 : sub edx, eax ; jbe 0x42b487 ; add rax, rdi ; ret
0x000000000042b454 : sub edx, eax ; jbe 0x42b489 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b464 : sub edx, eax ; jbe 0x42b489 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b474 : sub edx, eax ; jbe 0x42b489 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000494ec9 : sub edx, edi ; call qword ptr [rax]
0x0000000000494e89 : sub edx, edi ; jmp qword ptr [rax]
0x0000000000494d4d : sub edx, edi ; jmp rdx
0x0000000000423871 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000041336f : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000415764 : sub edx, esi ; sar rdx, 2 ; call 0x4119c8
0x00000000004ac309 : sub esi, esi ; call qword ptr [rax]
0x00000000004ac31d : sub esi, esi ; call qword ptr [rdx]
0x00000000004ac331 : sub esi, esi ; jmp qword ptr [rax]
0x000000000048a853 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fb46 : sub esp, 0x80 ; call 0x44bdf8
0x000000000040fb42 : sub esp, 0x80 ; call 0x44be28
0x0000000000492511 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000423841 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000417a78 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000422e79 : sub rax, 0x10 ; ret
0x0000000000446a33 : sub rax, 1 ; ret
0x0000000000481b45 : sub rax, qword ptr [0] ; ret
0x000000000041908d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000481b44 : sub rax, qword ptr fs:[0] ; ret
0x0000000000485302 : sub rax, r8 ; ret
0x0000000000440b48 : sub rax, rdi ; ret
0x00000000004745bd : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000446b03 : sub rax, rdx ; ret
0x0000000000440b9f : sub rax, rdx ; vzeroupper ; ret
0x0000000000446bfc : sub rax, rsi ; ret
0x000000000042b443 : sub rdx, rax ; jbe 0x42b488 ; add rax, rdi ; ret
0x0000000000415763 : sub rdx, rsi ; sar rdx, 2 ; call 0x4119c9
0x000000000048a852 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fb45 : sub rsp, 0x80 ; call 0x44bdf9
0x000000000040fb41 : sub rsp, 0x80 ; call 0x44be29
0x0000000000492510 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044be37 : syscall ; pop rdx ; pop rsi ; ret
0x0000000000474e65 : syscall ; ret
0x00000000004172e4 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000475555 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048afe3 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004b3038 : test al, 0x13 ; cld ; jmp qword ptr [rax]
0x000000000046c429 : test al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004adce4 : test al, 0x24 ; add byte ptr [rax], al ; cwde ; mov bl, 0xf6 ; call qword ptr [rdx]
0x000000000041031e : test al, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044acce : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004afab8 : test al, 0x84 ; stc ; call qword ptr [rbx]
0x00000000004b1778 : test al, 0x8e ; cli ; call qword ptr [rdx]
0x00000000004a6fd7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004abdc8 : test al, 0x99 ; cmc ; call rax
0x00000000004af648 : test al, 0xb7 ; clc ; call qword ptr [rax]
0x0000000000495075 : test al, 0xfa ; call rax
0x000000000047e815 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000425f5a : test al, al ; jne 0x425f48 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000477fc3 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000472bfc : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004199a8 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000041017f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000458eb1 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046abf9 : test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000040eaca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419d6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048590a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x0000000000444d7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000004441ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004186fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000412c7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000041183a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004186ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004175fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000444bba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000044f022 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046aafc : test byte ptr [rbp - 0x7c000018], bl ; ret
0x00000000004b0dc0 : test byte ptr [rbp], dl ; add byte ptr [rdx + rax - 6], bh ; jmp qword ptr [rdx]
0x000000000048c0eb : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048dc82 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000473d06 : test byte ptr [rcx - 3], 0xff ; cmove rax, rdx ; ret
0x0000000000423923 : test byte ptr [rcx], ch ; add bh, dh ; ret 0
0x0000000000456414 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x4563d7
0x000000000044b764 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x00000000004240a6 : test byte ptr [rdi], 0x84 ; ret
0x000000000044a2af : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449dc6 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000472f84 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000472f9c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000456819 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x4567dc
0x000000000041fdee : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472be4 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004218ee : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000421dee : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000469684 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045f094 : test byte ptr [rip - 0x7c000011], al ; ret
0x00000000004737dd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000453211 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000440a2d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004b5879 : test ch, bh ; call qword ptr [rbx]
0x00000000004afab9 : test cl, bh ; call qword ptr [rbx]
0x0000000000489eda : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004466bf : test cl, cl ; jne 0x4466b4 ; ret
0x000000000044676f : test cl, cl ; jne 0x446764 ; ret
0x0000000000446a2f : test cl, cl ; jne 0x446a28 ; sub rax, 1 ; ret
0x0000000000450ba5 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000444c04 : test dl, 0x40 ; jne 0x444bc9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444c32 : test dl, 4 ; jne 0x444bc9 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000040db46 : test dl, dl ; jne 0x40db28 ; ret
0x00000000004468df : test dl, dl ; jne 0x4468d8 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000480f07 : test dl, dl ; jne 0x480ee3 ; movsx eax, cl ; neg eax ; ret
0x0000000000491bd3 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000472bfd : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000468b66 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000402211 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044d5b1 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045eb09 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000469276 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000402210 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044d5b0 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042b3c8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000449ad9 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042d137 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d586 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c208 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000041fc28 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047570b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042d10d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d01d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cf2d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041d022 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x00000000004a4f44 : test dword ptr [rdi + 0x7e38fffd], eax ; std ; jmp qword ptr [rax]
0x000000000048e064 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041cfbc : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042ce52 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004735c3 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000449746 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000446442 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045f9d1 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000040fd1d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042d358 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a8cc0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432fd6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004636f3 : test eax, 0x8900020e ; ret
0x0000000000494341 : test eax, 0xaad0fff9 ; stc ; jmp qword ptr [rax]
0x000000000044bcdb : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000422df1 : test eax, eax ; je 0x422e08 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000042b118 : test eax, eax ; je 0x42b124 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044a4e8 : test eax, eax ; je 0x44a4f3 ; ret
0x000000000044d446 : test eax, eax ; je 0x44d455 ; ret
0x00000000004591c4 : test eax, eax ; je 0x4591ce ; call rax
0x000000000045a5c9 : test eax, eax ; je 0x45a5d3 ; call rax
0x00000000004850c0 : test eax, eax ; je 0x4850d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f528 : test eax, eax ; je 0x48f535 ; ret
0x000000000048f638 : test eax, eax ; je 0x48f645 ; ret
0x0000000000490dd1 : test eax, eax ; je 0x490de0 ; call rax
0x00000000004173ec : test eax, eax ; jne 0x4173e5 ; ret
0x0000000000418384 : test eax, eax ; jne 0x41837d ; ret
0x000000000042b3f5 : test eax, eax ; jne 0x42b456 ; xor eax, eax ; ret
0x000000000042b871 : test eax, eax ; jne 0x42b899 ; xor eax, eax ; vzeroupper ; ret
0x000000000044be10 : test eax, eax ; jne 0x44be0b ; pop rdx ; pop r10 ; ret
0x000000000048f567 : test eax, eax ; jne 0x48f575 ; ret
0x000000000048f582 : test eax, eax ; jne 0x48f595 ; ret
0x000000000048f7b2 : test eax, eax ; jne 0x48f7c5 ; ret
0x000000000047bcd0 : test eax, eax ; js 0x47bce7 ; pop rbx ; ret
0x0000000000469c65 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000004705ba : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044a789 : test ebp, ebp ; jne 0x44a7a8 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b2f4 : test ebp, ebp ; jne 0x44b320 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b327 : test ebp, ebp ; jne 0x44b379 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b353 : test ebp, ebp ; jne 0x44b3d9 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004902a1 : test ebp, ebp ; jne 0x490290 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490e5b : test ebp, ebp ; jne 0x490e48 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041af28 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042b330 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000421c30 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421728 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004549a9 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000478018 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444bf2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000474699 : test ecx, ecx ; jne 0x474658 ; mov rax, rdx ; ret
0x000000000044a7af : test edi, edi ; jne 0x44a7f9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a7d7 : test edi, edi ; jne 0x44a819 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3df : test edi, edi ; jne 0x44b44a ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b40f : test edi, edi ; jne 0x44b47b ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f44a : test edi, edi ; jne 0x47f425 ; ret
0x00000000004847bd : test edi, edi ; mov byte ptr [rsi], al ; jne 0x4847b1 ; mov rax, rsi ; ret
0x00000000004409e2 : test edx, edx ; je 0x4409f0 ; bsf eax, edx ; ret
0x00000000004409e2 : test edx, edx ; je 0x4409f1 ; bsf eax, edx ; ret
0x0000000000440a8b : test edx, edx ; je 0x440aa7 ; bsf rax, rdx ; ret
0x0000000000440a8b : test edx, edx ; je 0x440aa8 ; bsf rax, rdx ; ret
0x000000000044c71a : test edx, edx ; je 0x44c731 ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000047384a : test edx, edx ; je 0x473877 ; bsf rax, rdx ; ret
0x000000000047384a : test edx, edx ; je 0x473878 ; bsf rax, rdx ; ret
0x0000000000414833 : test edx, edx ; jne 0x414845 ; ret
0x00000000004164cf : test edx, edx ; jne 0x4164c5 ; ret
0x0000000000470a3f : test edx, edx ; jne 0x470a35 ; ret
0x00000000004743fa : test edx, edx ; jne 0x4743f5 ; ret
0x0000000000444be5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004590c8 : test esi, esi ; je 0x4590d2 ; call rsi
0x0000000000473741 : test esi, esi ; jne 0x473750 ; xor rax, rax ; ret
0x0000000000474401 : test esi, esi ; jne 0x474410 ; xor rax, rax ; ret
0x000000000045e894 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000444bff : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042b117 : test r8d, r8d ; je 0x42b125 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000474698 : test r9d, r9d ; jne 0x474659 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000422df0 : test rax, rax ; je 0x422e09 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000044a4e7 : test rax, rax ; je 0x44a4f4 ; ret
0x00000000004591c3 : test rax, rax ; je 0x4591cf ; call rax
0x000000000045a5c8 : test rax, rax ; je 0x45a5d4 ; call rax
0x00000000004850bf : test rax, rax ; je 0x4850d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490dd0 : test rax, rax ; je 0x490de1 ; call rax
0x00000000004173eb : test rax, rax ; jne 0x4173e6 ; ret
0x0000000000418383 : test rax, rax ; jne 0x41837e ; ret
0x000000000044a788 : test rbp, rbp ; jne 0x44a7a9 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b2f3 : test rbp, rbp ; jne 0x44b321 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004902a0 : test rbp, rbp ; jne 0x490291 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490e5a : test rbp, rbp ; jne 0x490e49 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f449 : test rdi, rdi ; jne 0x47f426 ; ret
0x0000000000440a8a : test rdx, rdx ; je 0x440aa8 ; bsf rax, rdx ; ret
0x0000000000440a8a : test rdx, rdx ; je 0x440aa9 ; bsf rax, rdx ; ret
0x0000000000473849 : test rdx, rdx ; je 0x473878 ; bsf rax, rdx ; ret
0x0000000000473849 : test rdx, rdx ; je 0x473879 ; bsf rax, rdx ; ret
0x0000000000414832 : test rdx, rdx ; jne 0x414846 ; ret
0x00000000004164ce : test rdx, rdx ; jne 0x4164c6 ; ret
0x0000000000470a3e : test rdx, rdx ; jne 0x470a36 ; ret
0x00000000004590c7 : test rsi, rsi ; je 0x4590d3 ; call rsi
0x0000000000473740 : test rsi, rsi ; jne 0x473751 ; xor rax, rax ; ret
0x0000000000474400 : test rsi, rsi ; jne 0x474411 ; xor rax, rax ; ret
0x0000000000415583 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043859a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000044734c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446d15 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447ed1 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000446d19 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004474d8 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044757f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000438586 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043856d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000004472b5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000447e3b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000447423 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x00000000004473f5 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000447dc2 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000446d0b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000446d0f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447992 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000447a58 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000447f4d : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000446d24 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000446d28 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000004388a3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043873c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043853e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000438502 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000438a05 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000446ec8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000446e2b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000446cca : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043ebe1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042b718 : vzeroupper ; ret
0x000000000042b8f0 : vzeroupper ; xor eax, eax ; ret
0x00000000004769a5 : wait ; clc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000478ae9 : wait ; jns 0x478aea ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000460d81 : wait ; pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000494355 : wait ; stc ; call rax
0x000000000042a763 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043de8f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a853 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a673 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000460142 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000043fadc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f2fc : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f6ec : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef0c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d84c : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000448152 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042b0bb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043e9ef : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e1cf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043d9af : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044f088 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042ac13 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043f0ab : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e50f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3a3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043dcef : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d4cf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e6af : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042adf3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a583 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000048c9ec : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042afd3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043f59c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043edbc : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fecc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000454263 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042aee3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000494ac4 : xchg byte ptr [rdx + rdi*8], dh ; call qword ptr [rsi]
0x000000000043d80f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a825 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a915 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a735 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495894 : xchg byte ptr [rip + 0x3d44fffb], bh ; sti ; jmp qword ptr [rcx]
0x000000000041ad25 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043d945 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e645 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e165 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f49d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000455355 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043fdcd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a493 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004a4e45 : xchg ch, bh ; call rax
0x00000000004a4e5d : xchg ch, bh ; dec dword ptr [rax] ; ja 0x4a4e66 ; jmp rax
0x00000000004a4e9d : xchg ch, bh ; dec eax ; jne 0x4a4ea6 ; call rax
0x000000000048264a : xchg ch, bh ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004a4e41 : xchg ch, bh ; jmp qword ptr [rbx - 0x2f00027a]
0x000000000043e985 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dc85 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d7a5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e4a5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f5ed : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ee0d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a645 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a465 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a555 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a375 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046f159 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046e4af : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x0000000000402d33 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x000000000047b6e6 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000044f174 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x000000000046204c : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004a698c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048b09a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000044be0e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44be0d ; pop rdx ; pop r10 ; ret
0x000000000046f344 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x00000000004699ba : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000462bc4 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x0000000000478d30 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046c66c : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004a6b2b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004af621 : xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004af635 : xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x0000000000413847 : xchg eax, ebp ; ja 0x41387b ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045862b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044fd9f : xchg eax, ebp ; ret
0x000000000048ac80 : xchg eax, ebp ; ret 0x145
0x0000000000477d6a : xchg eax, ebp ; ret 0x2041
0x0000000000477e2a : xchg eax, ebp ; ret 0x2044
0x0000000000449ebc : xchg eax, ebp ; ret 0x3948
0x000000000041dd7b : xchg eax, ebp ; ret 0x8348
0x00000000004799f0 : xchg eax, ebp ; ret 0xc283
0x0000000000420f3d : xchg eax, ebp ; ret 0xd020
0x000000000040df25 : xchg eax, ebp ; ret 0xd021
0x000000000046424a : xchg eax, ebp ; ret 0xd120
0x0000000000410042 : xchg eax, ebp ; ret 0xdaf7
0x000000000044d481 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c7fa : xchg eax, ebp ; ret 0xf45
0x000000000041884d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000494101 : xchg eax, ebp ; stc ; jmp rcx
0x00000000004941c5 : xchg eax, ebp ; stc ; push qword ptr [rax] ; xchg eax, esi ; stc ; call rax
0x0000000000411272 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046ba27 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042c2a0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004b1809 : xchg eax, ebx ; cli ; call qword ptr [rcx]
0x00000000004b17f1 : xchg eax, ebx ; cli ; call qword ptr [rdi]
0x00000000004abd29 : xchg eax, ebx ; cmc ; call qword ptr [rdx]
0x00000000004abd3d : xchg eax, ebx ; cmc ; call rsp
0x000000000044407c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042da42 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000045b208 : xchg eax, ebx ; ret 0x3948
0x000000000041206c : xchg eax, ebx ; ret 0x3949
0x0000000000420690 : xchg eax, ebx ; ret 0x3d83
0x00000000004712e5 : xchg eax, ebx ; ret 0x840
0x000000000045bced : xchg eax, ebx ; ret 0x854d
0x000000000041d029 : xchg eax, ebx ; ret 0xffff
0x0000000000494135 : xchg eax, ebx ; stc ; call qword ptr [rsi]
0x00000000004941b5 : xchg eax, ebx ; stc ; jmp rax
0x0000000000482649 : xchg eax, ebx ; xchg ch, bh ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000043ea91 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000044c2ab : xchg eax, ecx ; ret 0x26
0x00000000004941a5 : xchg eax, ecx ; stc ; call rax
0x00000000004940e1 : xchg eax, ecx ; stc ; jmp qword ptr [rcx + 0x21fff991]
0x00000000004940e5 : xchg eax, ecx ; stc ; jmp qword ptr [rcx]
0x000000000043d1bf : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000410142 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004148a4 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004b4fb1 : xchg eax, edi ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, 0xfd ; jmp qword ptr [rdx]
0x000000000040d2c1 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004247c5 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004761dd : xchg eax, edi ; out 2, al ; add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000041eebb : xchg eax, edi ; ret 0x394c
0x000000000041f3a1 : xchg eax, edi ; ret 0xfae9
0x000000000041f989 : xchg eax, edi ; ret 0xfbe9
0x000000000044ba3b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004afe99 : xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004a6fd8 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000494614 : xchg eax, edx ; adc edi, edx ; jmp qword ptr [rdx]
0x000000000047afdf : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004a889d : xchg eax, edx ; jae 0x4a887a ; push rsi ; pop rdx ; je 0x4a886f ; ret 0xacfc
0x0000000000482c76 : xchg eax, edx ; ret 0x2948
0x000000000048294e : xchg eax, edx ; ret 0x294c
0x0000000000405c58 : xchg eax, edx ; ret 0x8548
0x0000000000483155 : xchg eax, edx ; ret 0x8949
0x000000000044ba3e : xchg eax, edx ; ret 0xd029
0x00000000004a698f : xchg eax, edx ; ret 0xf869
0x0000000000446bed : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004941ad : xchg eax, edx ; stc ; call rax
0x00000000004940e9 : xchg eax, edx ; stc ; jmp qword ptr [rcx + 0x21fff992]
0x00000000004940ed : xchg eax, edx ; stc ; jmp qword ptr [rcx]
0x00000000004b2195 : xchg eax, edx ; sti ; jmp qword ptr [rax]
0x000000000042b11c : xchg eax, edx ; sub eax, edx ; ret
0x0000000000494d14 : xchg eax, edx ; xor dl, bh ; call qword ptr [rdx]
0x00000000004945b0 : xchg eax, esi ; adc dl, bh ; jmp qword ptr [rsi]
0x000000000042c5a0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004347d3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000456071 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004481e4 : xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000042c65d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c5bb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448e41 : xchg eax, esi ; ret 0xc085
0x00000000004a922c : xchg eax, esi ; ret 0xcd11
0x0000000000448e9f : xchg eax, esi ; ret 0xd284
0x000000000042c60c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494311 : xchg eax, esi ; stc ; call qword ptr [rax]
0x00000000004941c9 : xchg eax, esi ; stc ; call rax
0x0000000000494109 : xchg eax, esi ; stc ; jmp qword ptr [rcx]
0x000000000046c847 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004add9c : xchg eax, esp ; mov ah, 0xf6 ; call qword ptr [rsi]
0x00000000004a943f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93d0 ; ret 0x48f
0x00000000004666a2 : xchg eax, esp ; ret
0x0000000000450e3b : xchg eax, esp ; ret 0x1f0f
0x0000000000449f8b : xchg eax, esp ; ret 0x2044
0x000000000048109c : xchg eax, esp ; ret 0x3d
0x000000000041c9ee : xchg eax, esp ; ret 0x3de9
0x000000000046d9ff : xchg eax, esp ; ret 0x7f3c
0x0000000000484d01 : xchg eax, esp ; ret 0x950f
0x0000000000402c84 : xchg eax, esp ; ret 0xb60f
0x0000000000446bf0 : xchg eax, esp ; ret 0xc085
0x000000000044a2b1 : xchg eax, esp ; ret 0xc221
0x0000000000476885 : xchg eax, esp ; ret 0xc283
0x0000000000449dc8 : xchg eax, esp ; ret 0xca21
0x0000000000401263 : xchg eax, esp ; ret 0xd284
0x000000000044f8c6 : xchg eax, esp ; ret 0xd5e9
0x00000000004106ad : xchg eax, esp ; ret 0xdaf7
0x000000000048c79b : xchg eax, esp ; ret 0xf45
0x0000000000422e3a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000041adf4 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004afdf8 : xchg rax, rdx ; stc ; jmp qword ptr [rcx]
0x00000000004a2019 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042d909 : xlatb ; add r9, r11 ; jmp r9
0x000000000047598f : xlatb ; ja 0x4759bc ; ret
0x0000000000446f53 : xlatb ; jb 0x446f5e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d5ad : xlatb ; jmp rdi
0x00000000004a7a03 : xlatb ; jo 0x4a7a7f ; mov ebp, 0xfb67d10d ; ret
0x0000000000484842 : xlatb ; mov byte ptr [rsi], al ; jne 0x484828 ; mov rax, rsi ; ret
0x000000000042b244 : xlatb ; ret
0x00000000004a8ea6 : xlatb ; ret 0x4e27
0x0000000000473447 : xlatb ; ret 0x94c
0x000000000042b22f : xlatb ; ret 0xc085
0x0000000000425d50 : xlatb ; ret 0xc148
0x000000000042beb4 : xlatb ; ret 0xe883
0x0000000000440a04 : xlatb ; ret 0xf66
0x000000000042c078 : xlatb ; ret 0xff2d
0x000000000042b611 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004735f5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b3f3 : xlatb ; rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000042b932 : xlatb ; rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x0000000000440782 : xlatb ; rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000444ba6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000425c36 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000425af6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000004259b6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000425876 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000425736 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004255f6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000004254b6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000425376 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000425236 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000004250f6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000424fb6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000424e76 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000424d36 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000424bf6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000424ab6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000444ba2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004733e5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004733f6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000494a4c : xor ah, bh ; stc ; lcall ptr [rsi + 0x33] ; cli ; jmp rax
0x0000000000494478 : xor ah, bl ; stc ; call qword ptr [rax]
0x00000000004247aa : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a698a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000448a36 : xor al, 0x27 ; add al, ch ; ret 0xbb75
0x0000000000495904 : xor al, 0x3d ; sti ; inc dword ptr [rbp + rdi - 5] ; jmp qword ptr [rcx]
0x00000000004956f4 : xor al, 0x3d ; sti ; jmp qword ptr [rcx]
0x0000000000459ec2 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000046ef9b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048dd32 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a7b6a : xor al, 0xd8 ; ret
0x00000000004590c5 : xor al, 0xf0 ; test rsi, rsi ; je 0x4590d5 ; call rsi
0x0000000000452c3e : xor al, 0xf6 ; ret
0x0000000000494ac5 : xor al, 0xfa ; call qword ptr [rsi]
0x0000000000494c85 : xor al, 0xfa ; call rax
0x0000000000494c81 : xor al, 0xfa ; inc dword ptr [rax + 0x34] ; cli ; call rax
0x0000000000494c05 : xor al, 0xfa ; jmp rsp
0x00000000004763a9 : xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x00000000004b4fb5 : xor al, 0xfd ; jmp qword ptr [rdx]
0x000000000045fbac : xor al, 1 ; jmp 0x45de06
0x00000000004769a2 : xor al, ch ; add byte ptr [rbx + 0x3948fff8], bl ; ret
0x00000000004943bc : xor bh, bl ; stc ; call qword ptr [rax]
0x00000000004944c8 : xor bl, ah ; stc ; push qword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x000000000042b47c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000049524d : xor bl, bh ; dec dword ptr [rsi] ; xor bl, bh ; jmp qword ptr [rbx]
0x0000000000495251 : xor bl, bh ; jmp qword ptr [rbx]
0x00000000004943f4 : xor bl, bl ; stc ; call qword ptr [rax]
0x000000000042b34d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004114d2 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000045b968 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004401b1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000440612 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000004114d3 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004942b0 : xor byte ptr [rax - 0x4dbf0007], 0xf9 ; jmp qword ptr [rax]
0x000000000049433c : xor byte ptr [rax - 0x567f0007], ch ; stc ; call rax
0x000000000044acca : xor byte ptr [rax - 0x75], cl ; jge 0x44ac80 ; mov r12d, r14d ; call r15
0x0000000000440d6f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047417f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048abe8 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000471a22 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044d24f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402f68 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041182b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e9d9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e913 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004743cc : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004ab86c : xor byte ptr [rax], al ; add byte ptr [rax], al ; fst qword ptr [rdx - 0xb] ; call qword ptr [rbx]
0x000000000040e9ff : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000448233 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000047195a : xor byte ptr [rax], al ; je 0x471965 ; ret
0x000000000048e14e : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004471a5 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000004668a9 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000414bb6 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044f61a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046c7ee : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x0000000000495fa4 : xor byte ptr [rbx - 5], ch ; call qword ptr [rax]
0x0000000000494cc0 : xor byte ptr [rbx], ch ; cli ; jmp qword ptr [rax + 0x10fffa2a]
0x000000000048aa05 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000478643 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000494210 : xor byte ptr [rcx - 0x4cbf0007], 0xf9 ; jmp qword ptr [rax]
0x0000000000494250 : xor byte ptr [rcx - 0x4d0f0007], dh ; stc ; call rax
0x000000000049406c : xor byte ptr [rcx - 7], ch ; jmp qword ptr [rax]
0x000000000041182c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412b17 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000410143 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004941dc : xor byte ptr [rdi - 0x46ef0007], dh ; stc ; call qword ptr [rax]
0x0000000000495070 : xor byte ptr [rdi - 0x577f0006], ah ; cli ; call rax
0x00000000004af1c0 : xor byte ptr [rdi - 9], al ; jmp qword ptr [rbx]
0x0000000000470b00 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000494ec4 : xor byte ptr [rdx], ch ; cli ; jmp qword ptr [rax + 0x10fffa29]
0x000000000049497c : xor byte ptr [rip + 0x4b0fffa], al ; cli ; jmp qword ptr [rax]
0x00000000004b06bf : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042c34f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004733ac : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b34e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004af66c : xor byte ptr [rsi], bh ; add byte ptr [rax], al ; rcr al, 1 ; clc ; call qword ptr [rax]
0x00000000004b2e50 : xor byte ptr [rsp + rdi*8], al ; jmp rdx
0x00000000004944cc : xor ch, ah ; stc ; jmp rax
0x00000000004943d8 : xor ch, bl ; stc ; call qword ptr [rax]
0x000000000041225d : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047dd43 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045b4d7 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d1de : xor cl, byte ptr [rax] ; jne 0x48d203 ; mov rax, qword ptr [rax] ; ret
0x00000000004940b8 : xor cl, byte ptr [rdi - 0x6fcd0007] ; stc ; call rax
0x0000000000405c80 : xor cl, ch ; ret
0x000000000045a329 : xor dh, dh ; ret 0x4002
0x0000000000494d15 : xor dl, bh ; call qword ptr [rdx]
0x0000000000494e95 : xor dl, bh ; call rax
0x0000000000494e55 : xor dl, bh ; jmp rax
0x000000000042380a : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004800fe : xor dl, dh ; jmp r11
0x0000000000480210 : xor dl, dh ; ret
0x0000000000465e7d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x000000000044c21f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d24d : xor dword ptr [rax], ecx ; jne 0x48d25c ; mov qword ptr [rax], rdx ; ret
0x000000000041bf09 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000423892 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000424551 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046b7fe : xor eax, 0x24b61d ; jmp rax
0x00000000004187cf : xor eax, 0x2a ; add byte ptr [rax], al ; ret
0x0000000000494b39 : xor eax, 0x3552fffa ; cli ; jmp rdx
0x0000000000494a79 : xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x0000000000447763 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a7da : xor eax, 0x7d8b48 ; call r12
0x000000000046578a : xor eax, 0x89ffffe6 ; ret
0x000000000040e9d6 : xor eax, dword ptr [0x30] ; call rax
0x00000000004157d0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004165b4 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045ca19 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047598b : xor eax, eax ; cmp rdi, rdx ; ja 0x4759c0 ; ret
0x000000000044bde7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000414760 : xor eax, eax ; jmp 0x41472a
0x000000000045d0fc : xor eax, eax ; jmp 0x45d0c4
0x000000000045d0fb : xor eax, eax ; jmp 0x45d0c5
0x0000000000475d78 : xor eax, eax ; leave ; ret
0x0000000000473192 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405e1f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041480b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ece5 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004238dc : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412e82 : xor eax, eax ; pop rbx ; ret
0x000000000040ec2d : xor eax, eax ; ret
0x0000000000425f5e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000414830 : xor eax, eax ; test rdx, rdx ; jne 0x414848 ; ret
0x000000000042b83c : xor eax, eax ; vzeroupper ; ret
0x0000000000458c88 : xor ebp, ecx ; ret 0xfffd
0x000000000047a250 : xor ebx, ebx ; jmp 0x47a219
0x0000000000458986 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000457959 : xor ecx, ecx ; call r15
0x0000000000473f89 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000044c1fc : xor edi, dword ptr [rax] ; ret 0x2f75
0x0000000000400b59 : xor edi, eax ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x000000000041abd1 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000494c4d : xor edi, edx ; call qword ptr [rax]
0x0000000000494a51 : xor edi, edx ; jmp rax
0x0000000000494c49 : xor edi, edx ; ljmp ptr [rdx + 0x33] ; cli ; call qword ptr [rax]
0x000000000040e910 : xor edx, dword ptr [0x30] ; call rdx
0x000000000044e8a3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044d47c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d46c
0x000000000046fe93 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x46fe68
0x0000000000417183 : xor edx, edx ; jmp rax
0x0000000000473f8b : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000041f48c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000478ae6 : xor esi, esi ; call 0x400491
0x000000000046151c : xor esi, esi ; jmp rax
0x0000000000457958 : xor r9d, r9d ; call r15
0x000000000040e9d5 : xor rax, qword ptr [0x30] ; call rax
0x000000000040e9d4 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000444bc0 : xor rax, rax ; ret
0x000000000040e90f : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e90e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 9069
